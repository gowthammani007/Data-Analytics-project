{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5f1b0af1",
   "metadata": {},
   "source": [
    "   # Computational Analysis of Social Complexity\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63f2deb5",
   "metadata": {},
   "source": [
    "# Project Title:  \n",
    "        \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cc7f74e",
   "metadata": {},
   "source": [
    "##                                         “Dynamics of LinkedIn Connections” "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c97020d9",
   "metadata": {},
   "source": [
    "# Project Member Names: \n",
    "\n",
    "- Member 1 : Gowtham Mani\n",
    "\n",
    "- Member 2 : Loka Snega Babu\n",
    "\n",
    "- Member 3 : Sahaanah Jayakumar"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e0723e3",
   "metadata": {},
   "source": [
    "# Introduction:\n",
    "\n",
    "  The focus of this project is to educate and analyse the evolution of the strength and nature of ties within the LinkedIn network over time. The objective is to identify the patterns and trends in network dynamics by exploring the concepts of Communities, Homophily and Triadic Closure to enhance the understanding of social complexity."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a88b2e6",
   "metadata": {},
   "source": [
    "# Dataset:\n",
    "\n",
    "The intended approach involves collecting data from our own LinkedIn connections through the LinkedIn API, including timestamps and relevant attributes. This dataset will serve as the foundation for analysing the social connections."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59bc97bd",
   "metadata": {},
   "source": [
    "# Models to Define:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81aa6876",
   "metadata": {},
   "source": [
    "The formulation of models is guided by the research questions mentioned below:\n",
    "\n",
    "Temporal Analysis:\n",
    "\n",
    "     How do the strength and nature of ties in LinkedIn networks evolve over time and are there patterns or trends that can be identified?\n",
    "Homophily:\n",
    "\n",
    "      To what extent do LinkedIn connections exhibit homophily based on attributes such as education and job titles?\n",
    "Network Structure:\n",
    "\n",
    "     How does the overall network structure of LinkedIn connections exhibit characteristics of strong and weak ties?\n",
    "Triadic Closure:\n",
    "\n",
    "      How prevalent is triadic closure in LinkedIn networks, and does it contributes to the formation of stronger ties?\n",
    "Community Detection:\n",
    "\n",
    "     Can distinct communities be identified within LinkedIn networks and do these communities align with specific interests or affiliations?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e37b3aa7",
   "metadata": {},
   "source": [
    "# Code:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3de0945d",
   "metadata": {},
   "source": [
    "## Displaying the dataset "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d1220d93",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>120×8 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">95 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">source</th><th style = \"text-align: left;\">Target</th><th style = \"text-align: left;\">Company</th><th style = \"text-align: left;\">Position</th><th style = \"text-align: left;\">Connected On</th><th style = \"text-align: left;\">University</th><th style = \"text-align: left;\">Skills</th><th style = \"text-align: left;\">City</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String15\" style = \"text-align: left;\">String15</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Student Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Barath</td><td style = \"text-align: left;\">Trimble Inc.</td><td style = \"text-align: left;\">Working Student (Automotive GNSS / INS )</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Sri Krishna College of Technology</td><td style = \"text-align: left;\">Python, Java, SQL</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Maria</td><td style = \"text-align: left;\">Amazon FC Graben GmbH</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">Amazon</td><td style = \"text-align: left;\">Digital Associate</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: left;\">DiFACTO Robotics and Automation</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: left;\">Stealth Mode Startup - Data and Analytics</td><td style = \"text-align: left;\">Founder</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Senior Software Engineer - L3</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: left;\">Wells Fargo</td><td style = \"text-align: left;\">Vice President  - Systems Operations Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: left;\">ST JOHNS RIVER-TO-SEA LOOP ALLIANCE</td><td style = \"text-align: left;\">Data Analyst Intern</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Tamilmani</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Associate - Projects</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Meril</td><td style = \"text-align: left;\">Higher Education Forum</td><td style = \"text-align: left;\">Content Team</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Lakshman</td><td style = \"text-align: left;\">Hitachi Energy</td><td style = \"text-align: left;\">Intern</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Santhosh</td><td style = \"text-align: left;\">Ford Motor Company</td><td style = \"text-align: left;\">Data Strategy Analyst</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">109</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">Accenture</td><td style = \"text-align: left;\">Associate Manufacturing Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">110</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: left;\">DiFACTO Robotics and Automation</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">111</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: left;\">Stealth Mode Startup - Data and Analytics</td><td style = \"text-align: left;\">Founder</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">112</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Senior Software Engineer - L3</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">113</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: left;\">Wells Fargo</td><td style = \"text-align: left;\">Vice President  - Systems Operations Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">114</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: left;\">ST JOHNS RIVER-TO-SEA LOOP ALLIANCE</td><td style = \"text-align: left;\">Data Analyst Intern</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">115</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Arjun</td><td style = \"text-align: left;\">Tata Consultancy Services</td><td style = \"text-align: left;\">System Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">116</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Rithika</td><td style = \"text-align: left;\">ZF Group</td><td style = \"text-align: left;\">Supply Chain Management</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bharathiyar University</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">117</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Sruthi</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Quality Analyst</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">118</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Kaarthicsudhan</td><td style = \"text-align: left;\">SchuF Speciality Valves India Pvt Ltd </td><td style = \"text-align: left;\">Process Project Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">119</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Ajay</td><td style = \"text-align: left;\">SHV Energy</td><td style = \"text-align: left;\">Executive Trainee - Operations </td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Thiyagarajar College of Engineering</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">120</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Thirumalai</td><td style = \"text-align: left;\">Wipro Limited</td><td style = \"text-align: left;\">Project Engineer</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Hindustan College of Technology</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Bangalore</td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|ccccc}\n",
       "\t& source & Target & Company & Position & \\\\\n",
       "\t\\hline\n",
       "\t& String15 & String31 & String & String & \\\\\n",
       "\t\\hline\n",
       "\t1 & Gowtham & Snega & Cognizant & Student Manager & $\\dots$ \\\\\n",
       "\t2 & Gowtham & Barath & Trimble Inc. & Working Student (Automotive GNSS / INS ) & $\\dots$ \\\\\n",
       "\t3 & Gowtham & Maria & Amazon FC Graben GmbH & Automation Engineer & $\\dots$ \\\\\n",
       "\t4 & Gowtham & Vignesh & Amazon & Digital Associate & $\\dots$ \\\\\n",
       "\t5 & Gowtham & Iqjas & DiFACTO Robotics and Automation & Robotics Engineer & $\\dots$ \\\\\n",
       "\t6 & Gowtham & Karthik & Stealth Mode Startup - Data and Analytics & Founder & $\\dots$ \\\\\n",
       "\t7 & Gowtham & Venkatesh & Curl & Senior Software Engineer - L3 & $\\dots$ \\\\\n",
       "\t8 & Gowtham & Suseendrababu & Wells Fargo & Vice President  - Systems Operations Manager & $\\dots$ \\\\\n",
       "\t9 & Gowtham & Harishma & ST JOHNS RIVER-TO-SEA LOOP ALLIANCE & Data Analyst Intern & $\\dots$ \\\\\n",
       "\t10 & Gowtham & Tamilmani & Cognizant & Associate - Projects & $\\dots$ \\\\\n",
       "\t11 & Gowtham & Meril & Higher Education Forum & Content Team & $\\dots$ \\\\\n",
       "\t12 & Gowtham & Lakshman & Hitachi Energy & Intern & $\\dots$ \\\\\n",
       "\t13 & Gowtham & Santhosh & Ford Motor Company & Data Strategy Analyst & $\\dots$ \\\\\n",
       "\t14 & Gowtham & Suhaina & Netcracker Technology & Associate Business Analyst & $\\dots$ \\\\\n",
       "\t15 & Gowtham & Kiran & DSCPU & Campus hero  & $\\dots$ \\\\\n",
       "\t16 & Gowtham & Debasish & Biorad Medisys Pvt Ltd & G.M. R\\&D & $\\dots$ \\\\\n",
       "\t17 & Gowtham & Pradeep & Self-employed & Oracle EBS Techno Functional Consultant & $\\dots$ \\\\\n",
       "\t18 & Gowtham & Subhendra Kr. & Naresh i Technologies & Oracle Database Administrator & $\\dots$ \\\\\n",
       "\t19 & Gowtham & vasanth & MoEVing & Operations Manager & $\\dots$ \\\\\n",
       "\t20 & Gowtham & Barath & Amazon & Digital Associate & $\\dots$ \\\\\n",
       "\t21 & Gowtham & Senthilmani & SAM ROBOTICS \\& AUTOMATION & Managing Director & $\\dots$ \\\\\n",
       "\t22 & Gowtham & Sakthivel  & TRAPO & Project Intern & $\\dots$ \\\\\n",
       "\t23 & Gowtham & Steve & Kaiko & Research Analyst  & $\\dots$ \\\\\n",
       "\t24 & Gowtham & Tarun & Plant Lipids Private Limited & Purchase Officer & $\\dots$ \\\\\n",
       "\t25 & Gowtham & Surya & University of Michigan-Dearborn & Graduate Student Research Assistant & $\\dots$ \\\\\n",
       "\t26 & Gowtham & Annamalai & Hitachi Energy & Intern & $\\dots$ \\\\\n",
       "\t27 & Gowtham & Bani Immanuel & i-exceed  & Scrum Master - Trainee & $\\dots$ \\\\\n",
       "\t28 & Gowtham & Indrajith & MulticoreWare Inc & Senior Software Engineer & $\\dots$ \\\\\n",
       "\t29 & Gowtham & Prakash & PSG College of Technology & Robotics Developer & $\\dots$ \\\\\n",
       "\t30 & Gowtham & Vijaya rajan & AROBOTNX Solutions Pvt Ltd & Sr. Engineer - Projects & $\\dots$ \\\\\n",
       "\t$\\dots$ & $\\dots$ & $\\dots$ & $\\dots$ & $\\dots$ &  \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m120×8 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m source   \u001b[0m\u001b[1m Target         \u001b[0m\u001b[1m Company                           \u001b[0m\u001b[1m Position  \u001b[0m ⋯\n",
       "     │\u001b[90m String15 \u001b[0m\u001b[90m String31       \u001b[0m\u001b[90m String                            \u001b[0m\u001b[90m String    \u001b[0m ⋯\n",
       "─────┼──────────────────────────────────────────────────────────────────────────\n",
       "   1 │ Gowtham   Snega           Cognizant                          Student Ma ⋯\n",
       "   2 │ Gowtham   Barath          Trimble Inc.                       Working St\n",
       "   3 │ Gowtham   Maria           Amazon FC Graben GmbH              Automation\n",
       "   4 │ Gowtham   Vignesh         Amazon                             Digital As\n",
       "   5 │ Gowtham   Iqjas           DiFACTO Robotics and Automation    Robotics E ⋯\n",
       "   6 │ Gowtham   Karthik         Stealth Mode Startup - Data and …  Founder\n",
       "   7 │ Gowtham   Venkatesh       Curl                               Senior Sof\n",
       "   8 │ Gowtham   Suseendrababu   Wells Fargo                        Vice Presi\n",
       "   9 │ Gowtham   Harishma        ST JOHNS RIVER-TO-SEA LOOP ALLIA…  Data Analy ⋯\n",
       "  10 │ Gowtham   Tamilmani       Cognizant                          Associate\n",
       "  11 │ Gowtham   Meril           Higher Education Forum             Content Te\n",
       "  ⋮  │    ⋮            ⋮                         ⋮                             ⋱\n",
       " 111 │ Snega     Karthik         Stealth Mode Startup - Data and …  Founder\n",
       " 112 │ Snega     Venkatesh       Curl                               Senior Sof ⋯\n",
       " 113 │ Snega     Suseendrababu   Wells Fargo                        Vice Presi\n",
       " 114 │ Snega     Harishma        ST JOHNS RIVER-TO-SEA LOOP ALLIA…  Data Analy\n",
       " 115 │ Snega     Arjun           Tata Consultancy Services          System Eng\n",
       " 116 │ Snega     Rithika         ZF Group                           Supply Cha ⋯\n",
       " 117 │ Snega     Sruthi          Curl                               Quality An\n",
       " 118 │ Snega     Kaarthicsudhan  SchuF Speciality Valves India Pv…  Process Pr\n",
       " 119 │ Snega     Ajay            SHV Energy                         Executive\n",
       " 120 │ Snega     Thirumalai      Wipro Limited                      Project En ⋯\n",
       "\u001b[36m                                                   5 columns and 99 rows omitted\u001b[0m"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Importing the necessary packages\n",
    "using DataFrames, CSV\n",
    "\n",
    "# Loading the LinkedIn dataset\n",
    "file_path = \"dataset_updated.csv\"\n",
    "f = CSV.read(file_path, DataFrame) \n",
    "f\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4ada3c19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-799961c7-1\">\n",
       "  <g transform=\"translate(61.1,49.14)\">\n",
       "    <path fill=\"none\" d=\"M-7.23,-6.93 L7.23,6.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.39,50.06)\">\n",
       "    <path fill=\"none\" d=\"M-16.12,-8.14 L16.12,8.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.86,42.2)\">\n",
       "    <path fill=\"none\" d=\"M-6.28,-0.81 L6.28,0.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.96,38.2)\">\n",
       "    <path fill=\"none\" d=\"M-7.52,2.43 L7.52,-2.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.84,51.87)\">\n",
       "    <path fill=\"none\" d=\"M-8.12,-9.59 L8.12,9.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.72,35.02)\">\n",
       "    <path fill=\"none\" d=\"M-8.56,5.3 L8.56,-5.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.13,46.17)\">\n",
       "    <path fill=\"none\" d=\"M-10.76,-4.36 L10.76,4.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.13,49.47)\">\n",
       "    <path fill=\"none\" d=\"M-3.71,-7.09 L3.71,7.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.18,43.15)\">\n",
       "    <path fill=\"none\" d=\"M-10.61,-1.7 L10.61,1.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.25,45.11)\">\n",
       "    <path fill=\"none\" d=\"M-6.01,-3.17 L6.01,3.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.61,37.12)\">\n",
       "    <path fill=\"none\" d=\"M0.12,2.76 L-0.12,-2.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.85,53.79)\">\n",
       "    <path fill=\"none\" d=\"M6.28,-11.42 L-6.28,11.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.68,34.08)\">\n",
       "    <path fill=\"none\" d=\"M0.09,5.79 L-0.09,-5.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.27,36.94)\">\n",
       "    <path fill=\"none\" d=\"M3.41,3.19 L-3.41,-3.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.02,44.13)\">\n",
       "    <path fill=\"none\" d=\"M9.06,-2.5 L-9.06,2.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.64,51.02)\">\n",
       "    <path fill=\"none\" d=\"M9.07,-8.81 L-9.07,8.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.22,51.17)\">\n",
       "    <path fill=\"none\" d=\"M4.89,-8.8 L-4.89,8.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.05,42.15)\">\n",
       "    <path fill=\"none\" d=\"M5.93,-0.76 L-5.93,0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.42,45.35)\">\n",
       "    <path fill=\"none\" d=\"M5.03,-3.3 L-5.03,3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.23,48.36)\">\n",
       "    <path fill=\"none\" d=\"M6.46,-6.16 L-6.46,6.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.57,39.35)\">\n",
       "    <path fill=\"none\" d=\"M5.5,1.38 L-5.5,-1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.49,47.5)\">\n",
       "    <path fill=\"none\" d=\"M9.86,-5.53 L-9.86,5.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.74,33.8)\">\n",
       "    <path fill=\"none\" d=\"M-3.31,6.16 L3.31,-6.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.85,34.81)\">\n",
       "    <path fill=\"none\" d=\"M17.29,5.8 L-17.29,-5.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.53,28.5)\">\n",
       "    <path fill=\"none\" d=\"M12.17,11.63 L-12.17,-11.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.57,26.28)\">\n",
       "    <path fill=\"none\" d=\"M8.48,13.7 L-8.48,-13.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.31,31.34)\">\n",
       "    <path fill=\"none\" d=\"M15.08,8.99 L-15.08,-8.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.28,39.17)\">\n",
       "    <path fill=\"none\" d=\"M18.69,1.83 L-18.69,-1.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.68,24.75)\">\n",
       "    <path fill=\"none\" d=\"M3.79,15.14 L-3.79,-15.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.18,34.84)\">\n",
       "    <path fill=\"none\" d=\"M-11.87,5.61 L11.87,-5.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.04,38.52)\">\n",
       "    <path fill=\"none\" d=\"M-16.47,2.39 L16.47,-2.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.47,35.91)\">\n",
       "    <path fill=\"none\" d=\"M-15.02,4.73 L15.02,-4.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.55,41.3)\">\n",
       "    <path fill=\"none\" d=\"M-14.94,-0.12 L14.94,0.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.32,54.46)\">\n",
       "    <path fill=\"none\" d=\"M-1.39,-12 L1.39,12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.81,50.94)\">\n",
       "    <path fill=\"none\" d=\"M-0.89,-8.48 L0.89,8.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.11,54)\">\n",
       "    <path fill=\"none\" d=\"M-4.81,-11.59 L4.81,11.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.33,38.51)\">\n",
       "    <path fill=\"none\" d=\"M-11.79,2.31 L11.79,-2.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.64,46.06)\">\n",
       "    <path fill=\"none\" d=\"M-2.16,-3.7 L2.16,3.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.71,58.03)\">\n",
       "    <path fill=\"none\" d=\"M-7.48,-0.74 L7.48,0.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.18,50.17)\">\n",
       "    <path fill=\"none\" d=\"M0.2,5.64 L-0.2,-5.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.45,54.14)\">\n",
       "    <path fill=\"none\" d=\"M-2.76,2.04 L2.76,-2.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.45,57.44)\">\n",
       "    <path fill=\"none\" d=\"M2.16,-0.18 L-2.16,0.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.5,51.12)\">\n",
       "    <path fill=\"none\" d=\"M-3.29,4.82 L3.29,-4.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.57,53.08)\">\n",
       "    <path fill=\"none\" d=\"M0.58,2.75 L-0.58,-2.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.93,45.09)\">\n",
       "    <path fill=\"none\" d=\"M7.68,10.86 L-7.68,-10.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.16,61.76)\">\n",
       "    <path fill=\"none\" d=\"M13.58,-4.14 L-13.58,4.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61,42.05)\">\n",
       "    <path fill=\"none\" d=\"M7.75,13.85 L-7.75,-13.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.58,44.92)\">\n",
       "    <path fill=\"none\" d=\"M11.74,11.16 L-11.74,-11.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.33,52.1)\">\n",
       "    <path fill=\"none\" d=\"M17.37,4.56 L-17.37,-4.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.96,58.99)\">\n",
       "    <path fill=\"none\" d=\"M16.66,-1.7 L-16.66,1.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.54,59.14)\">\n",
       "    <path fill=\"none\" d=\"M12.09,-1.77 L-12.09,1.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.37,50.12)\">\n",
       "    <path fill=\"none\" d=\"M14.49,6.31 L-14.49,-6.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.74,53.32)\">\n",
       "    <path fill=\"none\" d=\"M12.97,3.35 L-12.97,-3.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.55,56.33)\">\n",
       "    <path fill=\"none\" d=\"M14.05,0.69 L-14.05,-0.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.88,47.32)\">\n",
       "    <path fill=\"none\" d=\"M14.17,8.93 L-14.17,-8.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.81,55.47)\">\n",
       "    <path fill=\"none\" d=\"M17.8,1.48 L-17.8,-1.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.06,41.77)\">\n",
       "    <path fill=\"none\" d=\"M4,14.08 L-4,-14.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.25,65.19)\">\n",
       "    <path fill=\"none\" d=\"M-13.38,-7.29 L13.38,7.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.52,64.45)\">\n",
       "    <path fill=\"none\" d=\"M-8.82,-6.41 L8.82,6.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.9,68.61)\">\n",
       "    <path fill=\"none\" d=\"M0.46,-10.21 L-0.46,10.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.88,62.42)\">\n",
       "    <path fill=\"none\" d=\"M-15.78,-4.81 L15.78,4.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.98,39)\">\n",
       "    <path fill=\"none\" d=\"M-7.04,16.86 L7.04,-16.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.97,72.39)\">\n",
       "    <path fill=\"none\" d=\"M9.65,-14.12 L-9.65,14.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.37,48.15)\">\n",
       "    <path fill=\"none\" d=\"M-17.43,8.24 L17.43,-8.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.33,44.13)\">\n",
       "    <path fill=\"none\" d=\"M-14.72,12.01 L14.72,-12.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.48,69.84)\">\n",
       "    <path fill=\"none\" d=\"M13.77,-11.74 L-13.77,11.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64,74.39)\">\n",
       "    <path fill=\"none\" d=\"M5.02,-16.02 L-5.02,16.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.32,67.74)\">\n",
       "    <path fill=\"none\" d=\"M-11.71,-9.65 L11.71,9.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.35,70.3)\">\n",
       "    <path fill=\"none\" d=\"M-6.29,-11.98 L6.29,11.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.2,61.25)\">\n",
       "    <path fill=\"none\" d=\"M-12.1,-3.63 L12.1,3.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.99,66.38)\">\n",
       "    <path fill=\"none\" d=\"M-5.75,-8.12 L5.75,8.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72,66.82)\">\n",
       "    <path fill=\"none\" d=\"M-2.24,-8.44 L2.24,8.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.46,56.32)\">\n",
       "    <path fill=\"none\" d=\"M-13.21,0.69 L13.21,-0.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.77,70.25)\">\n",
       "    <path fill=\"none\" d=\"M-3.03,-11.87 L3.03,11.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.72,58.8)\">\n",
       "    <path fill=\"none\" d=\"M-16.49,-1.52 L16.49,1.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.19,52.27)\">\n",
       "    <path fill=\"none\" d=\"M-14.1,4.32 L14.1,-4.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.31,69.14)\">\n",
       "    <path fill=\"none\" d=\"M-8.98,-10.92 L8.98,10.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.09,54.85)\">\n",
       "    <path fill=\"none\" d=\"M-16.87,2.04 L16.87,-2.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.47,51.1)\">\n",
       "    <path fill=\"none\" d=\"M8.34,6.88 L-8.34,-6.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.57,47.09)\">\n",
       "    <path fill=\"none\" d=\"M7.6,10.71 L-7.6,-10.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.45,60.76)\">\n",
       "    <path fill=\"none\" d=\"M6.79,-1.44 L-6.79,1.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.33,43.91)\">\n",
       "    <path fill=\"none\" d=\"M7.04,13.83 L-7.04,-13.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.73,55.06)\">\n",
       "    <path fill=\"none\" d=\"M4,2.96 L-4,-2.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.73,58.37)\">\n",
       "    <path fill=\"none\" d=\"M11.44,0.51 L-11.44,-0.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,52.04)\">\n",
       "    <path fill=\"none\" d=\"M4.35,5.77 L-4.35,-5.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.86,54.01)\">\n",
       "    <path fill=\"none\" d=\"M8.63,4.22 L-8.63,-4.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.78,43.73)\">\n",
       "    <path fill=\"none\" d=\"M3.86,13.96 L-3.86,-13.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.65,47.41)\">\n",
       "    <path fill=\"none\" d=\"M-0.58,10.25 L0.58,-10.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.08,44.8)\">\n",
       "    <path fill=\"none\" d=\"M0.83,12.86 L-0.83,-12.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.16,50.2)\">\n",
       "    <path fill=\"none\" d=\"M0.71,7.47 L-0.71,-7.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.92,63.35)\">\n",
       "    <path fill=\"none\" d=\"M14.36,-3.93 L-14.36,3.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.41,59.83)\">\n",
       "    <path fill=\"none\" d=\"M14.75,-0.78 L-14.75,0.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.71,62.89)\">\n",
       "    <path fill=\"none\" d=\"M10.61,-3.4 L-10.61,3.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.94,47.4)\">\n",
       "    <path fill=\"none\" d=\"M3.61,10.3 L-3.61,-10.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.25,54.96)\">\n",
       "    <path fill=\"none\" d=\"M13.04,3.54 L-13.04,-3.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.53,66.11)\">\n",
       "    <path fill=\"none\" d=\"M-4.66,-6.03 L4.66,6.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.8,65.37)\">\n",
       "    <path fill=\"none\" d=\"M-0.65,-5.13 L0.65,5.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.19,69.53)\">\n",
       "    <path fill=\"none\" d=\"M8.8,-9.5 L-8.8,9.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.16,63.35)\">\n",
       "    <path fill=\"none\" d=\"M-6.72,-3.61 L6.72,3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.61,68.67)\">\n",
       "    <path fill=\"none\" d=\"M-3.15,-8.46 L3.15,8.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.64,71.22)\">\n",
       "    <path fill=\"none\" d=\"M2.11,-10.98 L-2.11,10.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.49,62.17)\">\n",
       "    <path fill=\"none\" d=\"M-3.21,-2.3 L3.21,2.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.27,67.3)\">\n",
       "    <path fill=\"none\" d=\"M2.31,-7.09 L-2.31,7.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.28,67.74)\">\n",
       "    <path fill=\"none\" d=\"M5.84,-7.65 L-5.84,7.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.74,57.25)\">\n",
       "    <path fill=\"none\" d=\"M-4.07,1.21 L4.07,-1.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.06,71.17)\">\n",
       "    <path fill=\"none\" d=\"M5.34,-10.99 L-5.34,10.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.01,59.72)\">\n",
       "    <path fill=\"none\" d=\"M-7.2,-0.61 L7.2,0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.48,53.19)\">\n",
       "    <path fill=\"none\" d=\"M-5.35,4.75 L5.35,-4.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.6,70.06)\">\n",
       "    <path fill=\"none\" d=\"M-0.54,-9.82 L0.54,9.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.38,55.78)\">\n",
       "    <path fill=\"none\" d=\"M-7.74,2.62 L7.74,-2.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.45,68.5)\">\n",
       "    <path fill=\"none\" d=\"M-16.01,-8.75 L16.01,8.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.39,55.09)\">\n",
       "    <path fill=\"none\" d=\"M-18.63,3.53 L18.63,-3.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.45,72.39)\">\n",
       "    <path fill=\"none\" d=\"M-12.4,-12.38 L12.4,12.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.81,59.97)\">\n",
       "    <path fill=\"none\" d=\"M-19,-0.93 L19,0.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.8,64.38)\">\n",
       "    <path fill=\"none\" d=\"M-18.1,-4.96 L18.1,4.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-799961c7-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-799961c7-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-799961c7-4\">\n",
       "  <g transform=\"translate(52.78,41.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.42,57.11)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.99,58.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.94,43.24)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.14,35.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.9,62.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.66,28.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.48,51.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.47,57.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.58,45.13)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.73,49.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.43,33.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.91,66.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.57,27)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.75,32.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.25,47.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.49,60.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.66,61.18)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.32,43.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.05,49.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.68,55.56)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.35,37.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.2,53.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.7,26.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.91,28.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(26.28,15.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.35,11.4)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.83,21.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,37.16)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.57,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.57,28.51)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.31,35.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.16,30.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.32,41.44)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.85,67.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.84,60.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.43,66.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.89,35.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.5,50.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.07,73.27)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.61,71.78)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.39,80.11)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.33,67.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.54,20.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.52,87.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.32,39.19)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.25,31.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.55,82.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.59,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.22,78.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.28,83.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.99,65.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.56,75.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.58,76.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.49,55.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.13,83.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.02,60.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.97,47.43)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.21,81.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.77,52.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.91,78.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(128.79,51.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.91,85.82)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,60.99)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.6,69.81)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-799961c7-5\">\n",
       "  <g transform=\"translate(52.78,41.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.42,57.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.99,58.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.94,43.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.14,35.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.9,62.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.66,28.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.48,51.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.47,57.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.58,45.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.73,49.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.43,33.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.91,66.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.57,27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.75,32.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.25,47.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.49,60.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.66,61.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.32,43.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.05,49.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.68,55.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.35,37.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.2,53.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.7,26.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.91,28.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(26.28,15.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.35,11.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.83,21.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,37.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.57,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.57,28.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.31,35.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.16,30.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.32,41.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.85,67.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.84,60.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.43,66.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.89,35.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.5,50.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.07,73.27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.61,71.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.39,80.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.33,67.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.54,20.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.52,87.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.32,39.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.25,31.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.55,82.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.59,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.22,78.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.28,83.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.99,65.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.56,75.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.58,76.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.49,55.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.13,83.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.02,60.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.97,47.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.21,81.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.77,52.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.91,78.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(128.79,51.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.91,85.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,60.99)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.6,69.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-05e3d561\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-05e3d561-1\">\n",
       "  <g transform=\"translate(61.1,49.14)\">\n",
       "    <path fill=\"none\" d=\"M-7.23,-6.93 L7.23,6.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.39,50.06)\">\n",
       "    <path fill=\"none\" d=\"M-16.12,-8.14 L16.12,8.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.86,42.2)\">\n",
       "    <path fill=\"none\" d=\"M-6.28,-0.81 L6.28,0.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.96,38.2)\">\n",
       "    <path fill=\"none\" d=\"M-7.52,2.43 L7.52,-2.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.84,51.87)\">\n",
       "    <path fill=\"none\" d=\"M-8.12,-9.59 L8.12,9.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.72,35.02)\">\n",
       "    <path fill=\"none\" d=\"M-8.56,5.3 L8.56,-5.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.13,46.17)\">\n",
       "    <path fill=\"none\" d=\"M-10.76,-4.36 L10.76,4.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.13,49.47)\">\n",
       "    <path fill=\"none\" d=\"M-3.71,-7.09 L3.71,7.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.18,43.15)\">\n",
       "    <path fill=\"none\" d=\"M-10.61,-1.7 L10.61,1.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.25,45.11)\">\n",
       "    <path fill=\"none\" d=\"M-6.01,-3.17 L6.01,3.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.61,37.12)\">\n",
       "    <path fill=\"none\" d=\"M0.12,2.76 L-0.12,-2.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.85,53.79)\">\n",
       "    <path fill=\"none\" d=\"M6.28,-11.42 L-6.28,11.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.68,34.08)\">\n",
       "    <path fill=\"none\" d=\"M0.09,5.79 L-0.09,-5.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.27,36.94)\">\n",
       "    <path fill=\"none\" d=\"M3.41,3.19 L-3.41,-3.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.02,44.13)\">\n",
       "    <path fill=\"none\" d=\"M9.06,-2.5 L-9.06,2.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.64,51.02)\">\n",
       "    <path fill=\"none\" d=\"M9.07,-8.81 L-9.07,8.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.22,51.17)\">\n",
       "    <path fill=\"none\" d=\"M4.89,-8.8 L-4.89,8.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.05,42.15)\">\n",
       "    <path fill=\"none\" d=\"M5.93,-0.76 L-5.93,0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.42,45.35)\">\n",
       "    <path fill=\"none\" d=\"M5.03,-3.3 L-5.03,3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.23,48.36)\">\n",
       "    <path fill=\"none\" d=\"M6.46,-6.16 L-6.46,6.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.57,39.35)\">\n",
       "    <path fill=\"none\" d=\"M5.5,1.38 L-5.5,-1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.49,47.5)\">\n",
       "    <path fill=\"none\" d=\"M9.86,-5.53 L-9.86,5.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.74,33.8)\">\n",
       "    <path fill=\"none\" d=\"M-3.31,6.16 L3.31,-6.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.85,34.81)\">\n",
       "    <path fill=\"none\" d=\"M17.29,5.8 L-17.29,-5.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.53,28.5)\">\n",
       "    <path fill=\"none\" d=\"M12.17,11.63 L-12.17,-11.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.57,26.28)\">\n",
       "    <path fill=\"none\" d=\"M8.48,13.7 L-8.48,-13.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.31,31.34)\">\n",
       "    <path fill=\"none\" d=\"M15.08,8.99 L-15.08,-8.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.28,39.17)\">\n",
       "    <path fill=\"none\" d=\"M18.69,1.83 L-18.69,-1.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.68,24.75)\">\n",
       "    <path fill=\"none\" d=\"M3.79,15.14 L-3.79,-15.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.18,34.84)\">\n",
       "    <path fill=\"none\" d=\"M-11.87,5.61 L11.87,-5.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.04,38.52)\">\n",
       "    <path fill=\"none\" d=\"M-16.47,2.39 L16.47,-2.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.47,35.91)\">\n",
       "    <path fill=\"none\" d=\"M-15.02,4.73 L15.02,-4.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.55,41.3)\">\n",
       "    <path fill=\"none\" d=\"M-14.94,-0.12 L14.94,0.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.32,54.46)\">\n",
       "    <path fill=\"none\" d=\"M-1.39,-12 L1.39,12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.81,50.94)\">\n",
       "    <path fill=\"none\" d=\"M-0.89,-8.48 L0.89,8.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.11,54)\">\n",
       "    <path fill=\"none\" d=\"M-4.81,-11.59 L4.81,11.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.33,38.51)\">\n",
       "    <path fill=\"none\" d=\"M-11.79,2.31 L11.79,-2.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.64,46.06)\">\n",
       "    <path fill=\"none\" d=\"M-2.16,-3.7 L2.16,3.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.71,58.03)\">\n",
       "    <path fill=\"none\" d=\"M-7.48,-0.74 L7.48,0.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.18,50.17)\">\n",
       "    <path fill=\"none\" d=\"M0.2,5.64 L-0.2,-5.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.45,54.14)\">\n",
       "    <path fill=\"none\" d=\"M-2.76,2.04 L2.76,-2.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.45,57.44)\">\n",
       "    <path fill=\"none\" d=\"M2.16,-0.18 L-2.16,0.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.5,51.12)\">\n",
       "    <path fill=\"none\" d=\"M-3.29,4.82 L3.29,-4.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.57,53.08)\">\n",
       "    <path fill=\"none\" d=\"M0.58,2.75 L-0.58,-2.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.93,45.09)\">\n",
       "    <path fill=\"none\" d=\"M7.68,10.86 L-7.68,-10.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.16,61.76)\">\n",
       "    <path fill=\"none\" d=\"M13.58,-4.14 L-13.58,4.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61,42.05)\">\n",
       "    <path fill=\"none\" d=\"M7.75,13.85 L-7.75,-13.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.58,44.92)\">\n",
       "    <path fill=\"none\" d=\"M11.74,11.16 L-11.74,-11.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.33,52.1)\">\n",
       "    <path fill=\"none\" d=\"M17.37,4.56 L-17.37,-4.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.96,58.99)\">\n",
       "    <path fill=\"none\" d=\"M16.66,-1.7 L-16.66,1.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.54,59.14)\">\n",
       "    <path fill=\"none\" d=\"M12.09,-1.77 L-12.09,1.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.37,50.12)\">\n",
       "    <path fill=\"none\" d=\"M14.49,6.31 L-14.49,-6.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.74,53.32)\">\n",
       "    <path fill=\"none\" d=\"M12.97,3.35 L-12.97,-3.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.55,56.33)\">\n",
       "    <path fill=\"none\" d=\"M14.05,0.69 L-14.05,-0.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.88,47.32)\">\n",
       "    <path fill=\"none\" d=\"M14.17,8.93 L-14.17,-8.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.81,55.47)\">\n",
       "    <path fill=\"none\" d=\"M17.8,1.48 L-17.8,-1.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.06,41.77)\">\n",
       "    <path fill=\"none\" d=\"M4,14.08 L-4,-14.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.25,65.19)\">\n",
       "    <path fill=\"none\" d=\"M-13.38,-7.29 L13.38,7.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.52,64.45)\">\n",
       "    <path fill=\"none\" d=\"M-8.82,-6.41 L8.82,6.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.9,68.61)\">\n",
       "    <path fill=\"none\" d=\"M0.46,-10.21 L-0.46,10.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.88,62.42)\">\n",
       "    <path fill=\"none\" d=\"M-15.78,-4.81 L15.78,4.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.98,39)\">\n",
       "    <path fill=\"none\" d=\"M-7.04,16.86 L7.04,-16.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.97,72.39)\">\n",
       "    <path fill=\"none\" d=\"M9.65,-14.12 L-9.65,14.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.37,48.15)\">\n",
       "    <path fill=\"none\" d=\"M-17.43,8.24 L17.43,-8.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.33,44.13)\">\n",
       "    <path fill=\"none\" d=\"M-14.72,12.01 L14.72,-12.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.48,69.84)\">\n",
       "    <path fill=\"none\" d=\"M13.77,-11.74 L-13.77,11.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64,74.39)\">\n",
       "    <path fill=\"none\" d=\"M5.02,-16.02 L-5.02,16.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.32,67.74)\">\n",
       "    <path fill=\"none\" d=\"M-11.71,-9.65 L11.71,9.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.35,70.3)\">\n",
       "    <path fill=\"none\" d=\"M-6.29,-11.98 L6.29,11.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.2,61.25)\">\n",
       "    <path fill=\"none\" d=\"M-12.1,-3.63 L12.1,3.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.99,66.38)\">\n",
       "    <path fill=\"none\" d=\"M-5.75,-8.12 L5.75,8.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72,66.82)\">\n",
       "    <path fill=\"none\" d=\"M-2.24,-8.44 L2.24,8.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.46,56.32)\">\n",
       "    <path fill=\"none\" d=\"M-13.21,0.69 L13.21,-0.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.77,70.25)\">\n",
       "    <path fill=\"none\" d=\"M-3.03,-11.87 L3.03,11.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.72,58.8)\">\n",
       "    <path fill=\"none\" d=\"M-16.49,-1.52 L16.49,1.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.19,52.27)\">\n",
       "    <path fill=\"none\" d=\"M-14.1,4.32 L14.1,-4.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.31,69.14)\">\n",
       "    <path fill=\"none\" d=\"M-8.98,-10.92 L8.98,10.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.09,54.85)\">\n",
       "    <path fill=\"none\" d=\"M-16.87,2.04 L16.87,-2.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.47,51.1)\">\n",
       "    <path fill=\"none\" d=\"M8.34,6.88 L-8.34,-6.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.57,47.09)\">\n",
       "    <path fill=\"none\" d=\"M7.6,10.71 L-7.6,-10.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.45,60.76)\">\n",
       "    <path fill=\"none\" d=\"M6.79,-1.44 L-6.79,1.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.33,43.91)\">\n",
       "    <path fill=\"none\" d=\"M7.04,13.83 L-7.04,-13.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.73,55.06)\">\n",
       "    <path fill=\"none\" d=\"M4,2.96 L-4,-2.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.73,58.37)\">\n",
       "    <path fill=\"none\" d=\"M11.44,0.51 L-11.44,-0.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,52.04)\">\n",
       "    <path fill=\"none\" d=\"M4.35,5.77 L-4.35,-5.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.86,54.01)\">\n",
       "    <path fill=\"none\" d=\"M8.63,4.22 L-8.63,-4.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.78,43.73)\">\n",
       "    <path fill=\"none\" d=\"M3.86,13.96 L-3.86,-13.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.65,47.41)\">\n",
       "    <path fill=\"none\" d=\"M-0.58,10.25 L0.58,-10.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.08,44.8)\">\n",
       "    <path fill=\"none\" d=\"M0.83,12.86 L-0.83,-12.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.16,50.2)\">\n",
       "    <path fill=\"none\" d=\"M0.71,7.47 L-0.71,-7.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.92,63.35)\">\n",
       "    <path fill=\"none\" d=\"M14.36,-3.93 L-14.36,3.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.41,59.83)\">\n",
       "    <path fill=\"none\" d=\"M14.75,-0.78 L-14.75,0.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.71,62.89)\">\n",
       "    <path fill=\"none\" d=\"M10.61,-3.4 L-10.61,3.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.94,47.4)\">\n",
       "    <path fill=\"none\" d=\"M3.61,10.3 L-3.61,-10.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.25,54.96)\">\n",
       "    <path fill=\"none\" d=\"M13.04,3.54 L-13.04,-3.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.53,66.11)\">\n",
       "    <path fill=\"none\" d=\"M-4.66,-6.03 L4.66,6.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.8,65.37)\">\n",
       "    <path fill=\"none\" d=\"M-0.65,-5.13 L0.65,5.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.19,69.53)\">\n",
       "    <path fill=\"none\" d=\"M8.8,-9.5 L-8.8,9.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.16,63.35)\">\n",
       "    <path fill=\"none\" d=\"M-6.72,-3.61 L6.72,3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.61,68.67)\">\n",
       "    <path fill=\"none\" d=\"M-3.15,-8.46 L3.15,8.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.64,71.22)\">\n",
       "    <path fill=\"none\" d=\"M2.11,-10.98 L-2.11,10.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.49,62.17)\">\n",
       "    <path fill=\"none\" d=\"M-3.21,-2.3 L3.21,2.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.27,67.3)\">\n",
       "    <path fill=\"none\" d=\"M2.31,-7.09 L-2.31,7.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.28,67.74)\">\n",
       "    <path fill=\"none\" d=\"M5.84,-7.65 L-5.84,7.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.74,57.25)\">\n",
       "    <path fill=\"none\" d=\"M-4.07,1.21 L4.07,-1.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.06,71.17)\">\n",
       "    <path fill=\"none\" d=\"M5.34,-10.99 L-5.34,10.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.01,59.72)\">\n",
       "    <path fill=\"none\" d=\"M-7.2,-0.61 L7.2,0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.48,53.19)\">\n",
       "    <path fill=\"none\" d=\"M-5.35,4.75 L5.35,-4.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.6,70.06)\">\n",
       "    <path fill=\"none\" d=\"M-0.54,-9.82 L0.54,9.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.38,55.78)\">\n",
       "    <path fill=\"none\" d=\"M-7.74,2.62 L7.74,-2.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.45,68.5)\">\n",
       "    <path fill=\"none\" d=\"M-16.01,-8.75 L16.01,8.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.39,55.09)\">\n",
       "    <path fill=\"none\" d=\"M-18.63,3.53 L18.63,-3.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.45,72.39)\">\n",
       "    <path fill=\"none\" d=\"M-12.4,-12.38 L12.4,12.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.81,59.97)\">\n",
       "    <path fill=\"none\" d=\"M-19,-0.93 L19,0.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.8,64.38)\">\n",
       "    <path fill=\"none\" d=\"M-18.1,-4.96 L18.1,4.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-05e3d561-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-05e3d561-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-05e3d561-4\">\n",
       "  <g transform=\"translate(52.78,41.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.42,57.11)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.99,58.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.94,43.24)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.14,35.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.9,62.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.66,28.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.48,51.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.47,57.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.58,45.13)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.73,49.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.43,33.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.91,66.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.57,27)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.75,32.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.25,47.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.49,60.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.66,61.18)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.32,43.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.05,49.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.68,55.56)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.35,37.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.2,53.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.7,26.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.91,28.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(26.28,15.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.35,11.4)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.83,21.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,37.16)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.57,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.57,28.51)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.31,35.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.16,30.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.32,41.44)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.85,67.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.84,60.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.43,66.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.89,35.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.5,50.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.07,73.27)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.61,71.78)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.39,80.11)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.33,67.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.54,20.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.52,87.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.32,39.19)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.25,31.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.55,82.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.59,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.22,78.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.28,83.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.99,65.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.56,75.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.58,76.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.49,55.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.13,83.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.02,60.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.97,47.43)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.21,81.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.77,52.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.91,78.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(128.79,51.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.91,85.82)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,60.99)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.6,69.81)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-05e3d561-5\">\n",
       "  <g transform=\"translate(52.78,41.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.42,57.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.99,58.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.94,43.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.14,35.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.9,62.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.66,28.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.48,51.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.47,57.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.58,45.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.73,49.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.43,33.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.91,66.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.57,27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.75,32.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.25,47.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.49,60.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.66,61.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.32,43.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.05,49.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.68,55.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.35,37.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.2,53.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.7,26.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.91,28.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(26.28,15.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.35,11.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.83,21.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,37.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.57,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.57,28.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.31,35.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.16,30.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.32,41.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.85,67.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.84,60.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.43,66.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.89,35.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.5,50.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.07,73.27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.61,71.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.39,80.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.33,67.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.54,20.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.52,87.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.32,39.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.25,31.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.55,82.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.59,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.22,78.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.28,83.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.99,65.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.56,75.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.58,76.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.49,55.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.13,83.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.02,60.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.97,47.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.21,81.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.77,52.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.91,78.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(128.79,51.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.91,85.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,60.99)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.6,69.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2858205620295348cx, -0.18703243451986096cy), (-0.040327646332347145cx, 0.14564116094256932cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.279002686967549cx, -0.19395562852657064cy), (0.26802604686363324cx, 0.19691071607316443cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2737220786588937cx, -0.20644726032700625cy), (-0.060574348701984165cx, -0.16777385141346807cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.27603725942421353cx, -0.22488889093810072cy), (-0.02085830103741945cx, -0.34169151563666356cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.28830640759883314cx, -0.1853767957120252cy), (-0.012672875834415172cx, 0.27509569445747967cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.28089375377300546cx, -0.23239963204668146cy), (0.009788887343940521cx, -0.4866852477489203cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2773281169763027cx, -0.19656600429185503cy), (0.08791030341405076cx, 0.012726355589498441cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2934750604237636cx, -0.1829002062627556cy), (-0.16755724497957758cx, 0.15751632697648166cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2739874331183138cx, -0.20514443158330342cy), (0.08625588632886401cx, -0.12369093877422321cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.27938501646544955cx, -0.1934322004960044cy), (-0.07550389046959803cx, -0.041217386349060456cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2831862808321319cx, 0.24426630086847498cy), (0.1020103982293972cx, 0.771943487614703cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.324041826698968cx, 0.21864898149230994cy), (0.5684856928333162cx, 0.24811338321040644cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3125733114121919cx, 0.19068163504683053cy), (0.49420751829979814cx, -0.03739415680764043cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2944586480225133cx, 0.24592351644139593cy), (0.3127484943753007cx, 0.7171406631597407cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.32122247220678435cx, 0.20154361941243057cy), (0.5839445881164477cx, 0.07571292010038869cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.31778768740925745cx, 0.2339048149655413cy), (0.8612811158342298cx, 0.6541059159585213cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.32320987334165074cx, 0.2069192619063716cy), (0.9556994972430345cx, 0.03759660978722107cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3111834732224278cx, 0.2402392211635977cy), (0.7321881644679972cx, 0.8344028404699961cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.32419105418690747cx, 0.2170735113129457cy), (0.9690649267942436cx, 0.261587049488704cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3221690258622813cx, 0.2261441580086379cy), (0.9365280045032206cx, 0.46425477345099003cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.30423262108506677cx, -0.21198307665336258cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.021915587276815196cx, 0.1705918030760709cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.293255980981151cx, 0.21493816419995637cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.030063806275811067cx, -0.16223803508711176cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.007337060623433755cx, -0.3545973299214017cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.0032533376518184554cx, 0.30170197539881705cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.03312775465600182cx, -0.5071018031422392cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.11481480752281481cx, 0.028143427951005995cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.1567996843182744cx, 0.18659919736708863cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.11650107429561696cx, -0.11685229370416406cy), 0.012403473458920847w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.09194069808037808cx, 0.8012716242832216cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5992715385511331cx, 0.25182420050276cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.513524848730839cx, -0.06165068596076628cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.313951161416663cx, 0.7481260154011802cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.611911079342081cx, 0.062318375312862884cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8858128222623363cx, 0.6730725667241062cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9856533896035342cx, 0.029577707493636307cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7501156567092739cx, 0.8597038974336375cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, 0.2637223966016933cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9654410493843508cx, 0.47546076725967157cy), 0.012403473458920847w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.30423262108506677cx, -0.21198307665336258cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.021915587276815196cx, 0.1705918030760709cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.293255980981151cx, 0.21493816419995637cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.030063806275811067cx, -0.16223803508711176cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.007337060623433755cx, -0.3545973299214017cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.0032533376518184554cx, 0.30170197539881705cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.03312775465600182cx, -0.5071018031422392cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.11481480752281481cx, 0.028143427951005995cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.1567996843182744cx, 0.18659919736708863cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.11650107429561696cx, -0.11685229370416406cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.09194069808037808cx, 0.8012716242832216cy), \"56\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5992715385511331cx, 0.25182420050276cy), \"57\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.513524848730839cx, -0.06165068596076628cy), \"58\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.313951161416663cx, 0.7481260154011802cy), \"59\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.611911079342081cx, 0.062318375312862884cy), \"60\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8858128222623363cx, 0.6730725667241062cy), \"61\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9856533896035342cx, 0.029577707493636307cy), \"62\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7501156567092739cx, 0.8597038974336375cy), \"63\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, 0.2637223966016933cy), \"64\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9654410493843508cx, 0.47546076725967157cy), \"65\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using CSV\n",
    "using DataFrames\n",
    "using Graphs\n",
    "using GraphPlot\n",
    "\n",
    "# Read the CSV file into a DataFrame\n",
    "f = CSV.read(\"dataset_updated.csv\", DataFrame)\n",
    "\n",
    "# Create a unique list of names from the 'Source' and 'Target' columns\n",
    "h = unique(vcat(f[!, 1], f[!, 2]))\n",
    "\n",
    "# Create a dictionary to map names to integers\n",
    "ed = Dict(name => count for (count, name) in enumerate(h))\n",
    "\n",
    "# Create a list of edges using the integer mapping\n",
    "edges = [(ed[row.source], ed[row.Target]) for row in eachrow(f)]\n",
    "\n",
    "# Create a graph\n",
    "G = SimpleGraph(length(h))\n",
    "\n",
    "# Add edges to the graph\n",
    "for edge in edges\n",
    "    add_edge!(G, edge[1], edge[2])\n",
    "end\n",
    "\n",
    "# Plot the graph\n",
    "gplot(G, nodelabel=1:length(h))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "edDO5S2fwtjh",
   "metadata": {
    "id": "edDO5S2fwtjh",
    "outputId": "7e4aba60-c712-4627-e631-0cd665dad7de"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m65×2 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m ID    \u001b[0m\u001b[1m Name              \u001b[0m\n",
      "     │\u001b[90m Int64 \u001b[0m\u001b[90m String31          \u001b[0m\n",
      "─────┼──────────────────────────\n",
      "   1 │     1  Gowtham\n",
      "   2 │     2  Sahaanah\n",
      "   3 │     3  Snega\n",
      "   4 │     4  Barath\n",
      "   5 │     5  Maria\n",
      "   6 │     6  Vignesh\n",
      "   7 │     7  Iqjas\n",
      "   8 │     8  Karthik\n",
      "   9 │     9  Venkatesh\n",
      "  10 │    10  Suseendrababu\n",
      "  11 │    11  Harishma\n",
      "  12 │    12  Tamilmani\n",
      "  13 │    13  Meril\n",
      "  14 │    14  Lakshman\n",
      "  15 │    15  Santhosh\n",
      "  16 │    16  Suhaina\n",
      "  17 │    17  Kiran\n",
      "  18 │    18  Debasish\n",
      "  19 │    19  Pradeep\n",
      "  20 │    20  Subhendra Kr.\n",
      "  21 │    21  vasanth\n",
      "  22 │    22  Senthilmani\n",
      "  23 │    23  Sakthivel\n",
      "  24 │    24  Steve\n",
      "  25 │    25  Tarun\n",
      "  26 │    26  Surya\n",
      "  27 │    27  Annamalai\n",
      "  28 │    28  Bani Immanuel\n",
      "  29 │    29  Indrajith\n",
      "  30 │    30  Prakash\n",
      "  31 │    31  Vijaya rajan\n",
      "  32 │    32  Ashin\n",
      "  33 │    33  Ranjith kumar\n",
      "  34 │    34  Mohammed\n",
      "  35 │    35  Selventhiran\n",
      "  36 │    36  Adithya\n",
      "  37 │    37  Praveenkumar\n",
      "  38 │    38  Aashika\n",
      "  39 │    39  latchiya\n",
      "  40 │    40  Arjun\n",
      "  41 │    41  Rithika\n",
      "  42 │    42  Sruthi\n",
      "  43 │    43  Kaarthicsudhan\n",
      "  44 │    44  Devaraj\n",
      "  45 │    45  Rohith\n",
      "  46 │    46  Tanvi\n",
      "  47 │    47  Deeksha\n",
      "  48 │    48  Krishna Sai Gupta\n",
      "  49 │    49  Rajeevan\n",
      "  50 │    50  Ajay\n",
      "  51 │    51  Thirumalai\n",
      "  52 │    52  Navin\n",
      "  53 │    53  sushanta\n",
      "  54 │    54  Dharani\n",
      "  55 │    55  Prabhakaran\n",
      "  56 │    56  Saujanya\n",
      "  57 │    57  Sai Preethi\n",
      "  58 │    58  Deepasri\n",
      "  59 │    59  Vinod\n",
      "  60 │    60  Bharani\n",
      "  61 │    61  Naveen\n",
      "  62 │    62  Nigitha\n",
      "  63 │    63  Nitheesh Kumar\n",
      "  64 │    64  Sashwatha\n",
      "  65 │    65  Rohit\n"
     ]
    }
   ],
   "source": [
    "# Create a DataFrame to show the mapping between names and ID numbers\n",
    "id_mapping_df = DataFrame(ID = 1:length(h), Name = h)\n",
    "\n",
    "# Display the DataFrame\n",
    "println(id_mapping_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "oG7rzlWKwtji",
   "metadata": {
    "id": "oG7rzlWKwtji"
   },
   "source": [
    "# Temporal Analysis:\n",
    "   How do the strength and nature of ties in LinkedIn networks evolve over time, and are there patterns or trends that can be identified?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93vp2Y0_wtjj",
   "metadata": {
    "id": "93vp2Y0_wtjj"
   },
   "source": [
    "- Separate the dataset into different subsets based on the \"Connected On\" year."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "PCNi2-YDwtjj",
   "metadata": {
    "id": "PCNi2-YDwtjj",
    "outputId": "ef2ac1e7-6e27-438c-be61-c3378063302d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>24×8 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">source</th><th style = \"text-align: left;\">Target</th><th style = \"text-align: left;\">Company</th><th style = \"text-align: left;\">Position</th><th style = \"text-align: left;\">Connected On</th><th style = \"text-align: left;\">University</th><th style = \"text-align: left;\">Skills</th><th style = \"text-align: left;\">City</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String15\" style = \"text-align: left;\">String15</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Vijaya rajan</td><td style = \"text-align: left;\">AROBOTNX Solutions Pvt Ltd</td><td style = \"text-align: left;\">Sr. Engineer - Projects</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Bharathiyar University</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Ashin</td><td style = \"text-align: left;\">Fraunhofer IML</td><td style = \"text-align: left;\">Robotics and ML Research Assistant - HiWi</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Ranjith kumar</td><td style = \"text-align: left;\">MulticoreWare Inc</td><td style = \"text-align: left;\">Senior Software Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Mohammed</td><td style = \"text-align: left;\">MBition</td><td style = \"text-align: left;\">Test Automation Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Selventhiran</td><td style = \"text-align: left;\">MulticoreWare Inc</td><td style = \"text-align: left;\">Assoc Technical Project Manager</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Adithya</td><td style = \"text-align: left;\">Paytm</td><td style = \"text-align: left;\">Team Lead - Lending analytics</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Bharathiyar University</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Praveenkumar</td><td style = \"text-align: left;\">PSG College of Technology</td><td style = \"text-align: left;\">Robotics Developer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Hindustan College of Technology</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Aashika</td><td style = \"text-align: left;\">Volkswagen Infotainment GmbH</td><td style = \"text-align: left;\">Werkstudentin</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">latchiya</td><td style = \"text-align: left;\">TVS Motor Company</td><td style = \"text-align: left;\">Assistant Manager</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">SNS College of Arts and Science</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Naveen</td><td style = \"text-align: left;\">Titan Engineering &amp; Automation Limited</td><td style = \"text-align: left;\">Graduate Engineering Trainee</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Nigitha</td><td style = \"text-align: left;\">Caterpillar Inc.</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Nitheesh Kumar</td><td style = \"text-align: left;\">Caterpillar Inc.</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Sashwatha</td><td style = \"text-align: left;\">Lenze</td><td style = \"text-align: left;\">Junior Application Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">14</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">JANATICS INDUSTRIAL AUTOMATION PRIVATE LIMITED</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">15</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Rohit</td><td style = \"text-align: left;\">WuXi Biologics</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Amity University</td><td style = \"text-align: left;\">Python, Java, SQL</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">16</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Vijaya rajan</td><td style = \"text-align: left;\">AROBOTNX Solutions Pvt Ltd</td><td style = \"text-align: left;\">Sr. Engineer - Projects</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Bharathiyar University</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">17</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Ashin</td><td style = \"text-align: left;\">Fraunhofer IML</td><td style = \"text-align: left;\">Robotics and ML Research Assistant - HiWi</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">18</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Ranjith kumar</td><td style = \"text-align: left;\">MulticoreWare Inc</td><td style = \"text-align: left;\">Senior Software Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">19</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Mohammed</td><td style = \"text-align: left;\">MBition</td><td style = \"text-align: left;\">Test Automation Engineer</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">20</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Selventhiran</td><td style = \"text-align: left;\">MulticoreWare Inc</td><td style = \"text-align: left;\">Assoc Technical Project Manager</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">21</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Adithya</td><td style = \"text-align: left;\">Paytm</td><td style = \"text-align: left;\">Team Lead - Lending analytics</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Bharathiyar University</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">22</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Praveenkumar</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Quality Analyst</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Hindustan College of Technology</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">23</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Aashika</td><td style = \"text-align: left;\">Volkswagen Infotainment GmbH</td><td style = \"text-align: left;\">Werkstudentin</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">24</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">latchiya</td><td style = \"text-align: left;\">TVS Motor Company</td><td style = \"text-align: left;\">Assistant Manager</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">SNS College of Arts and Science</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Mumbai</td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|ccccc}\n",
       "\t& source & Target & Company & Position & \\\\\n",
       "\t\\hline\n",
       "\t& String15 & String31 & String & String & \\\\\n",
       "\t\\hline\n",
       "\t1 & Gowtham & Vijaya rajan & AROBOTNX Solutions Pvt Ltd & Sr. Engineer - Projects & $\\dots$ \\\\\n",
       "\t2 & Gowtham & Ashin & Fraunhofer IML & Robotics and ML Research Assistant - HiWi & $\\dots$ \\\\\n",
       "\t3 & Gowtham & Ranjith kumar & MulticoreWare Inc & Senior Software Engineer & $\\dots$ \\\\\n",
       "\t4 & Gowtham & Mohammed & MBition & Test Automation Engineer & $\\dots$ \\\\\n",
       "\t5 & Gowtham & Selventhiran & MulticoreWare Inc & Assoc Technical Project Manager & $\\dots$ \\\\\n",
       "\t6 & Gowtham & Adithya & Paytm & Team Lead - Lending analytics & $\\dots$ \\\\\n",
       "\t7 & Gowtham & Praveenkumar & PSG College of Technology & Robotics Developer & $\\dots$ \\\\\n",
       "\t8 & Gowtham & Aashika & Volkswagen Infotainment GmbH & Werkstudentin & $\\dots$ \\\\\n",
       "\t9 & Gowtham & latchiya & TVS Motor Company & Assistant Manager & $\\dots$ \\\\\n",
       "\t10 & Snega & Naveen & Titan Engineering \\& Automation Limited & Graduate Engineering Trainee & $\\dots$ \\\\\n",
       "\t11 & Snega & Nigitha & Caterpillar Inc. & Automation Engineer & $\\dots$ \\\\\n",
       "\t12 & Snega & Nitheesh Kumar & Caterpillar Inc. & Automation Engineer & $\\dots$ \\\\\n",
       "\t13 & Snega & Sashwatha & Lenze & Junior Application Engineer & $\\dots$ \\\\\n",
       "\t14 & Snega & Vignesh & JANATICS INDUSTRIAL AUTOMATION PRIVATE LIMITED & Robotics Engineer & $\\dots$ \\\\\n",
       "\t15 & Snega & Rohit & WuXi Biologics & Automation Engineer & $\\dots$ \\\\\n",
       "\t16 & Snega & Vijaya rajan & AROBOTNX Solutions Pvt Ltd & Sr. Engineer - Projects & $\\dots$ \\\\\n",
       "\t17 & Snega & Ashin & Fraunhofer IML & Robotics and ML Research Assistant - HiWi & $\\dots$ \\\\\n",
       "\t18 & Snega & Ranjith kumar & MulticoreWare Inc & Senior Software Engineer & $\\dots$ \\\\\n",
       "\t19 & Snega & Mohammed & MBition & Test Automation Engineer & $\\dots$ \\\\\n",
       "\t20 & Snega & Selventhiran & MulticoreWare Inc & Assoc Technical Project Manager & $\\dots$ \\\\\n",
       "\t21 & Snega & Adithya & Paytm & Team Lead - Lending analytics & $\\dots$ \\\\\n",
       "\t22 & Snega & Praveenkumar & Curl & Quality Analyst & $\\dots$ \\\\\n",
       "\t23 & Snega & Aashika & Volkswagen Infotainment GmbH & Werkstudentin & $\\dots$ \\\\\n",
       "\t24 & Snega & latchiya & TVS Motor Company & Assistant Manager & $\\dots$ \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m24×8 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m source   \u001b[0m\u001b[1m Target         \u001b[0m\u001b[1m Company                           \u001b[0m\u001b[1m Position  \u001b[0m ⋯\n",
       "     │\u001b[90m String15 \u001b[0m\u001b[90m String31       \u001b[0m\u001b[90m String                            \u001b[0m\u001b[90m String    \u001b[0m ⋯\n",
       "─────┼──────────────────────────────────────────────────────────────────────────\n",
       "   1 │ Gowtham   Vijaya rajan    AROBOTNX Solutions Pvt Ltd         Sr. Engine ⋯\n",
       "   2 │ Gowtham   Ashin           Fraunhofer IML                     Robotics a\n",
       "   3 │ Gowtham   Ranjith kumar   MulticoreWare Inc                  Senior Sof\n",
       "   4 │ Gowtham   Mohammed        MBition                            Test Autom\n",
       "   5 │ Gowtham   Selventhiran    MulticoreWare Inc                  Assoc Tech ⋯\n",
       "   6 │ Gowtham   Adithya         Paytm                              Team Lead\n",
       "   7 │ Gowtham   Praveenkumar    PSG College of Technology          Robotics D\n",
       "   8 │ Gowtham   Aashika         Volkswagen Infotainment GmbH       Werkstuden\n",
       "   9 │ Gowtham   latchiya        TVS Motor Company                  Assistant  ⋯\n",
       "  10 │ Snega     Naveen          Titan Engineering & Automation L…  Graduate E\n",
       "  11 │ Snega     Nigitha         Caterpillar Inc.                   Automation\n",
       "  ⋮  │    ⋮            ⋮                         ⋮                             ⋱\n",
       "  15 │ Snega     Rohit           WuXi Biologics                     Automation\n",
       "  16 │ Snega     Vijaya rajan    AROBOTNX Solutions Pvt Ltd         Sr. Engine ⋯\n",
       "  17 │ Snega     Ashin           Fraunhofer IML                     Robotics a\n",
       "  18 │ Snega     Ranjith kumar   MulticoreWare Inc                  Senior Sof\n",
       "  19 │ Snega     Mohammed        MBition                            Test Autom\n",
       "  20 │ Snega     Selventhiran    MulticoreWare Inc                  Assoc Tech ⋯\n",
       "  21 │ Snega     Adithya         Paytm                              Team Lead\n",
       "  22 │ Snega     Praveenkumar    Curl                               Quality An\n",
       "  23 │ Snega     Aashika         Volkswagen Infotainment GmbH       Werkstuden\n",
       "  24 │ Snega     latchiya        TVS Motor Company                  Assistant  ⋯\n",
       "\u001b[36m                                                    5 columns and 3 rows omitted\u001b[0m"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Example: Filter data for the year 2023\n",
    "data_2020 = filter(row -> row[\"Connected On\"] == 2020, f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "h6MYZNaBwtjj",
   "metadata": {
    "id": "h6MYZNaBwtjj",
    "outputId": "fb3be3c5-b18a-4696-8cb2-e9bff15dce6c"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>120×8 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">95 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">source</th><th style = \"text-align: left;\">Target</th><th style = \"text-align: left;\">Company</th><th style = \"text-align: left;\">Position</th><th style = \"text-align: left;\">Connected On</th><th style = \"text-align: left;\">University</th><th style = \"text-align: left;\">Skills</th><th style = \"text-align: left;\">City</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String15\" style = \"text-align: left;\">String15</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Student Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Barath</td><td style = \"text-align: left;\">Trimble Inc.</td><td style = \"text-align: left;\">Working Student (Automotive GNSS / INS )</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Sri Krishna College of Technology</td><td style = \"text-align: left;\">Python, Java, SQL</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Maria</td><td style = \"text-align: left;\">Amazon FC Graben GmbH</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">Amazon</td><td style = \"text-align: left;\">Digital Associate</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: left;\">DiFACTO Robotics and Automation</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: left;\">Stealth Mode Startup - Data and Analytics</td><td style = \"text-align: left;\">Founder</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Senior Software Engineer - L3</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: left;\">Wells Fargo</td><td style = \"text-align: left;\">Vice President  - Systems Operations Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: left;\">ST JOHNS RIVER-TO-SEA LOOP ALLIANCE</td><td style = \"text-align: left;\">Data Analyst Intern</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Tamilmani</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Associate - Projects</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Meril</td><td style = \"text-align: left;\">Higher Education Forum</td><td style = \"text-align: left;\">Content Team</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Lakshman</td><td style = \"text-align: left;\">Hitachi Energy</td><td style = \"text-align: left;\">Intern</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Santhosh</td><td style = \"text-align: left;\">Ford Motor Company</td><td style = \"text-align: left;\">Data Strategy Analyst</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">109</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">Accenture</td><td style = \"text-align: left;\">Associate Manufacturing Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">110</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: left;\">DiFACTO Robotics and Automation</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">111</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: left;\">Stealth Mode Startup - Data and Analytics</td><td style = \"text-align: left;\">Founder</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">112</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Senior Software Engineer - L3</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">113</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: left;\">Wells Fargo</td><td style = \"text-align: left;\">Vice President  - Systems Operations Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">114</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: left;\">ST JOHNS RIVER-TO-SEA LOOP ALLIANCE</td><td style = \"text-align: left;\">Data Analyst Intern</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">115</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Arjun</td><td style = \"text-align: left;\">Tata Consultancy Services</td><td style = \"text-align: left;\">System Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">116</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Rithika</td><td style = \"text-align: left;\">ZF Group</td><td style = \"text-align: left;\">Supply Chain Management</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bharathiyar University</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">117</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Sruthi</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Quality Analyst</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">118</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Kaarthicsudhan</td><td style = \"text-align: left;\">SchuF Speciality Valves India Pvt Ltd </td><td style = \"text-align: left;\">Process Project Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">119</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Ajay</td><td style = \"text-align: left;\">SHV Energy</td><td style = \"text-align: left;\">Executive Trainee - Operations </td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Thiyagarajar College of Engineering</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">120</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Thirumalai</td><td style = \"text-align: left;\">Wipro Limited</td><td style = \"text-align: left;\">Project Engineer</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Hindustan College of Technology</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Bangalore</td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|ccccc}\n",
       "\t& source & Target & Company & Position & \\\\\n",
       "\t\\hline\n",
       "\t& String15 & String31 & String & String & \\\\\n",
       "\t\\hline\n",
       "\t1 & Gowtham & Snega & Cognizant & Student Manager & $\\dots$ \\\\\n",
       "\t2 & Gowtham & Barath & Trimble Inc. & Working Student (Automotive GNSS / INS ) & $\\dots$ \\\\\n",
       "\t3 & Gowtham & Maria & Amazon FC Graben GmbH & Automation Engineer & $\\dots$ \\\\\n",
       "\t4 & Gowtham & Vignesh & Amazon & Digital Associate & $\\dots$ \\\\\n",
       "\t5 & Gowtham & Iqjas & DiFACTO Robotics and Automation & Robotics Engineer & $\\dots$ \\\\\n",
       "\t6 & Gowtham & Karthik & Stealth Mode Startup - Data and Analytics & Founder & $\\dots$ \\\\\n",
       "\t7 & Gowtham & Venkatesh & Curl & Senior Software Engineer - L3 & $\\dots$ \\\\\n",
       "\t8 & Gowtham & Suseendrababu & Wells Fargo & Vice President  - Systems Operations Manager & $\\dots$ \\\\\n",
       "\t9 & Gowtham & Harishma & ST JOHNS RIVER-TO-SEA LOOP ALLIANCE & Data Analyst Intern & $\\dots$ \\\\\n",
       "\t10 & Gowtham & Tamilmani & Cognizant & Associate - Projects & $\\dots$ \\\\\n",
       "\t11 & Gowtham & Meril & Higher Education Forum & Content Team & $\\dots$ \\\\\n",
       "\t12 & Gowtham & Lakshman & Hitachi Energy & Intern & $\\dots$ \\\\\n",
       "\t13 & Gowtham & Santhosh & Ford Motor Company & Data Strategy Analyst & $\\dots$ \\\\\n",
       "\t14 & Gowtham & Suhaina & Netcracker Technology & Associate Business Analyst & $\\dots$ \\\\\n",
       "\t15 & Gowtham & Kiran & DSCPU & Campus hero  & $\\dots$ \\\\\n",
       "\t16 & Gowtham & Debasish & Biorad Medisys Pvt Ltd & G.M. R\\&D & $\\dots$ \\\\\n",
       "\t17 & Gowtham & Pradeep & Self-employed & Oracle EBS Techno Functional Consultant & $\\dots$ \\\\\n",
       "\t18 & Gowtham & Subhendra Kr. & Naresh i Technologies & Oracle Database Administrator & $\\dots$ \\\\\n",
       "\t19 & Gowtham & vasanth & MoEVing & Operations Manager & $\\dots$ \\\\\n",
       "\t20 & Gowtham & Barath & Amazon & Digital Associate & $\\dots$ \\\\\n",
       "\t21 & Gowtham & Senthilmani & SAM ROBOTICS \\& AUTOMATION & Managing Director & $\\dots$ \\\\\n",
       "\t22 & Gowtham & Sakthivel  & TRAPO & Project Intern & $\\dots$ \\\\\n",
       "\t23 & Gowtham & Steve & Kaiko & Research Analyst  & $\\dots$ \\\\\n",
       "\t24 & Gowtham & Tarun & Plant Lipids Private Limited & Purchase Officer & $\\dots$ \\\\\n",
       "\t25 & Gowtham & Surya & University of Michigan-Dearborn & Graduate Student Research Assistant & $\\dots$ \\\\\n",
       "\t26 & Gowtham & Annamalai & Hitachi Energy & Intern & $\\dots$ \\\\\n",
       "\t27 & Gowtham & Bani Immanuel & i-exceed  & Scrum Master - Trainee & $\\dots$ \\\\\n",
       "\t28 & Gowtham & Indrajith & MulticoreWare Inc & Senior Software Engineer & $\\dots$ \\\\\n",
       "\t29 & Gowtham & Prakash & PSG College of Technology & Robotics Developer & $\\dots$ \\\\\n",
       "\t30 & Gowtham & Vijaya rajan & AROBOTNX Solutions Pvt Ltd & Sr. Engineer - Projects & $\\dots$ \\\\\n",
       "\t$\\dots$ & $\\dots$ & $\\dots$ & $\\dots$ & $\\dots$ &  \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m120×8 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m source   \u001b[0m\u001b[1m Target         \u001b[0m\u001b[1m Company                           \u001b[0m\u001b[1m Position  \u001b[0m ⋯\n",
       "     │\u001b[90m String15 \u001b[0m\u001b[90m String31       \u001b[0m\u001b[90m String                            \u001b[0m\u001b[90m String    \u001b[0m ⋯\n",
       "─────┼──────────────────────────────────────────────────────────────────────────\n",
       "   1 │ Gowtham   Snega           Cognizant                          Student Ma ⋯\n",
       "   2 │ Gowtham   Barath          Trimble Inc.                       Working St\n",
       "   3 │ Gowtham   Maria           Amazon FC Graben GmbH              Automation\n",
       "   4 │ Gowtham   Vignesh         Amazon                             Digital As\n",
       "   5 │ Gowtham   Iqjas           DiFACTO Robotics and Automation    Robotics E ⋯\n",
       "   6 │ Gowtham   Karthik         Stealth Mode Startup - Data and …  Founder\n",
       "   7 │ Gowtham   Venkatesh       Curl                               Senior Sof\n",
       "   8 │ Gowtham   Suseendrababu   Wells Fargo                        Vice Presi\n",
       "   9 │ Gowtham   Harishma        ST JOHNS RIVER-TO-SEA LOOP ALLIA…  Data Analy ⋯\n",
       "  10 │ Gowtham   Tamilmani       Cognizant                          Associate\n",
       "  11 │ Gowtham   Meril           Higher Education Forum             Content Te\n",
       "  ⋮  │    ⋮            ⋮                         ⋮                             ⋱\n",
       " 111 │ Snega     Karthik         Stealth Mode Startup - Data and …  Founder\n",
       " 112 │ Snega     Venkatesh       Curl                               Senior Sof ⋯\n",
       " 113 │ Snega     Suseendrababu   Wells Fargo                        Vice Presi\n",
       " 114 │ Snega     Harishma        ST JOHNS RIVER-TO-SEA LOOP ALLIA…  Data Analy\n",
       " 115 │ Snega     Arjun           Tata Consultancy Services          System Eng\n",
       " 116 │ Snega     Rithika         ZF Group                           Supply Cha ⋯\n",
       " 117 │ Snega     Sruthi          Curl                               Quality An\n",
       " 118 │ Snega     Kaarthicsudhan  SchuF Speciality Valves India Pv…  Process Pr\n",
       " 119 │ Snega     Ajay            SHV Energy                         Executive\n",
       " 120 │ Snega     Thirumalai      Wipro Limited                      Project En ⋯\n",
       "\u001b[36m                                                   5 columns and 99 rows omitted\u001b[0m"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Filter data for both 2020 and 2021\n",
    "data_2020_2021 = filter(row -> row[\"Connected On\"] in [2020, 2021], f)\n",
    "\n",
    "# Filter data for 2020,2021,2022\n",
    "data_2020_2021_2022 = filter(row -> row[\"Connected On\"] in [2020, 2021,2022], f)\n",
    "\n",
    "# Filter data for 2020,2021,2022,2023\n",
    "data_2020_2021_2022_2023 = filter(row -> row[\"Connected On\"] in [2020, 2021,2022,2023], f)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "UfTg28n0wtjk",
   "metadata": {
    "id": "UfTg28n0wtjk"
   },
   "source": [
    "- To analyse network metrics to quantify the strength and nature of ties."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5TDEeCUJwtjk",
   "metadata": {
    "id": "5TDEeCUJwtjk",
    "outputId": "226e2318-818f-48ee-9b56-568fd1422c66"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "plotgraph (generic function with 1 method)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Function to create a graph from filtered data\n",
    "function create_graph(data)\n",
    "    h = unique(vcat(data[!, 1], data[!, 2]))\n",
    "    ed = Dict(name => count for (count, name) in enumerate(h))\n",
    "    edges = [(ed[row.source], ed[row.Target]) for row in eachrow(data)]\n",
    "    G = SimpleGraph(length(h))\n",
    "\n",
    "    for edge in edges\n",
    "        add_edge!(G, edge[1], edge[2])\n",
    "    end\n",
    "    return G, h\n",
    "end\n",
    "\n",
    "function plotgraph(G,h)\n",
    "    gplot(G, nodelabel=1:length(h))\n",
    "end\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "UsRwbzlOwtjk",
   "metadata": {
    "id": "UsRwbzlOwtjk",
    "outputId": "cebf77a4-6586-432b-ee5e-4661e5ef33d5"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "degree_centrality (generic function with 1 method)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Function to calculate degree centrality of a graph\n",
    "function degree_centrality(graph)\n",
    "    num_nodes = nv(graph)\n",
    "    centrality = Dict{Int, Float64}()\n",
    "\n",
    "    for node in 1:num_nodes\n",
    "        centrality[node] = degree(graph, node)\n",
    "    end\n",
    "\n",
    "    return centrality\n",
    "end\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fZqk2hfAwtjk",
   "metadata": {
    "id": "fZqk2hfAwtjk"
   },
   "source": [
    "# 2020"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "72-L-ML4wtjl",
   "metadata": {
    "id": "72-L-ML4wtjl",
    "outputId": "567d7c62-942f-472f-d686-fa27be98d0c4"
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.73\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-50ae6412-1\">\n",
       "  <g transform=\"translate(93.3,73.26)\">\n",
       "    <path fill=\"none\" d=\"M-16.48,-1.35 L16.48,1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.71,79.49)\">\n",
       "    <path fill=\"none\" d=\"M7.23,-5.95 L-7.23,5.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.15,75.19)\">\n",
       "    <path fill=\"none\" d=\"M14.68,-2.89 L-14.68,2.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.05,59.77)\">\n",
       "    <path fill=\"none\" d=\"M-10.61,9.84 L10.61,-9.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.05,81.64)\">\n",
       "    <path fill=\"none\" d=\"M-1.33,-7.52 L1.33,7.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.85,68.33)\">\n",
       "    <path fill=\"none\" d=\"M16.94,2.73 L-16.94,-2.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.19,78.04)\">\n",
       "    <path fill=\"none\" d=\"M-9.07,-4.89 L9.07,4.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.38,61.54)\">\n",
       "    <path fill=\"none\" d=\"M12.32,8.33 L-12.32,-8.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.87,66.08)\">\n",
       "    <path fill=\"none\" d=\"M-16.28,4.6 L16.28,-4.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.25,61.99)\">\n",
       "    <path fill=\"none\" d=\"M-18.38,-11.25 L18.38,11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.66,68.22)\">\n",
       "    <path fill=\"none\" d=\"M7.43,-16.73 L-7.43,16.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.09,63.92)\">\n",
       "    <path fill=\"none\" d=\"M14.82,-12.88 L-14.82,12.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.99,48.5)\">\n",
       "    <path fill=\"none\" d=\"M-10.26,0.43 L10.26,-0.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74,70.37)\">\n",
       "    <path fill=\"none\" d=\"M-2.5,-18.78 L2.5,18.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.8,57.07)\">\n",
       "    <path fill=\"none\" d=\"M16.28,-6.71 L-16.28,6.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.14,66.77)\">\n",
       "    <path fill=\"none\" d=\"M-11.33,-15.44 L11.33,15.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.32,50.27)\">\n",
       "    <path fill=\"none\" d=\"M10.3,-0.88 L-10.3,0.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.81,54.81)\">\n",
       "    <path fill=\"none\" d=\"M-17.33,-4.81 L17.33,4.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.47,43.57)\">\n",
       "    <path fill=\"none\" d=\"M26.23,4.87 L-26.23,-4.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.2,28.71)\">\n",
       "    <path fill=\"none\" d=\"M-4.42,17.89 L4.42,-17.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.68,29.55)\">\n",
       "    <path fill=\"none\" d=\"M7.44,17.12 L-7.44,-17.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.66,34.41)\">\n",
       "    <path fill=\"none\" d=\"M17.99,12.87 L-17.99,-12.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.4,40.82)\">\n",
       "    <path fill=\"none\" d=\"M-25.92,7.33 L25.92,-7.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.47,32.3)\">\n",
       "    <path fill=\"none\" d=\"M-16.13,14.79 L16.13,-14.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.73\" stroke=\"#D3D3D3\" id=\"img-50ae6412-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-50ae6412-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-50ae6412-4\">\n",
       "  <g transform=\"translate(73.28,71.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.16,49.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.33,74.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.15,87.36)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.02,78.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.82,47.92)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.83,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.43,65.05)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.11,84.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.48,51.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.47,60.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,38.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.24,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.19,10.02)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.15,19.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,32.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.78,15.51)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-50ae6412-5\">\n",
       "  <g transform=\"translate(73.28,71.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.16,49.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.33,74.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.15,87.36)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.02,78.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.82,47.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.83,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.43,65.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.11,84.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.48,51.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.47,60.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,38.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.24,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.19,10.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.15,19.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,32.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.78,15.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-3a04f4b0\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.73\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-3a04f4b0-1\">\n",
       "  <g transform=\"translate(93.3,73.26)\">\n",
       "    <path fill=\"none\" d=\"M-16.48,-1.35 L16.48,1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.71,79.49)\">\n",
       "    <path fill=\"none\" d=\"M7.23,-5.95 L-7.23,5.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.15,75.19)\">\n",
       "    <path fill=\"none\" d=\"M14.68,-2.89 L-14.68,2.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.05,59.77)\">\n",
       "    <path fill=\"none\" d=\"M-10.61,9.84 L10.61,-9.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.05,81.64)\">\n",
       "    <path fill=\"none\" d=\"M-1.33,-7.52 L1.33,7.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.85,68.33)\">\n",
       "    <path fill=\"none\" d=\"M16.94,2.73 L-16.94,-2.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.19,78.04)\">\n",
       "    <path fill=\"none\" d=\"M-9.07,-4.89 L9.07,4.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.38,61.54)\">\n",
       "    <path fill=\"none\" d=\"M12.32,8.33 L-12.32,-8.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.87,66.08)\">\n",
       "    <path fill=\"none\" d=\"M-16.28,4.6 L16.28,-4.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.25,61.99)\">\n",
       "    <path fill=\"none\" d=\"M-18.38,-11.25 L18.38,11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.66,68.22)\">\n",
       "    <path fill=\"none\" d=\"M7.43,-16.73 L-7.43,16.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.09,63.92)\">\n",
       "    <path fill=\"none\" d=\"M14.82,-12.88 L-14.82,12.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.99,48.5)\">\n",
       "    <path fill=\"none\" d=\"M-10.26,0.43 L10.26,-0.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74,70.37)\">\n",
       "    <path fill=\"none\" d=\"M-2.5,-18.78 L2.5,18.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.8,57.07)\">\n",
       "    <path fill=\"none\" d=\"M16.28,-6.71 L-16.28,6.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.14,66.77)\">\n",
       "    <path fill=\"none\" d=\"M-11.33,-15.44 L11.33,15.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.32,50.27)\">\n",
       "    <path fill=\"none\" d=\"M10.3,-0.88 L-10.3,0.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.81,54.81)\">\n",
       "    <path fill=\"none\" d=\"M-17.33,-4.81 L17.33,4.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.47,43.57)\">\n",
       "    <path fill=\"none\" d=\"M26.23,4.87 L-26.23,-4.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.2,28.71)\">\n",
       "    <path fill=\"none\" d=\"M-4.42,17.89 L4.42,-17.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.68,29.55)\">\n",
       "    <path fill=\"none\" d=\"M7.44,17.12 L-7.44,-17.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.66,34.41)\">\n",
       "    <path fill=\"none\" d=\"M17.99,12.87 L-17.99,-12.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.4,40.82)\">\n",
       "    <path fill=\"none\" d=\"M-25.92,7.33 L25.92,-7.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.47,32.3)\">\n",
       "    <path fill=\"none\" d=\"M-16.13,14.79 L16.13,-14.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.73\" stroke=\"#D3D3D3\" id=\"img-3a04f4b0-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-3a04f4b0-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-3a04f4b0-4\">\n",
       "  <g transform=\"translate(73.28,71.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.16,49.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.33,74.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.15,87.36)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.02,78.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.82,47.92)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.83,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.43,65.05)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.11,84.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.48,51.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.47,60.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,38.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.24,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.19,10.02)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.15,19.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,32.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.78,15.51)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"3.43\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-3a04f4b0-5\">\n",
       "  <g transform=\"translate(73.28,71.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.16,49.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.33,74.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.15,87.36)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.02,78.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.82,47.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.83,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.43,65.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.11,84.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.48,51.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.47,60.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,38.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.24,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.19,10.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.15,19.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,32.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.78,15.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.1037522996550827cx, 0.5258597147135068cy), (0.6630155930898954cx, 0.5906332029285385cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.00401236664479275cx, 0.564878733876164cy), (-0.24149362404836813cx, 0.850690515137601cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.0148868014534429cx, 0.5351624896630638cy), (-0.51328870259489cx, 0.6740710198349855cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.08028041478363915cx, 0.4706632591313771cy), (0.4403313519767491cx, -0.0016470497088138733cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.051066223430214656cx, 0.5790463871349028cy), (0.09631426569925124cx, 0.9398373826446063cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.015601656375948111cx, 0.505430909007755cy), (-0.5905435245902954cx, 0.37460779531277677cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.0917612422194502cx, 0.5556172934792555cy), (0.39976206191937963cx, 0.7901509546434219cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.0002891222143940053cx, 0.4769654941448563cy), (-0.41833731188306633cx, 0.0769700258306471cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.09982605635343803cx, 0.49638457600829566cy), (0.6522992008965712cx, 0.2756192301468976cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.05351525763239503cx, 0.01769053445914419cy), (0.6774090337408939cx, 0.5579183012110349cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.044707103925986924cx, 0.00853380236138588cy), (-0.5972816784119457cx, 0.3306208199872797cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.03559636236133648cx, 0.031823504965731206cy), (0.4200833404058042cx, 0.77306066118508cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.05251431939661732cx, -0.014691071905279669cy), (-0.4019557160725322cx, 0.02774250990891681cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.0641191972638552cx, 0.0001536144163069436cy), (0.6521624586144649cx, 0.23096610976702012cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.05096744903645678cx, -0.037403228264003635cy), (-0.9413551301073563cx, -0.2712611385615125cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.01812468777856919cx, -0.08172740154122629cy), (0.16829865735362542cx, -0.9402729106511309cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.010130312365817146cx, -0.07996025720379787cy), (-0.26259062480607925cx, -0.9016586532988157cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.034947011184306175cx, -0.06512372093355806cy), (-0.6456578163914285cx, -0.682983723164099cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.06397882764364846cx, -0.04450858138365839cy), (0.9436985932125385cx, -0.3962043990580167cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.044709564790512434cx, -0.0700116744294641cy), (0.5921382192840285cx, -0.7797409160437591cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.7276068751089989mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.7276068751089989mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.04352102222787613cx, 0.518883769779509cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.007677420856186945cx, -0.022000312192357208cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.723246870517102cx, 0.5976091478625363cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.2810022796314515cx, 0.896685479234256cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.571696526276209cx, 0.6903497397185403cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.4770907445325121cx, -0.04986756035694584cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.10385946690158976cx, 1.0cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.6496662031941196cx, 0.36115493454102277cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.4480022819109537cx, 0.8268844783431684cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.4621474563253365cx, 0.03505175019599438cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7086042350221331cx, 0.25312003637568425cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, -0.2866640546331589cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.17874592427600766cx, -1.0cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.2803983580280833cx, -0.9596185983102563cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.6882822484319217cx, -0.7261071319052999cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, -0.41871266824931785cy), 0.024253562503633298w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6291703632183541cx, -0.827752278280866cy), 0.024253562503633298w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.04352102222787613cx, 0.518883769779509cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.007677420856186945cx, -0.022000312192357208cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.723246870517102cx, 0.5976091478625363cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.2810022796314515cx, 0.896685479234256cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.571696526276209cx, 0.6903497397185403cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.4770907445325121cx, -0.04986756035694584cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.10385946690158976cx, 1.0cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.6496662031941196cx, 0.36115493454102277cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.4480022819109537cx, 0.8268844783431684cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.4621474563253365cx, 0.03505175019599438cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7086042350221331cx, 0.25312003637568425cy), \"11\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, -0.2866640546331589cy), \"12\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.17874592427600766cx, -1.0cy), \"13\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.2803983580280833cx, -0.9596185983102563cy), \"14\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.6882822484319217cx, -0.7261071319052999cy), \"15\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, -0.41871266824931785cy), \"16\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6291703632183541cx, -0.827752278280866cy), \"17\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Assuming you already have data_2023 defined\n",
    "G_2020, labels_2020 = create_graph(data_2020)\n",
    "graph2023 = plotgraph(G_2020, labels_2020)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "GkHnrT3ywtjl",
   "metadata": {
    "id": "GkHnrT3ywtjl",
    "outputId": "f860cc55-5198-4afd-8ae8-0729799e3de6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m17×2 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m Node  \u001b[0m\u001b[1m DegreeCentrality \u001b[0m\n",
      "     │\u001b[90m Int64 \u001b[0m\u001b[90m Float64          \u001b[0m\n",
      "─────┼─────────────────────────\n",
      "   1 │     5               2.0\n",
      "   2 │    16               1.0\n",
      "   3 │    12               1.0\n",
      "   4 │     8               2.0\n",
      "   5 │    17               1.0\n",
      "   6 │     1               9.0\n",
      "   7 │     6               2.0\n",
      "   8 │    11               2.0\n",
      "   9 │     9               2.0\n",
      "  10 │    14               1.0\n",
      "  11 │     3               2.0\n",
      "  12 │     7               2.0\n",
      "  13 │     4               2.0\n",
      "  14 │    13               1.0\n",
      "  15 │    15               1.0\n",
      "  16 │     2              15.0\n",
      "  17 │    10               2.0\n"
     ]
    }
   ],
   "source": [
    "using DataFrames\n",
    "\n",
    "# Assuming degree_centrality_2023 is a dictionary\n",
    "degree_centrality_2020 = degree_centrality(G_2020)\n",
    "\n",
    "# Flatten the dictionary\n",
    "flattened_data = [(node, centrality) for (nodes, centrality) in zip(keys(degree_centrality_2020), values(degree_centrality_2020)) for node in nodes]\n",
    "\n",
    "# Create a DataFrame\n",
    "df_degree_centrality_2020 = DataFrame(flattened_data, [:Node, :DegreeCentrality])\n",
    "\n",
    "# Print the DataFrame\n",
    "println(df_degree_centrality_2020)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc87bca6",
   "metadata": {},
   "source": [
    "## Plot for 2020 "
   ]
  },
  {
   "attachments": {
    "2020%20graph.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "c093e306",
   "metadata": {},
   "source": [
    "![2020%20graph.PNG](attachment:2020%20graph.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "FeT5VvVrwtjl",
   "metadata": {
    "id": "FeT5VvVrwtjl"
   },
   "source": [
    "# 2020 &2021"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "LN_7aRqHwtjl",
   "metadata": {
    "id": "LN_7aRqHwtjl",
    "outputId": "bb57451e-937a-40b5-bbac-8512c119f45f"
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.49\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-af5d123f-1\">\n",
       "  <g transform=\"translate(75.57,35.06)\">\n",
       "    <path fill=\"none\" d=\"M-18.71,-2.68 L18.71,2.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.78,32.23)\">\n",
       "    <path fill=\"none\" d=\"M-20.87,-0.17 L20.87,0.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.18,32.69)\">\n",
       "    <path fill=\"none\" d=\"M-15.28,-0.56 L15.28,0.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.3,25.25)\">\n",
       "    <path fill=\"none\" d=\"M16.05,6 L-16.05,-6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.13,29.05)\">\n",
       "    <path fill=\"none\" d=\"M18.97,2.66 L-18.97,-2.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.11,22.5)\">\n",
       "    <path fill=\"none\" d=\"M11.67,8.32 L-11.67,-8.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54,20.19)\">\n",
       "    <path fill=\"none\" d=\"M0.42,10.14 L-0.42,-10.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.13,20.77)\">\n",
       "    <path fill=\"none\" d=\"M6.34,9.71 L-6.34,-9.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.46,20.96)\">\n",
       "    <path fill=\"none\" d=\"M-6,9.52 L6,-9.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.12,40.18)\">\n",
       "    <path fill=\"none\" d=\"M-5.42,-6.65 L5.42,6.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.96,42.82)\">\n",
       "    <path fill=\"none\" d=\"M-2.09,-9.09 L2.09,9.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.84,44.28)\">\n",
       "    <path fill=\"none\" d=\"M4.01,-10.58 L-4.01,10.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.35,39.07)\">\n",
       "    <path fill=\"none\" d=\"M4.86,-5.57 L-4.86,5.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.86,37.92)\">\n",
       "    <path fill=\"none\" d=\"M-0.98,-4.18 L0.98,4.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.29,36.6)\">\n",
       "    <path fill=\"none\" d=\"M-6.85,-3.54 L6.85,3.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.47,38.89)\">\n",
       "    <path fill=\"none\" d=\"M-11.05,-5.83 L11.05,5.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.65,42.16)\">\n",
       "    <path fill=\"none\" d=\"M7.56,-8.66 L-7.56,8.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.27,41.17)\">\n",
       "    <path fill=\"none\" d=\"M1.8,-7.44 L-1.8,7.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.17,47.62)\">\n",
       "    <path fill=\"none\" d=\"M4.6,7.96 L-4.6,-7.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.38,44.79)\">\n",
       "    <path fill=\"none\" d=\"M2.86,10.69 L-2.86,-10.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.79,45.25)\">\n",
       "    <path fill=\"none\" d=\"M7.77,10.4 L-7.77,-10.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(118.66,59.87)\">\n",
       "    <path fill=\"none\" d=\"M-8.69,-2.14 L8.69,2.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.08,53.97)\">\n",
       "    <path fill=\"none\" d=\"M-1.94,1.83 L1.94,-1.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.89,60.95)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,-2.43 L2.7,2.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.37,65.22)\">\n",
       "    <path fill=\"none\" d=\"M8.7,-6.79 L-8.7,6.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.99,66.89)\">\n",
       "    <path fill=\"none\" d=\"M3.92,-8.11 L-3.92,8.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.89,66.83)\">\n",
       "    <path fill=\"none\" d=\"M-0.99,-7.95 L0.99,7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.69,56.45)\">\n",
       "    <path fill=\"none\" d=\"M-6.59,0.52 L6.59,-0.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.5,63.36)\">\n",
       "    <path fill=\"none\" d=\"M-8,-5.05 L8,5.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.65,65.55)\">\n",
       "    <path fill=\"none\" d=\"M-4.87,-6.85 L4.87,6.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.06,62.52)\">\n",
       "    <path fill=\"none\" d=\"M1.84,-3.74 L-1.84,3.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.1,56.69)\">\n",
       "    <path fill=\"none\" d=\"M5.21,6.87 L-5.21,-6.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.94,59.33)\">\n",
       "    <path fill=\"none\" d=\"M8.59,4.69 L-8.59,-4.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.83,60.79)\">\n",
       "    <path fill=\"none\" d=\"M15.34,3.72 L-15.34,-3.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.34,55.58)\">\n",
       "    <path fill=\"none\" d=\"M17.13,8.5 L-17.13,-8.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.85,54.43)\">\n",
       "    <path fill=\"none\" d=\"M10.13,9.28 L-10.13,-9.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.27,53.11)\">\n",
       "    <path fill=\"none\" d=\"M3.6,10.29 L-3.6,-10.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.46,55.4)\">\n",
       "    <path fill=\"none\" d=\"M-0,7.95 L0,-7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.63,58.67)\">\n",
       "    <path fill=\"none\" d=\"M19.58,5.73 L-19.58,-5.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.26,57.68)\">\n",
       "    <path fill=\"none\" d=\"M13.2,6.42 L-13.2,-6.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.05,63.81)\">\n",
       "    <path fill=\"none\" d=\"M-22.18,1.13 L22.18,-1.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.46,57.91)\">\n",
       "    <path fill=\"none\" d=\"M-14.93,6.27 L14.93,-6.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.27,64.9)\">\n",
       "    <path fill=\"none\" d=\"M-15.39,0.14 L15.39,-0.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.75,69.17)\">\n",
       "    <path fill=\"none\" d=\"M-2.1,-2.62 L2.1,2.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.37,70.84)\">\n",
       "    <path fill=\"none\" d=\"M-7.13,-4.62 L7.13,4.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.28,70.77)\">\n",
       "    <path fill=\"none\" d=\"M-12.7,-4.89 L12.7,4.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.07,60.4)\">\n",
       "    <path fill=\"none\" d=\"M-20.29,4.18 L20.29,-4.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.88,67.31)\">\n",
       "    <path fill=\"none\" d=\"M-21.03,-2.02 L21.03,2.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.03,69.5)\">\n",
       "    <path fill=\"none\" d=\"M-17.27,-3.91 L17.27,3.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.44,66.47)\">\n",
       "    <path fill=\"none\" d=\"M-8.6,-1.1 L8.6,1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.41,71.03)\">\n",
       "    <path fill=\"none\" d=\"M17.81,-5.3 L-17.81,5.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.37,74.27)\">\n",
       "    <path fill=\"none\" d=\"M14.21,-8.13 L-14.21,8.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.71,76.51)\">\n",
       "    <path fill=\"none\" d=\"M9.41,-10.02 L-9.41,10.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.58,76.79)\">\n",
       "    <path fill=\"none\" d=\"M-12.56,-10.43 L12.56,10.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.52,78.37)\">\n",
       "    <path fill=\"none\" d=\"M-2.68,-11.61 L2.68,11.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.9,77.87)\">\n",
       "    <path fill=\"none\" d=\"M3.96,-11.15 L-3.96,11.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.49\" stroke=\"#D3D3D3\" id=\"img-af5d123f-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-af5d123f-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-af5d123f-4\">\n",
       "  <g transform=\"translate(54.48,32.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.69,57.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.45,65.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.65,38.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.07,32.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.88,33.34)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(18.11,18.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,26.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.74,12.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.51,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.78,9.51)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.44,9.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.75,48.31)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.43,53.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.2,56.51)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.22,46.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.24,43.79)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.09,41.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.46,45.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.81,52.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.06,50.29)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,62.56)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.47,50.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.08,64.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.04,73.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.28,76.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.1,76.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(125.69,55.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.31,69.56)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.6,73.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.42,67.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.37,77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.28,83.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.96,87.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.71,88.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.59,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.35,90.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-af5d123f-5\">\n",
       "  <g transform=\"translate(54.48,32.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.69,57.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.45,65.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.65,38.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.07,32.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.88,33.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(18.11,18.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,26.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.74,12.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.51,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.78,9.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.44,9.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.75,48.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.43,53.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.2,56.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.22,46.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.24,43.79)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.09,41.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.46,45.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.81,52.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.06,50.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,62.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.47,50.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.08,64.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.04,73.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.28,76.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.1,76.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(125.69,55.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.31,69.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.6,73.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.42,67.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.37,77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.28,83.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.96,87.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.71,88.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.59,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.35,90.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-0d976d1c\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.49\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-0d976d1c-1\">\n",
       "  <g transform=\"translate(75.57,35.06)\">\n",
       "    <path fill=\"none\" d=\"M-18.71,-2.68 L18.71,2.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.78,32.23)\">\n",
       "    <path fill=\"none\" d=\"M-20.87,-0.17 L20.87,0.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.18,32.69)\">\n",
       "    <path fill=\"none\" d=\"M-15.28,-0.56 L15.28,0.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.3,25.25)\">\n",
       "    <path fill=\"none\" d=\"M16.05,6 L-16.05,-6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.13,29.05)\">\n",
       "    <path fill=\"none\" d=\"M18.97,2.66 L-18.97,-2.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.11,22.5)\">\n",
       "    <path fill=\"none\" d=\"M11.67,8.32 L-11.67,-8.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54,20.19)\">\n",
       "    <path fill=\"none\" d=\"M0.42,10.14 L-0.42,-10.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.13,20.77)\">\n",
       "    <path fill=\"none\" d=\"M6.34,9.71 L-6.34,-9.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.46,20.96)\">\n",
       "    <path fill=\"none\" d=\"M-6,9.52 L6,-9.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.12,40.18)\">\n",
       "    <path fill=\"none\" d=\"M-5.42,-6.65 L5.42,6.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.96,42.82)\">\n",
       "    <path fill=\"none\" d=\"M-2.09,-9.09 L2.09,9.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.84,44.28)\">\n",
       "    <path fill=\"none\" d=\"M4.01,-10.58 L-4.01,10.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.35,39.07)\">\n",
       "    <path fill=\"none\" d=\"M4.86,-5.57 L-4.86,5.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.86,37.92)\">\n",
       "    <path fill=\"none\" d=\"M-0.98,-4.18 L0.98,4.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.29,36.6)\">\n",
       "    <path fill=\"none\" d=\"M-6.85,-3.54 L6.85,3.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.47,38.89)\">\n",
       "    <path fill=\"none\" d=\"M-11.05,-5.83 L11.05,5.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.65,42.16)\">\n",
       "    <path fill=\"none\" d=\"M7.56,-8.66 L-7.56,8.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.27,41.17)\">\n",
       "    <path fill=\"none\" d=\"M1.8,-7.44 L-1.8,7.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.17,47.62)\">\n",
       "    <path fill=\"none\" d=\"M4.6,7.96 L-4.6,-7.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.38,44.79)\">\n",
       "    <path fill=\"none\" d=\"M2.86,10.69 L-2.86,-10.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.79,45.25)\">\n",
       "    <path fill=\"none\" d=\"M7.77,10.4 L-7.77,-10.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(118.66,59.87)\">\n",
       "    <path fill=\"none\" d=\"M-8.69,-2.14 L8.69,2.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.08,53.97)\">\n",
       "    <path fill=\"none\" d=\"M-1.94,1.83 L1.94,-1.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.89,60.95)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,-2.43 L2.7,2.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.37,65.22)\">\n",
       "    <path fill=\"none\" d=\"M8.7,-6.79 L-8.7,6.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.99,66.89)\">\n",
       "    <path fill=\"none\" d=\"M3.92,-8.11 L-3.92,8.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.89,66.83)\">\n",
       "    <path fill=\"none\" d=\"M-0.99,-7.95 L0.99,7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.69,56.45)\">\n",
       "    <path fill=\"none\" d=\"M-6.59,0.52 L6.59,-0.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.5,63.36)\">\n",
       "    <path fill=\"none\" d=\"M-8,-5.05 L8,5.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.65,65.55)\">\n",
       "    <path fill=\"none\" d=\"M-4.87,-6.85 L4.87,6.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.06,62.52)\">\n",
       "    <path fill=\"none\" d=\"M1.84,-3.74 L-1.84,3.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.1,56.69)\">\n",
       "    <path fill=\"none\" d=\"M5.21,6.87 L-5.21,-6.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.94,59.33)\">\n",
       "    <path fill=\"none\" d=\"M8.59,4.69 L-8.59,-4.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.83,60.79)\">\n",
       "    <path fill=\"none\" d=\"M15.34,3.72 L-15.34,-3.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.34,55.58)\">\n",
       "    <path fill=\"none\" d=\"M17.13,8.5 L-17.13,-8.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.85,54.43)\">\n",
       "    <path fill=\"none\" d=\"M10.13,9.28 L-10.13,-9.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.27,53.11)\">\n",
       "    <path fill=\"none\" d=\"M3.6,10.29 L-3.6,-10.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.46,55.4)\">\n",
       "    <path fill=\"none\" d=\"M-0,7.95 L0,-7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.63,58.67)\">\n",
       "    <path fill=\"none\" d=\"M19.58,5.73 L-19.58,-5.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.26,57.68)\">\n",
       "    <path fill=\"none\" d=\"M13.2,6.42 L-13.2,-6.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.05,63.81)\">\n",
       "    <path fill=\"none\" d=\"M-22.18,1.13 L22.18,-1.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.46,57.91)\">\n",
       "    <path fill=\"none\" d=\"M-14.93,6.27 L14.93,-6.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.27,64.9)\">\n",
       "    <path fill=\"none\" d=\"M-15.39,0.14 L15.39,-0.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.75,69.17)\">\n",
       "    <path fill=\"none\" d=\"M-2.1,-2.62 L2.1,2.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.37,70.84)\">\n",
       "    <path fill=\"none\" d=\"M-7.13,-4.62 L7.13,4.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.28,70.77)\">\n",
       "    <path fill=\"none\" d=\"M-12.7,-4.89 L12.7,4.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.07,60.4)\">\n",
       "    <path fill=\"none\" d=\"M-20.29,4.18 L20.29,-4.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.88,67.31)\">\n",
       "    <path fill=\"none\" d=\"M-21.03,-2.02 L21.03,2.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.03,69.5)\">\n",
       "    <path fill=\"none\" d=\"M-17.27,-3.91 L17.27,3.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.44,66.47)\">\n",
       "    <path fill=\"none\" d=\"M-8.6,-1.1 L8.6,1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.41,71.03)\">\n",
       "    <path fill=\"none\" d=\"M17.81,-5.3 L-17.81,5.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.37,74.27)\">\n",
       "    <path fill=\"none\" d=\"M14.21,-8.13 L-14.21,8.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.71,76.51)\">\n",
       "    <path fill=\"none\" d=\"M9.41,-10.02 L-9.41,10.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.58,76.79)\">\n",
       "    <path fill=\"none\" d=\"M-12.56,-10.43 L12.56,10.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.52,78.37)\">\n",
       "    <path fill=\"none\" d=\"M-2.68,-11.61 L2.68,11.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.9,77.87)\">\n",
       "    <path fill=\"none\" d=\"M3.96,-11.15 L-3.96,11.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.49\" stroke=\"#D3D3D3\" id=\"img-0d976d1c-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-0d976d1c-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-0d976d1c-4\">\n",
       "  <g transform=\"translate(54.48,32.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.69,57.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.45,65.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.65,38.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.07,32.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.88,33.34)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(18.11,18.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,26.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.74,12.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.51,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.78,9.51)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.44,9.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.75,48.31)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.43,53.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.2,56.51)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.22,46.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.24,43.79)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.09,41.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.46,45.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.81,52.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.06,50.29)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,62.56)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.47,50.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.08,64.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.04,73.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.28,76.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.1,76.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(125.69,55.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.31,69.56)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.6,73.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.42,67.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.37,77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.28,83.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.96,87.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.71,88.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.59,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.35,90.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-0d976d1c-5\">\n",
       "  <g transform=\"translate(54.48,32.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.69,57.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.45,65.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.65,38.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.07,32.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.88,33.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(18.11,18.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,26.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.74,12.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.51,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.78,9.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.44,9.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.75,48.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.43,53.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.2,56.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.22,46.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.24,43.79)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.09,41.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.46,45.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.81,52.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.06,50.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,62.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.47,50.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.08,64.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.04,73.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.28,76.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.1,76.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(125.69,55.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.31,69.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.6,73.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.42,67.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.37,77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.28,83.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.96,87.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.71,88.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.59,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.35,90.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.23508452793950022cx, -0.42280062500468174cy), (0.39987407888405757cx, -0.2942529416044771cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.23427002344314143cx, -0.4304830324267164cy), (0.4741627805411935cx, -0.4223327219828011cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2343222306205064cx, -0.4288317082495312cy), (0.284268739276788cx, -0.40199381796256184cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.31170405454533046cx, -0.4501603028818855cy), (-0.8563491902029992cx, -0.7380105734571295cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.31568195054914194cx, -0.4389494659880922cy), (-0.9596851000452815cx, -0.5666421872025312cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.3042976595237647cx, -0.4601484614938664cy), (-0.7002670580781661cx, -0.8597039692658691cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.27655684469918795cx, -0.4720383631793733cy), (-0.29065738864837665cx, -0.9589174784223575cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.29258053369132747cx, -0.46827721870469674cy), (-0.5076360573318809cx, -0.9345493991042855cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.25865144560158865cx, -0.46850284865838854cy), (-0.05517288619007349cx, -0.9255614420732017cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2548318622405813cx, -0.3953539423762483cy), (-0.07074970848766685cx, -0.07621032537139928cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.20481693142814905cx, 0.3500200163513641cy), (0.8934953469582304cx, 0.1491467952078926cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.20608846266089495cx, 0.3670500050427884cy), (0.9197548305409331cx, 0.46380562315448415cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.20450304657976165cx, 0.37406289658358244cy), (0.7905554964100817cx, 0.5617364753557792cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2058037520540973cx, 0.3688494642681662cy), (0.497764276502891cx, 0.4217013794640304cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12748208697643898cx, 0.3774768768658299cy), (-0.47708842675396085cx, 0.6320221435930188cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.13341235140136232cx, 0.38738286871219085cy), (-0.3487718379276846cx, 0.7775869750638006cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.1426265494381435cx, 0.3957675618330877cy), (-0.1766973399448139cx, 0.8766779238874763cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.19200835676480185cx, 0.39281936097243864cy), (0.6182006870987988cx, 0.8932862649783577cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.171972902479703cx, 0.4020928712764672cy), (0.26281406948238945cx, 0.9594355326637413cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.15534168246812516cx, 0.401388111532906cy), (0.020863330364651173cx, 0.9363649595356561cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.4931969619160719mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.4931969619160719mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.27536705059442346cx, -0.43095584160173084cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6275729736471194cx, 0.17201376459301354cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.1653613082003489cx, 0.36152840394020846cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.44015660153898084cx, -0.286097725007428cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5152598076924755cx, -0.4218599128077867cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.32531355925070504cx, -0.3998696846103622cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.8926861941539062cx, -0.7572150347372841cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, -0.5746358115888925cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.7291976670075074cx, -0.8888965891580047cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.29184718275314114cx, -1.0cy), 0.01643989873053573w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9329509701860306cx, 0.13763840761904822cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9604819850014792cx, 0.4693272242570641cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8296972347894944cx, 0.5742709679991531cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5382067203566394cx, 0.4290224397919882cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.5149676479778708cx, 0.6479706165186403cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3807207947266712cx, 0.803441439835783cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.19943209870701928cx, 0.9109170817803556cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6448477356632518cx, 0.9245772220105879cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.2694256637617436cx, 1.0cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.010843704632427453cx, 0.9762246671283537cy), 0.01643989873053573w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.27536705059442346cx, -0.43095584160173084cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6275729736471194cx, 0.17201376459301354cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.1653613082003489cx, 0.36152840394020846cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.44015660153898084cx, -0.286097725007428cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5152598076924755cx, -0.4218599128077867cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.32531355925070504cx, -0.3998696846103622cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.8926861941539062cx, -0.7572150347372841cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, -0.5746358115888925cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.7291976670075074cx, -0.8888965891580047cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.29184718275314114cx, -1.0cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9329509701860306cx, 0.13763840761904822cy), \"28\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9604819850014792cx, 0.4693272242570641cy), \"29\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8296972347894944cx, 0.5742709679991531cy), \"30\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5382067203566394cx, 0.4290224397919882cy), \"31\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5149676479778708cx, 0.6479706165186403cy), \"32\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3807207947266712cx, 0.803441439835783cy), \"33\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.19943209870701928cx, 0.9109170817803556cy), \"34\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6448477356632518cx, 0.9245772220105879cy), \"35\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.2694256637617436cx, 1.0cy), \"36\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.010843704632427453cx, 0.9762246671283537cy), \"37\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Assuming you already have data_2023 defined\n",
    "G_2020_2021, labels_2020_2021 = create_graph(data_2020_2021)\n",
    "graph2023 = plotgraph(G_2020_2021, labels_2020_2021)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6c0eb615",
   "metadata": {
    "id": "A7TCGXqIwtjm",
    "outputId": "9d777813-0c57-4843-9858-3654ac08371b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m37×2 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m Node  \u001b[0m\u001b[1m DegreeCentrality \u001b[0m\n",
      "     │\u001b[90m Int64 \u001b[0m\u001b[90m Float64          \u001b[0m\n",
      "─────┼─────────────────────────\n",
      "   1 │     5               2.0\n",
      "   2 │    16               2.0\n",
      "   3 │    20               2.0\n",
      "   4 │    35               1.0\n",
      "   5 │    12               1.0\n",
      "   6 │    24               2.0\n",
      "   7 │    28               2.0\n",
      "   8 │     8               1.0\n",
      "   9 │    17               2.0\n",
      "  10 │    30               2.0\n",
      "  11 │     1              18.0\n",
      "  12 │    19               2.0\n",
      "  13 │    22               2.0\n",
      "  14 │    23               2.0\n",
      "  15 │     6               2.0\n",
      "  16 │    32               1.0\n",
      "  17 │    11               1.0\n",
      "  18 │    36               1.0\n",
      "  19 │    37               1.0\n",
      "  20 │     9               1.0\n",
      "  21 │    31               2.0\n",
      "  22 │    14               2.0\n",
      "  23 │     3              25.0\n",
      "  24 │    29               2.0\n",
      "  25 │     7               1.0\n",
      "  26 │    25               2.0\n",
      "  27 │    33               1.0\n",
      "  28 │    34               1.0\n",
      "  29 │     4               2.0\n",
      "  30 │    13               2.0\n",
      "  31 │    15               2.0\n",
      "  32 │     2              13.0\n",
      "  33 │    10               1.0\n",
      "  34 │    18               2.0\n",
      "  35 │    21               2.0\n",
      "  36 │    26               2.0\n",
      "  37 │    27               2.0\n"
     ]
    }
   ],
   "source": [
    "using DataFrames\n",
    "\n",
    "# Assuming degree_centrality_2023 is a dictionary\n",
    "degree_centrality_2020_2021 = degree_centrality(G_2020_2021)\n",
    "\n",
    "# Flatten the dictionary\n",
    "flattened_data = [(node, centrality) for (nodes, centrality) in zip(keys(degree_centrality_2020_2021), values(degree_centrality_2020_2021)) for node in nodes]\n",
    "\n",
    "# Create a DataFrame\n",
    "df_degree_centrality_2020_2021 = DataFrame(flattened_data, [:Node, :DegreeCentrality])\n",
    "\n",
    "# Print the DataFrame\n",
    "println(df_degree_centrality_2020_2021)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df8d8a3a",
   "metadata": {},
   "source": [
    "## Plot for 2020&2021"
   ]
  },
  {
   "attachments": {
    "2020_2021_graph.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "1f02fea2",
   "metadata": {},
   "source": [
    "![2020_2021_graph.PNG](attachment:2020_2021_graph.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "HDPcstKXwtjm",
   "metadata": {
    "id": "HDPcstKXwtjm"
   },
   "source": [
    "# 2020, 2021, 2022"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "q2F32YxIwtjm",
   "metadata": {
    "id": "q2F32YxIwtjm",
    "outputId": "600173af-1136-4c09-9565-54deb722afe6"
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.4\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-16575650-1\">\n",
       "  <g transform=\"translate(60.46,45.33)\">\n",
       "    <path fill=\"none\" d=\"M6.97,-9 L-6.97,9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.99,37.39)\">\n",
       "    <path fill=\"none\" d=\"M12.48,-1.98 L-12.48,1.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.13,33.35)\">\n",
       "    <path fill=\"none\" d=\"M11.32,1.51 L-11.32,-1.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.01,34.21)\">\n",
       "    <path fill=\"none\" d=\"M14.41,0.8 L-14.41,-0.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.03,41.18)\">\n",
       "    <path fill=\"none\" d=\"M14.61,-5.42 L-14.61,5.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.96,39.54)\">\n",
       "    <path fill=\"none\" d=\"M0.98,-3.08 L-0.98,3.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.55,39.47)\">\n",
       "    <path fill=\"none\" d=\"M9.12,-3.67 L-9.12,3.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.3,40.25)\">\n",
       "    <path fill=\"none\" d=\"M4.82,-4.08 L-4.82,4.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.75,42.41)\">\n",
       "    <path fill=\"none\" d=\"M11.1,-6.42 L-11.1,6.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.08,36.34)\">\n",
       "    <path fill=\"none\" d=\"M16.35,-1.1 L-16.35,1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.7,35.34)\">\n",
       "    <path fill=\"none\" d=\"M4.72,-0.16 L-4.72,0.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.56,32.47)\">\n",
       "    <path fill=\"none\" d=\"M4.17,1.9 L-4.17,-1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.68,36.32)\">\n",
       "    <path fill=\"none\" d=\"M8.76,-0.99 L-8.76,0.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.94,38.99)\">\n",
       "    <path fill=\"none\" d=\"M16.56,-3.48 L-16.56,3.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.1,32)\">\n",
       "    <path fill=\"none\" d=\"M8.47,2.57 L-8.47,-2.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.07,25.54)\">\n",
       "    <path fill=\"none\" d=\"M-12.31,8.6 L12.31,-8.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.06,21.93)\">\n",
       "    <path fill=\"none\" d=\"M3.87,11.85 L-3.87,-11.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.48,22.23)\">\n",
       "    <path fill=\"none\" d=\"M-4.59,11.56 L4.59,-11.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.88,21.72)\">\n",
       "    <path fill=\"none\" d=\"M-0.46,12.01 L0.46,-12.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.88,23.44)\">\n",
       "    <path fill=\"none\" d=\"M-8.54,10.48 L8.54,-10.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.84,22.97)\">\n",
       "    <path fill=\"none\" d=\"M8.58,10.93 L-8.58,-10.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.44,40.78)\">\n",
       "    <path fill=\"none\" d=\"M-13.36,-5.02 L13.36,5.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.83,43.48)\">\n",
       "    <path fill=\"none\" d=\"M-11.05,-7.41 L11.05,7.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.69,41.2)\">\n",
       "    <path fill=\"none\" d=\"M-17.54,-5.52 L17.54,5.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.73,43.41)\">\n",
       "    <path fill=\"none\" d=\"M-5.44,-7.09 L5.44,7.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.1,43.36)\">\n",
       "    <path fill=\"none\" d=\"M-15.13,-7.46 L15.13,7.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.6,37.39)\">\n",
       "    <path fill=\"none\" d=\"M-13.32,-1.99 L13.32,1.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.87,38.69)\">\n",
       "    <path fill=\"none\" d=\"M-16.62,-3.21 L16.62,3.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.89,41.41)\">\n",
       "    <path fill=\"none\" d=\"M-8.1,-5.36 L8.1,5.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.36,38.97)\">\n",
       "    <path fill=\"none\" d=\"M-10.22,-3.29 L10.22,3.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.99,61.04)\">\n",
       "    <path fill=\"none\" d=\"M-17.63,-4.99 L17.63,4.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.08,47.61)\">\n",
       "    <path fill=\"none\" d=\"M5.5,6.74 L-5.5,-6.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.22,43.56)\">\n",
       "    <path fill=\"none\" d=\"M4.74,10.66 L-4.74,-10.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.1,44.42)\">\n",
       "    <path fill=\"none\" d=\"M7.52,9.9 L-7.52,-9.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.12,51.39)\">\n",
       "    <path fill=\"none\" d=\"M6.83,3.36 L-6.83,-3.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.05,49.75)\">\n",
       "    <path fill=\"none\" d=\"M-5.29,4.71 L5.29,-4.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.64,49.68)\">\n",
       "    <path fill=\"none\" d=\"M2.26,4.56 L-2.26,-4.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.39,50.46)\">\n",
       "    <path fill=\"none\" d=\"M-1.36,3.74 L1.36,-3.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.84,52.63)\">\n",
       "    <path fill=\"none\" d=\"M3.24,2.01 L-3.24,-2.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.17,46.55)\">\n",
       "    <path fill=\"none\" d=\"M9.15,7.92 L-9.15,-7.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.79,45.56)\">\n",
       "    <path fill=\"none\" d=\"M-1.07,8.61 L1.07,-8.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.65,42.69)\">\n",
       "    <path fill=\"none\" d=\"M-1.88,11.49 L1.88,-11.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,46.53)\">\n",
       "    <path fill=\"none\" d=\"M2.36,7.66 L-2.36,-7.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.03,49.2)\">\n",
       "    <path fill=\"none\" d=\"M9.04,5.45 L-9.04,-5.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.19,42.22)\">\n",
       "    <path fill=\"none\" d=\"M2.11,11.96 L-2.11,-11.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.24,63.61)\">\n",
       "    <path fill=\"none\" d=\"M13.74,-7.25 L-13.74,7.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.27,66.23)\">\n",
       "    <path fill=\"none\" d=\"M11.05,-9.61 L-11.05,9.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.45,58.61)\">\n",
       "    <path fill=\"none\" d=\"M17.19,-2.77 L-17.19,2.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.97,43.08)\">\n",
       "    <path fill=\"none\" d=\"M-7.58,11.22 L7.58,-11.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.99,61.62)\">\n",
       "    <path fill=\"none\" d=\"M16.79,-5.5 L-16.79,5.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.76,46.89)\">\n",
       "    <path fill=\"none\" d=\"M-10.84,7.68 L10.84,-7.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.17,55.32)\">\n",
       "    <path fill=\"none\" d=\"M18.43,0.21 L-18.43,-0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.92,63.4)\">\n",
       "    <path fill=\"none\" d=\"M-15.73,-7.12 L15.73,7.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.27,61.33)\">\n",
       "    <path fill=\"none\" d=\"M-4.6,-4.66 L4.6,4.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.08,59.45)\">\n",
       "    <path fill=\"none\" d=\"M-11.72,-3.38 L11.72,3.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.16,62.63)\">\n",
       "    <path fill=\"none\" d=\"M-1.3,-5.72 L1.3,5.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.35,65.67)\">\n",
       "    <path fill=\"none\" d=\"M-12.45,-9.14 L12.45,9.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.95,59.91)\">\n",
       "    <path fill=\"none\" d=\"M-7.77,-3.61 L7.77,3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.83,65.34)\">\n",
       "    <path fill=\"none\" d=\"M-1.1,-8.43 L1.1,8.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.27,67.37)\">\n",
       "    <path fill=\"none\" d=\"M-3.3,-10.48 L3.3,10.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.96,68.06)\">\n",
       "    <path fill=\"none\" d=\"M-6.66,-11.25 L6.66,11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.06,64.89)\">\n",
       "    <path fill=\"none\" d=\"M-5.65,-8.11 L5.65,8.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.25,63.43)\">\n",
       "    <path fill=\"none\" d=\"M-9.35,-6.89 L9.35,6.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.33,67.14)\">\n",
       "    <path fill=\"none\" d=\"M-9.71,-10.45 L9.71,10.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.97,56.49)\">\n",
       "    <path fill=\"none\" d=\"M-3.08,8.71 L3.08,-8.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.36,59.19)\">\n",
       "    <path fill=\"none\" d=\"M-0.76,5.97 L0.76,-5.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.22,56.91)\">\n",
       "    <path fill=\"none\" d=\"M-6.82,8.43 L6.82,-8.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.26,59.12)\">\n",
       "    <path fill=\"none\" d=\"M4.3,6.18 L-4.3,-6.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.63,59.07)\">\n",
       "    <path fill=\"none\" d=\"M-4.34,6.23 L4.34,-6.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.13,53.1)\">\n",
       "    <path fill=\"none\" d=\"M-3.33,12.08 L3.33,-12.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.39,54.4)\">\n",
       "    <path fill=\"none\" d=\"M-6.24,10.86 L6.24,-10.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.42,57.13)\">\n",
       "    <path fill=\"none\" d=\"M1.71,8.05 L-1.71,-8.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.89,54.69)\">\n",
       "    <path fill=\"none\" d=\"M-0.41,10.47 L0.41,-10.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.36,68.9)\">\n",
       "    <path fill=\"none\" d=\"M1.04,-1.19 L-1.04,1.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.71,66.83)\">\n",
       "    <path fill=\"none\" d=\"M11.77,-0.25 L-11.77,0.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.51,64.95)\">\n",
       "    <path fill=\"none\" d=\"M4.09,1.1 L-4.09,-1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.6,68.13)\">\n",
       "    <path fill=\"none\" d=\"M15.89,-1.42 L-15.89,1.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.79,71.17)\">\n",
       "    <path fill=\"none\" d=\"M4.36,-3.59 L-4.36,3.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.39,65.41)\">\n",
       "    <path fill=\"none\" d=\"M8.11,0.91 L-8.11,-0.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.27,70.84)\">\n",
       "    <path fill=\"none\" d=\"M16.31,-3.87 L-16.31,3.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.71,72.86)\">\n",
       "    <path fill=\"none\" d=\"M14.02,-5.64 L-14.02,5.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.4,73.56)\">\n",
       "    <path fill=\"none\" d=\"M10.52,-6.14 L-10.52,6.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.5,70.38)\">\n",
       "    <path fill=\"none\" d=\"M11.12,-3.31 L-11.12,3.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.69,68.93)\">\n",
       "    <path fill=\"none\" d=\"M6.92,-1.89 L-6.92,1.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.77,72.64)\">\n",
       "    <path fill=\"none\" d=\"M7.27,-5.13 L-7.27,5.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.56,70.74)\">\n",
       "    <path fill=\"none\" d=\"M-16.29,-3.77 L16.29,3.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.56,73.52)\">\n",
       "    <path fill=\"none\" d=\"M-14.47,-6.26 L14.47,6.26 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.93,77.73)\">\n",
       "    <path fill=\"none\" d=\"M-8.5,-10.01 L8.5,10.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.53,67.4)\">\n",
       "    <path fill=\"none\" d=\"M-17.16,-0.77 L17.16,0.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.68,75.86)\">\n",
       "    <path fill=\"none\" d=\"M-11.87,-8.34 L11.87,8.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.08,79.1)\">\n",
       "    <path fill=\"none\" d=\"M-4.17,-11.23 L4.17,11.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.4\" stroke=\"#D3D3D3\" id=\"img-16575650-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-16575650-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-16575650-4\">\n",
       "  <g transform=\"translate(68.37,35.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.55,55.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.42,66.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.61,39.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.89,31.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.66,33.3)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.69,47.24)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.56,43.97)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.73,43.82)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.23,45.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.14,49.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.79,37.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.04,35.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.75,29.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.99,37.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.51,42.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.84,28.89)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.77,15.97)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.75,8.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.6,9.34)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.39,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.4,11.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.32,10.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.52,46.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.3,51.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.01,47.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.1,51.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.83,51.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.83,39.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.37,42.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.42,47.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.36,42.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.94,71.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.98,76.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.35,61.69)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.38,30.61)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.44,67.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.98,38.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,55.09)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.29,71.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.99,67.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.61,63.35)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.77,69.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.15,75.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.35,64.29)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.11,75.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60,79.19)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.38,80.58)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.58,74.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.95,71.32)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.12,78.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.7,74.94)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.69,80.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.43,88.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,68.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.93,85.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.75,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-16575650-5\">\n",
       "  <g transform=\"translate(68.37,35.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.55,55.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.42,66.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.61,39.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.89,31.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.66,33.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.69,47.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.56,43.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.73,43.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.23,45.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.14,49.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.79,37.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.04,35.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.75,29.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.99,37.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.51,42.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.84,28.89)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.77,15.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.75,8.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.6,9.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.39,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.4,11.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.32,10.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.52,46.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.3,51.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.01,47.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.1,51.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.83,51.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.83,39.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.37,42.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.42,47.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.36,42.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.94,71.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.98,76.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.35,61.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.38,30.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.44,67.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.98,38.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,55.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.29,71.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.99,67.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.61,63.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.77,69.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.15,75.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.35,64.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.11,75.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60,79.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.38,80.58)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.58,74.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.95,71.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.12,78.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.7,74.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.69,80.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.43,88.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,68.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.93,85.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.75,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-89efedb0\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.4\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-89efedb0-1\">\n",
       "  <g transform=\"translate(60.46,45.33)\">\n",
       "    <path fill=\"none\" d=\"M6.97,-9 L-6.97,9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.99,37.39)\">\n",
       "    <path fill=\"none\" d=\"M12.48,-1.98 L-12.48,1.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.13,33.35)\">\n",
       "    <path fill=\"none\" d=\"M11.32,1.51 L-11.32,-1.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.01,34.21)\">\n",
       "    <path fill=\"none\" d=\"M14.41,0.8 L-14.41,-0.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.03,41.18)\">\n",
       "    <path fill=\"none\" d=\"M14.61,-5.42 L-14.61,5.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.96,39.54)\">\n",
       "    <path fill=\"none\" d=\"M0.98,-3.08 L-0.98,3.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.55,39.47)\">\n",
       "    <path fill=\"none\" d=\"M9.12,-3.67 L-9.12,3.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.3,40.25)\">\n",
       "    <path fill=\"none\" d=\"M4.82,-4.08 L-4.82,4.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.75,42.41)\">\n",
       "    <path fill=\"none\" d=\"M11.1,-6.42 L-11.1,6.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.08,36.34)\">\n",
       "    <path fill=\"none\" d=\"M16.35,-1.1 L-16.35,1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.7,35.34)\">\n",
       "    <path fill=\"none\" d=\"M4.72,-0.16 L-4.72,0.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.56,32.47)\">\n",
       "    <path fill=\"none\" d=\"M4.17,1.9 L-4.17,-1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.68,36.32)\">\n",
       "    <path fill=\"none\" d=\"M8.76,-0.99 L-8.76,0.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.94,38.99)\">\n",
       "    <path fill=\"none\" d=\"M16.56,-3.48 L-16.56,3.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.1,32)\">\n",
       "    <path fill=\"none\" d=\"M8.47,2.57 L-8.47,-2.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.07,25.54)\">\n",
       "    <path fill=\"none\" d=\"M-12.31,8.6 L12.31,-8.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.06,21.93)\">\n",
       "    <path fill=\"none\" d=\"M3.87,11.85 L-3.87,-11.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.48,22.23)\">\n",
       "    <path fill=\"none\" d=\"M-4.59,11.56 L4.59,-11.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.88,21.72)\">\n",
       "    <path fill=\"none\" d=\"M-0.46,12.01 L0.46,-12.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.88,23.44)\">\n",
       "    <path fill=\"none\" d=\"M-8.54,10.48 L8.54,-10.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.84,22.97)\">\n",
       "    <path fill=\"none\" d=\"M8.58,10.93 L-8.58,-10.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.44,40.78)\">\n",
       "    <path fill=\"none\" d=\"M-13.36,-5.02 L13.36,5.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.83,43.48)\">\n",
       "    <path fill=\"none\" d=\"M-11.05,-7.41 L11.05,7.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.69,41.2)\">\n",
       "    <path fill=\"none\" d=\"M-17.54,-5.52 L17.54,5.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.73,43.41)\">\n",
       "    <path fill=\"none\" d=\"M-5.44,-7.09 L5.44,7.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.1,43.36)\">\n",
       "    <path fill=\"none\" d=\"M-15.13,-7.46 L15.13,7.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.6,37.39)\">\n",
       "    <path fill=\"none\" d=\"M-13.32,-1.99 L13.32,1.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.87,38.69)\">\n",
       "    <path fill=\"none\" d=\"M-16.62,-3.21 L16.62,3.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.89,41.41)\">\n",
       "    <path fill=\"none\" d=\"M-8.1,-5.36 L8.1,5.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.36,38.97)\">\n",
       "    <path fill=\"none\" d=\"M-10.22,-3.29 L10.22,3.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.99,61.04)\">\n",
       "    <path fill=\"none\" d=\"M-17.63,-4.99 L17.63,4.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.08,47.61)\">\n",
       "    <path fill=\"none\" d=\"M5.5,6.74 L-5.5,-6.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.22,43.56)\">\n",
       "    <path fill=\"none\" d=\"M4.74,10.66 L-4.74,-10.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.1,44.42)\">\n",
       "    <path fill=\"none\" d=\"M7.52,9.9 L-7.52,-9.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.12,51.39)\">\n",
       "    <path fill=\"none\" d=\"M6.83,3.36 L-6.83,-3.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.05,49.75)\">\n",
       "    <path fill=\"none\" d=\"M-5.29,4.71 L5.29,-4.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.64,49.68)\">\n",
       "    <path fill=\"none\" d=\"M2.26,4.56 L-2.26,-4.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.39,50.46)\">\n",
       "    <path fill=\"none\" d=\"M-1.36,3.74 L1.36,-3.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.84,52.63)\">\n",
       "    <path fill=\"none\" d=\"M3.24,2.01 L-3.24,-2.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.17,46.55)\">\n",
       "    <path fill=\"none\" d=\"M9.15,7.92 L-9.15,-7.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.79,45.56)\">\n",
       "    <path fill=\"none\" d=\"M-1.07,8.61 L1.07,-8.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.65,42.69)\">\n",
       "    <path fill=\"none\" d=\"M-1.88,11.49 L1.88,-11.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,46.53)\">\n",
       "    <path fill=\"none\" d=\"M2.36,7.66 L-2.36,-7.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.03,49.2)\">\n",
       "    <path fill=\"none\" d=\"M9.04,5.45 L-9.04,-5.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.19,42.22)\">\n",
       "    <path fill=\"none\" d=\"M2.11,11.96 L-2.11,-11.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.24,63.61)\">\n",
       "    <path fill=\"none\" d=\"M13.74,-7.25 L-13.74,7.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.27,66.23)\">\n",
       "    <path fill=\"none\" d=\"M11.05,-9.61 L-11.05,9.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.45,58.61)\">\n",
       "    <path fill=\"none\" d=\"M17.19,-2.77 L-17.19,2.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.97,43.08)\">\n",
       "    <path fill=\"none\" d=\"M-7.58,11.22 L7.58,-11.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.99,61.62)\">\n",
       "    <path fill=\"none\" d=\"M16.79,-5.5 L-16.79,5.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.76,46.89)\">\n",
       "    <path fill=\"none\" d=\"M-10.84,7.68 L10.84,-7.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.17,55.32)\">\n",
       "    <path fill=\"none\" d=\"M18.43,0.21 L-18.43,-0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.92,63.4)\">\n",
       "    <path fill=\"none\" d=\"M-15.73,-7.12 L15.73,7.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.27,61.33)\">\n",
       "    <path fill=\"none\" d=\"M-4.6,-4.66 L4.6,4.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.08,59.45)\">\n",
       "    <path fill=\"none\" d=\"M-11.72,-3.38 L11.72,3.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.16,62.63)\">\n",
       "    <path fill=\"none\" d=\"M-1.3,-5.72 L1.3,5.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.35,65.67)\">\n",
       "    <path fill=\"none\" d=\"M-12.45,-9.14 L12.45,9.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.95,59.91)\">\n",
       "    <path fill=\"none\" d=\"M-7.77,-3.61 L7.77,3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.83,65.34)\">\n",
       "    <path fill=\"none\" d=\"M-1.1,-8.43 L1.1,8.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.27,67.37)\">\n",
       "    <path fill=\"none\" d=\"M-3.3,-10.48 L3.3,10.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.96,68.06)\">\n",
       "    <path fill=\"none\" d=\"M-6.66,-11.25 L6.66,11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.06,64.89)\">\n",
       "    <path fill=\"none\" d=\"M-5.65,-8.11 L5.65,8.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.25,63.43)\">\n",
       "    <path fill=\"none\" d=\"M-9.35,-6.89 L9.35,6.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.33,67.14)\">\n",
       "    <path fill=\"none\" d=\"M-9.71,-10.45 L9.71,10.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.97,56.49)\">\n",
       "    <path fill=\"none\" d=\"M-3.08,8.71 L3.08,-8.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.36,59.19)\">\n",
       "    <path fill=\"none\" d=\"M-0.76,5.97 L0.76,-5.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.22,56.91)\">\n",
       "    <path fill=\"none\" d=\"M-6.82,8.43 L6.82,-8.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.26,59.12)\">\n",
       "    <path fill=\"none\" d=\"M4.3,6.18 L-4.3,-6.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.63,59.07)\">\n",
       "    <path fill=\"none\" d=\"M-4.34,6.23 L4.34,-6.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.13,53.1)\">\n",
       "    <path fill=\"none\" d=\"M-3.33,12.08 L3.33,-12.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.39,54.4)\">\n",
       "    <path fill=\"none\" d=\"M-6.24,10.86 L6.24,-10.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.42,57.13)\">\n",
       "    <path fill=\"none\" d=\"M1.71,8.05 L-1.71,-8.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.89,54.69)\">\n",
       "    <path fill=\"none\" d=\"M-0.41,10.47 L0.41,-10.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.36,68.9)\">\n",
       "    <path fill=\"none\" d=\"M1.04,-1.19 L-1.04,1.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.71,66.83)\">\n",
       "    <path fill=\"none\" d=\"M11.77,-0.25 L-11.77,0.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.51,64.95)\">\n",
       "    <path fill=\"none\" d=\"M4.09,1.1 L-4.09,-1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.6,68.13)\">\n",
       "    <path fill=\"none\" d=\"M15.89,-1.42 L-15.89,1.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.79,71.17)\">\n",
       "    <path fill=\"none\" d=\"M4.36,-3.59 L-4.36,3.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.39,65.41)\">\n",
       "    <path fill=\"none\" d=\"M8.11,0.91 L-8.11,-0.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.27,70.84)\">\n",
       "    <path fill=\"none\" d=\"M16.31,-3.87 L-16.31,3.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.71,72.86)\">\n",
       "    <path fill=\"none\" d=\"M14.02,-5.64 L-14.02,5.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.4,73.56)\">\n",
       "    <path fill=\"none\" d=\"M10.52,-6.14 L-10.52,6.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.5,70.38)\">\n",
       "    <path fill=\"none\" d=\"M11.12,-3.31 L-11.12,3.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.69,68.93)\">\n",
       "    <path fill=\"none\" d=\"M6.92,-1.89 L-6.92,1.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.77,72.64)\">\n",
       "    <path fill=\"none\" d=\"M7.27,-5.13 L-7.27,5.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.56,70.74)\">\n",
       "    <path fill=\"none\" d=\"M-16.29,-3.77 L16.29,3.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.56,73.52)\">\n",
       "    <path fill=\"none\" d=\"M-14.47,-6.26 L14.47,6.26 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.93,77.73)\">\n",
       "    <path fill=\"none\" d=\"M-8.5,-10.01 L8.5,10.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.53,67.4)\">\n",
       "    <path fill=\"none\" d=\"M-17.16,-0.77 L17.16,0.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.68,75.86)\">\n",
       "    <path fill=\"none\" d=\"M-11.87,-8.34 L11.87,8.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.08,79.1)\">\n",
       "    <path fill=\"none\" d=\"M-4.17,-11.23 L4.17,11.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.4\" stroke=\"#D3D3D3\" id=\"img-89efedb0-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-89efedb0-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-89efedb0-4\">\n",
       "  <g transform=\"translate(68.37,35.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.55,55.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.42,66.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.61,39.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.89,31.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.66,33.3)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.69,47.24)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.56,43.97)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.73,43.82)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.23,45.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.14,49.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.79,37.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.04,35.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.75,29.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.99,37.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.51,42.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.84,28.89)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.77,15.97)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.75,8.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.6,9.34)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.39,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.4,11.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.32,10.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.52,46.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.3,51.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.01,47.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.1,51.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.83,51.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.83,39.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.37,42.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.42,47.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.36,42.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.94,71.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.98,76.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.35,61.69)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.38,30.61)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.44,67.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.98,38.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,55.09)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.29,71.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.99,67.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.61,63.35)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.77,69.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.15,75.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.35,64.29)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.11,75.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60,79.19)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.38,80.58)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.58,74.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.95,71.32)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.12,78.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.7,74.94)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.69,80.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.43,88.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,68.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.93,85.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.75,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.87\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-89efedb0-5\">\n",
       "  <g transform=\"translate(68.37,35.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.55,55.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.42,66.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.61,39.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.89,31.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.66,33.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.69,47.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.56,43.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.73,43.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.23,45.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.14,49.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.79,37.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.04,35.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.75,29.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.99,37.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.51,42.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.84,28.89)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.77,15.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.75,8.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.6,9.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.39,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.4,11.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.32,10.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.52,46.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.3,51.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.01,47.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.1,51.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.83,51.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.83,39.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.37,42.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.42,47.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.36,42.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.94,71.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.98,76.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.35,61.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.38,30.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.44,67.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.98,38.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,55.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.29,71.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.99,67.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.61,63.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.77,69.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.15,75.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.35,64.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.11,75.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60,79.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.38,80.58)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.58,74.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.95,71.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.12,78.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.7,74.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.69,80.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.43,88.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,68.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.93,85.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.75,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.05570204094063043cx, -0.32819104925538306cy), (-0.2923223993046961cx, 0.1039778476313042cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.07211201178850479cx, -0.34999761370932436cy), (-0.49556312116397594cx, -0.2551416444379858cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.07233974076666813cx, -0.3633696089556454cy), (-0.4565299066332523cx, -0.435788615368227cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.07281151588921292cx, -0.35982372901197945cy), (-0.561843493271081cx, -0.39816003961831353cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.06912398370422748cx, -0.34185516911382957cy), (-0.565070687229566cx, -0.08173155574504447cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.04705004175342029cx, -0.32492608083216157cy), (-0.08022470817074624cx, -0.17709387345090818cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.06857539670385393cx, -0.3408517574663303cy), (-0.3781417093257964cx, -0.16459457915500647cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.06103368808449976cx, -0.3318271838263005cy), (-0.22452331242686804cx, -0.13619693895031693cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.06542732484968145cx, -0.33626669484616895cy), (-0.44230505032860173cx, -0.027898719351459867cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.07276508282061574cx, -0.3541116300223638cy), (-0.6276154784222246cx, -0.30152740377694cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3259811594993528cx, 0.4180198481514851cy), (-0.03097392778681255cx, 0.7128338906004427cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.32099236163494cx, 0.40977911355783114cy), (-0.056554876155051476cx, 0.5686886218824428cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3206321612449302cx, 0.40888732154334084cy), (0.08590006911577378cx, 0.49975471882562794cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3280661828734374cx, 0.4203162305511099cy), (0.08125750142105105cx, 0.6664591885075155cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3829797228579819cx, 0.40724344475662194cy), (0.9357297842582735cx, 0.588351262227112cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.37975594004856467cx, 0.4142189226307454cy), (0.8708204432981995cx, 0.7147619694579213cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3685525368264775cx, 0.42532558433962725cy), (0.6569779385823262cx, 0.9059021407651504cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.38455854574941084cx, 0.3990416211247767cy), (0.9669538821459057cx, 0.43619934430000873cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.37499433909896246cx, 0.42028041327311055cy), (0.7778410510721898cx, 0.820815823756924cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.35991426639748036cx, 0.428962906713443cy), (0.5013035461321054cx, 0.9679703209842225cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.39735970711951313mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.39735970711951313mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.039799486719105825cx, -0.35723584220182436cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3082249535262207cx, 0.1330226405777455cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.35151242789531656cx, 0.3969332276976656cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.5278756462333749cx, -0.24790341594548582cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.48907016068081466cx, -0.44192238212204804cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.594855522441188cx, -0.40074792642846857cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.5943951842146876cx, -0.06635088265704969cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.08747526320506072cx, -0.14478411208124542cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.4069176193105445cx, -0.1482104944195124cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.24575751379226196cx, -0.11078828057479306cy), 0.01324532357065044w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.056505196182776274cx, 0.7339205110542621cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.08707494241542801cx, 0.5815345077426084cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.0550198024653874cx, 0.5117088126713032cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.05781125639917195cx, 0.6898421913609598cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9671970792209388cx, 0.5986614792860683cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8990639554514477cx, 0.732047664391001cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6740180475134872cx, 0.9342944974071121cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, 0.43830773772711984cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8013229622758358cx, 0.8441630093323689cy), 0.01324532357065044w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5097053846342692cx, 1.0cy), 0.01324532357065044w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.039799486719105825cx, -0.35723584220182436cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3082249535262207cx, 0.1330226405777455cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.35151242789531656cx, 0.3969332276976656cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5278756462333749cx, -0.24790341594548582cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.48907016068081466cx, -0.44192238212204804cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.594855522441188cx, -0.40074792642846857cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5943951842146876cx, -0.06635088265704969cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.08747526320506072cx, -0.14478411208124542cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.4069176193105445cx, -0.1482104944195124cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.24575751379226196cx, -0.11078828057479306cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.056505196182776274cx, 0.7339205110542621cy), \"48\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.08707494241542801cx, 0.5815345077426084cy), \"49\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.0550198024653874cx, 0.5117088126713032cy), \"50\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.05781125639917195cx, 0.6898421913609598cy), \"51\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9671970792209388cx, 0.5986614792860683cy), \"52\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8990639554514477cx, 0.732047664391001cy), \"53\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6740180475134872cx, 0.9342944974071121cy), \"54\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, 0.43830773772711984cy), \"55\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8013229622758358cx, 0.8441630093323689cy), \"56\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5097053846342692cx, 1.0cy), \"57\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Assuming you already have data_2023 defined\n",
    "G_2020_2021_2022, labels_2020_2021_2022 = create_graph(data_2020_2021_2022)\n",
    "graph2023 = plotgraph(G_2020_2021_2022, labels_2020_2021_2022)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "MR_IRPl_wtjm",
   "metadata": {
    "id": "MR_IRPl_wtjm",
    "outputId": "e0d0f696-c992-4d9f-aed0-0edb267d42c6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m57×2 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m Node  \u001b[0m\u001b[1m DegreeCentrality \u001b[0m\n",
      "     │\u001b[90m Int64 \u001b[0m\u001b[90m Float64          \u001b[0m\n",
      "─────┼─────────────────────────\n",
      "   1 │     5               2.0\n",
      "   2 │    56               1.0\n",
      "   3 │    35               1.0\n",
      "   4 │    55               1.0\n",
      "   5 │    30               2.0\n",
      "   6 │    32               2.0\n",
      "   7 │     6               2.0\n",
      "   8 │    45               2.0\n",
      "   9 │     4               2.0\n",
      "  10 │    13               2.0\n",
      "  11 │    54               1.0\n",
      "  12 │    52               1.0\n",
      "  13 │    12               2.0\n",
      "  14 │    28               2.0\n",
      "  15 │    23               1.0\n",
      "  16 │    41               2.0\n",
      "  17 │    43               2.0\n",
      "  18 │    11               2.0\n",
      "  19 │    36               1.0\n",
      "  20 │    39               1.0\n",
      "  21 │     7               2.0\n",
      "  22 │    25               2.0\n",
      "  23 │    34               1.0\n",
      "  24 │    50               2.0\n",
      "  25 │     2              35.0\n",
      "  26 │    10               2.0\n",
      "  27 │    18               1.0\n",
      "  28 │    26               2.0\n",
      "  29 │    27               2.0\n",
      "  30 │    42               2.0\n",
      "  31 │    16               2.0\n",
      "  32 │    20               1.0\n",
      "  33 │    19               1.0\n",
      "  34 │    49               2.0\n",
      "  35 │    44               2.0\n",
      "  36 │     9               2.0\n",
      "  37 │    31               2.0\n",
      "  38 │    29               2.0\n",
      "  39 │    46               2.0\n",
      "  40 │    57               1.0\n",
      "  41 │    21               1.0\n",
      "  42 │    38               1.0\n",
      "  43 │    24               2.0\n",
      "  44 │     8               2.0\n",
      "  45 │    17               2.0\n",
      "  46 │    37               1.0\n",
      "  47 │     1              30.0\n",
      "  48 │    53               1.0\n",
      "  49 │    22               1.0\n",
      "  50 │    47               2.0\n",
      "  51 │    14               2.0\n",
      "  52 │     3              28.0\n",
      "  53 │    51               2.0\n",
      "  54 │    33               1.0\n",
      "  55 │    40               2.0\n",
      "  56 │    48               2.0\n",
      "  57 │    15               2.0\n"
     ]
    }
   ],
   "source": [
    "using DataFrames\n",
    "\n",
    "# Assuming degree_centrality_2023 is a dictionary\n",
    "degree_centrality_2020_2021_2022 = degree_centrality(G_2020_2021_2022)\n",
    "\n",
    "# Flatten the dictionary\n",
    "flattened_data = [(node, centrality) for (nodes, centrality) in zip(keys(degree_centrality_2020_2021_2022), values(degree_centrality_2020_2021_2022)) for node in nodes]\n",
    "\n",
    "# Create a DataFrame\n",
    "df_degree_centrality_2020_2021_2022 = DataFrame(flattened_data, [:Node, :DegreeCentrality])\n",
    "\n",
    "# Print the DataFrame\n",
    "println(df_degree_centrality_2020_2021_2022)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d14aa37",
   "metadata": {},
   "source": [
    "## Plot for 2020, 2021&2022 "
   ]
  },
  {
   "attachments": {
    "2020_2021_2022%20graph.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "f43654fd",
   "metadata": {},
   "source": [
    "![2020_2021_2022%20graph.PNG](attachment:2020_2021_2022%20graph.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a3BO5SIwtjm",
   "metadata": {
    "id": "0a3BO5SIwtjm"
   },
   "source": [
    "# 2020,2021, 2022, 2023"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "y2Bjkt9vwtjm",
   "metadata": {
    "id": "y2Bjkt9vwtjm",
    "outputId": "d6e7f2db-bd55-488f-ab63-d149458160c4"
   },
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-57a87364-1\">\n",
       "  <g transform=\"translate(55.72,49.81)\">\n",
       "    <path fill=\"none\" d=\"M1.9,11.93 L-1.9,-11.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.97,54.08)\">\n",
       "    <path fill=\"none\" d=\"M-12.79,8.09 L12.79,-8.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.39,57.6)\">\n",
       "    <path fill=\"none\" d=\"M-3.63,4.31 L3.63,-4.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.52,61.95)\">\n",
       "    <path fill=\"none\" d=\"M-19.87,0.98 L19.87,-0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.54,64.52)\">\n",
       "    <path fill=\"none\" d=\"M-12.91,-1.31 L12.91,1.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.42,68.17)\">\n",
       "    <path fill=\"none\" d=\"M-9.09,-4.41 L9.09,4.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.12,56.74)\">\n",
       "    <path fill=\"none\" d=\"M-7.05,5.34 L7.05,-5.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.17,56.26)\">\n",
       "    <path fill=\"none\" d=\"M-0.28,5.47 L0.28,-5.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.68,54.38)\">\n",
       "    <path fill=\"none\" d=\"M-5.07,7.48 L5.07,-7.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.55,54.1)\">\n",
       "    <path fill=\"none\" d=\"M-1.48,7.65 L1.48,-7.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.86,59.53)\">\n",
       "    <path fill=\"none\" d=\"M-0.03,2.2 L0.03,-2.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.84,52.34)\">\n",
       "    <path fill=\"none\" d=\"M11.79,9.71 L-11.79,-9.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.9,61.65)\">\n",
       "    <path fill=\"none\" d=\"M13.12,1.2 L-13.12,-1.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.88,55.69)\">\n",
       "    <path fill=\"none\" d=\"M11.52,6.52 L-11.52,-6.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.85,61.36)\">\n",
       "    <path fill=\"none\" d=\"M5.24,1.25 L-5.24,-1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.81,60.39)\">\n",
       "    <path fill=\"none\" d=\"M9.28,2.22 L-9.28,-2.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.01,63.39)\">\n",
       "    <path fill=\"none\" d=\"M8.99,-0.31 L-8.99,0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.04,54.01)\">\n",
       "    <path fill=\"none\" d=\"M7.75,7.95 L-7.75,-7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.32,54.11)\">\n",
       "    <path fill=\"none\" d=\"M15.05,8.13 L-15.05,-8.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.39,59.37)\">\n",
       "    <path fill=\"none\" d=\"M15.68,3.29 L-15.68,-3.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.09,56.67)\">\n",
       "    <path fill=\"none\" d=\"M16.1,5.76 L-16.1,-5.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.07,58.34)\">\n",
       "    <path fill=\"none\" d=\"M12.11,4.12 L-12.11,-4.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.57,57.47)\">\n",
       "    <path fill=\"none\" d=\"M6.93,4.66 L-6.93,-4.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.69,74.45)\">\n",
       "    <path fill=\"none\" d=\"M11.98,-10.42 L-11.98,10.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.92,72.14)\">\n",
       "    <path fill=\"none\" d=\"M15.45,-8.34 L-15.45,8.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.71,75.88)\">\n",
       "    <path fill=\"none\" d=\"M8.3,-11.7 L-8.3,11.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.35,77.34)\">\n",
       "    <path fill=\"none\" d=\"M0.43,-13.03 L-0.43,13.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.48,77.23)\">\n",
       "    <path fill=\"none\" d=\"M-4.25,-12.95 L4.25,12.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.79,77.05)\">\n",
       "    <path fill=\"none\" d=\"M4.58,-12.77 L-4.58,12.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.53,64.76)\">\n",
       "    <path fill=\"none\" d=\"M-8.93,-1.45 L8.93,1.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.64,63.12)\">\n",
       "    <path fill=\"none\" d=\"M-4.99,-0.07 L4.99,0.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.46,66.76)\">\n",
       "    <path fill=\"none\" d=\"M-15.89,-3.37 L15.89,3.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.99,64.78)\">\n",
       "    <path fill=\"none\" d=\"M-18.35,-1.6 L18.35,1.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.56,67.07)\">\n",
       "    <path fill=\"none\" d=\"M-5.35,-3.21 L5.35,3.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.15,67.85)\">\n",
       "    <path fill=\"none\" d=\"M-12.68,-4.27 L12.68,4.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.46,62.53)\">\n",
       "    <path fill=\"none\" d=\"M-15.82,0.45 L15.82,-0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.11,59.44)\">\n",
       "    <path fill=\"none\" d=\"M-17.52,3.26 L17.52,-3.26 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.66,60.93)\">\n",
       "    <path fill=\"none\" d=\"M-12.05,1.82 L12.05,-1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.87,40.86)\">\n",
       "    <path fill=\"none\" d=\"M-14.54,-3.82 L14.54,3.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.29,44.38)\">\n",
       "    <path fill=\"none\" d=\"M-5.72,-6.69 L5.72,6.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.02,43.53)\">\n",
       "    <path fill=\"none\" d=\"M-9.07,-6.05 L9.07,6.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.07,43.04)\">\n",
       "    <path fill=\"none\" d=\"M-1.97,-5.21 L1.97,5.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.59,41.16)\">\n",
       "    <path fill=\"none\" d=\"M-6.54,-3.76 L6.54,3.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.45,40.88)\">\n",
       "    <path fill=\"none\" d=\"M-2.85,-3.2 L2.85,3.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.76,46.31)\">\n",
       "    <path fill=\"none\" d=\"M-1.86,-8.45 L1.86,8.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.75,39.12)\">\n",
       "    <path fill=\"none\" d=\"M9.14,-2.13 L-9.14,2.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.8,48.44)\">\n",
       "    <path fill=\"none\" d=\"M11.72,-10.82 L-11.72,10.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.78,42.48)\">\n",
       "    <path fill=\"none\" d=\"M9.4,-5.1 L-9.4,5.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.75,48.15)\">\n",
       "    <path fill=\"none\" d=\"M4.35,-10.32 L-4.35,10.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.71,47.17)\">\n",
       "    <path fill=\"none\" d=\"M7.98,-9.47 L-7.98,9.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.91,50.18)\">\n",
       "    <path fill=\"none\" d=\"M7.96,-12.41 L-7.96,12.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.94,40.79)\">\n",
       "    <path fill=\"none\" d=\"M5.32,-3.35 L-5.32,3.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.23,40.89)\">\n",
       "    <path fill=\"none\" d=\"M12.71,-3.8 L-12.71,3.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.29,46.15)\">\n",
       "    <path fill=\"none\" d=\"M13.97,-8.71 L-13.97,8.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.99,43.46)\">\n",
       "    <path fill=\"none\" d=\"M14.08,-6.19 L-14.08,6.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.97,45.12)\">\n",
       "    <path fill=\"none\" d=\"M10.39,-7.6 L-10.39,7.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.47,44.26)\">\n",
       "    <path fill=\"none\" d=\"M5.25,-6.54 L-5.25,6.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.93,34.91)\">\n",
       "    <path fill=\"none\" d=\"M-6.55,1.32 L6.55,-1.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.22,34.41)\">\n",
       "    <path fill=\"none\" d=\"M-19.78,2 L19.78,-2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.51,31.54)\">\n",
       "    <path fill=\"none\" d=\"M-18.17,4.61 L18.17,-4.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65,30.82)\">\n",
       "    <path fill=\"none\" d=\"M-9.89,5.02 L9.89,-5.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.81,22.46)\">\n",
       "    <path fill=\"none\" d=\"M3.47,12.86 L-3.47,-12.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.25,25.26)\">\n",
       "    <path fill=\"none\" d=\"M11.26,10.3 L-11.26,-10.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.98,23.67)\">\n",
       "    <path fill=\"none\" d=\"M7.86,11.75 L-7.86,-11.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.61,27.02)\">\n",
       "    <path fill=\"none\" d=\"M14.61,8.73 L-14.61,-8.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.94,29.38)\">\n",
       "    <path fill=\"none\" d=\"M17.08,6.59 L-17.08,-6.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.7,32.19)\">\n",
       "    <path fill=\"none\" d=\"M19.17,4.03 L-19.17,-4.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.98,30.27)\">\n",
       "    <path fill=\"none\" d=\"M-2.71,5.11 L2.71,-5.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.17,27.93)\">\n",
       "    <path fill=\"none\" d=\"M-9.35,7.68 L9.35,-7.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.21,32.75)\">\n",
       "    <path fill=\"none\" d=\"M-1.08,2.6 L1.08,-2.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.09,37.13)\">\n",
       "    <path fill=\"none\" d=\"M-18.64,-0.5 L18.64,0.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.71,33.53)\">\n",
       "    <path fill=\"none\" d=\"M-15.31,2.74 L15.31,-2.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.43,28.7)\">\n",
       "    <path fill=\"none\" d=\"M-5.86,6.79 L5.86,-6.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.67,36.36)\">\n",
       "    <path fill=\"none\" d=\"M-13.22,0.2 L13.22,-0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.44,30.15)\">\n",
       "    <path fill=\"none\" d=\"M-15.21,5.82 L15.21,-5.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.69,31.86)\">\n",
       "    <path fill=\"none\" d=\"M-5.74,3.84 L5.74,-3.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.83,28.65)\">\n",
       "    <path fill=\"none\" d=\"M-12.77,7.14 L12.77,-7.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.29,33.42)\">\n",
       "    <path fill=\"none\" d=\"M-10.94,2.74 L10.94,-2.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.54,48.65)\">\n",
       "    <path fill=\"none\" d=\"M7.96,-2.93 L-7.96,2.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.67,53)\">\n",
       "    <path fill=\"none\" d=\"M-6.52,-6.8 L6.52,6.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.69,55.57)\">\n",
       "    <path fill=\"none\" d=\"M-0.5,-9.15 L0.5,9.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.57,59.22)\">\n",
       "    <path fill=\"none\" d=\"M3.23,-12.82 L-3.23,12.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.27,47.79)\">\n",
       "    <path fill=\"none\" d=\"M4.31,-1.97 L-4.31,1.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.32,47.31)\">\n",
       "    <path fill=\"none\" d=\"M12.02,-1.9 L-12.02,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.83,45.43)\">\n",
       "    <path fill=\"none\" d=\"M6.46,-0.23 L-6.46,0.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.7,45.15)\">\n",
       "    <path fill=\"none\" d=\"M10.59,-0.02 L-10.59,0.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.68,55.81)\">\n",
       "    <path fill=\"none\" d=\"M3.03,-9.42 L-3.03,9.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.79,54.17)\">\n",
       "    <path fill=\"none\" d=\"M6.42,-7.93 L-6.42,7.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.61,57.81)\">\n",
       "    <path fill=\"none\" d=\"M-3.14,-11.42 L3.14,11.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.14,55.84)\">\n",
       "    <path fill=\"none\" d=\"M-5.34,-9.51 L5.34,9.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.71,58.12)\">\n",
       "    <path fill=\"none\" d=\"M6.72,-11.79 L-6.72,11.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.3,58.9)\">\n",
       "    <path fill=\"none\" d=\"M-0.16,-12.48 L0.16,12.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.61,53.58)\">\n",
       "    <path fill=\"none\" d=\"M-2.98,-7.21 L2.98,7.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.26,50.49)\">\n",
       "    <path fill=\"none\" d=\"M-4.11,-4.29 L4.11,4.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.81,51.98)\">\n",
       "    <path fill=\"none\" d=\"M0.25,-5.56 L-0.25,5.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.17,39.18)\">\n",
       "    <path fill=\"none\" d=\"M6.69,5.01 L-6.69,-5.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.47,38.68)\">\n",
       "    <path fill=\"none\" d=\"M-4.42,5.33 L4.42,-5.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.76,35.81)\">\n",
       "    <path fill=\"none\" d=\"M-3.16,8.07 L3.16,-8.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.25,35.09)\">\n",
       "    <path fill=\"none\" d=\"M4.28,8.82 L-4.28,-8.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.23,34.54)\">\n",
       "    <path fill=\"none\" d=\"M11.7,9.61 L-11.7,-9.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.41,32.2)\">\n",
       "    <path fill=\"none\" d=\"M5.16,11.7 L-5.16,-11.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.46,37.02)\">\n",
       "    <path fill=\"none\" d=\"M13.22,7.31 L-13.22,-7.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.33,41.4)\">\n",
       "    <path fill=\"none\" d=\"M-3.07,2.71 L3.07,-2.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.96,37.8)\">\n",
       "    <path fill=\"none\" d=\"M-0.69,6.04 L0.69,-6.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.68,32.96)\">\n",
       "    <path fill=\"none\" d=\"M8.56,11.03 L-8.56,-11.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.92,40.63)\">\n",
       "    <path fill=\"none\" d=\"M0.86,3.23 L-0.86,-3.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.69,34.42)\">\n",
       "    <path fill=\"none\" d=\"M-0.5,9.41 L0.5,-9.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.94,36.13)\">\n",
       "    <path fill=\"none\" d=\"M8.12,7.95 L-8.12,-7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.08,32.92)\">\n",
       "    <path fill=\"none\" d=\"M1.83,10.93 L-1.83,-10.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.54,37.69)\">\n",
       "    <path fill=\"none\" d=\"M2.99,6.21 L-2.99,-6.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.88,43.6)\">\n",
       "    <path fill=\"none\" d=\"M-19.94,1.4 L19.94,-1.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.72,58.58)\">\n",
       "    <path fill=\"none\" d=\"M-11.59,-12.37 L11.59,12.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.68,32.38)\">\n",
       "    <path fill=\"none\" d=\"M-11.51,11.69 L11.51,-11.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.79,47.42)\">\n",
       "    <path fill=\"none\" d=\"M-19.87,-2.11 L19.87,2.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.61,39.85)\">\n",
       "    <path fill=\"none\" d=\"M-18.78,4.84 L18.78,-4.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-57a87364-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-57a87364-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-57a87364-4\">\n",
       "  <g transform=\"translate(57.82,63.02)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.62,36.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.12,45.13)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.96,52.18)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.21,60.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.27,66.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.02,73.31)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.42,50.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.52,49.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.55,45.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.28,45.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.9,56.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.87,41.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.97,60.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.93,48.36)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.88,59.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.8,57.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.19,63.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.25,45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.83,45.19)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.95,55.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.35,50.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.31,53.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.32,51.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.56,85.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.02,81.27)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.59,88.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.87,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.14,91.44)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.76,91.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.24,66.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.46,63.22)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.1,70.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.15,66.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.3,71.11)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.47,72.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,62.03)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.4,55.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.5,58.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.23,33.24)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.81,32.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.4,26.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.38,25.05)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.87,13.94)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.34,10.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.6,17.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.26,22.18)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,27.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.33,23.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.71,19.27)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.8,28.92)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.55,37.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.79,30.47)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.25,20.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.72,36.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.25,23.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.75,27.13)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.04,20.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.96,30.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,42.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.33,72.03)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.24,19.63)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.47,49.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.11,34.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-57a87364-5\">\n",
       "  <g transform=\"translate(57.82,63.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.62,36.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.12,45.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.96,52.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.21,60.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.27,66.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.02,73.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.42,50.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.52,49.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.55,45.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.28,45.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.9,56.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.87,41.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.97,60.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.93,48.36)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.88,59.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.8,57.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.19,63.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.25,45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.83,45.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.95,55.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.35,50.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.31,53.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.32,51.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.56,85.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.02,81.27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.59,88.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.87,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.14,91.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.76,91.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.24,66.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.46,63.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.1,70.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.15,66.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.3,71.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.47,72.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,62.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.4,55.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.5,58.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.23,33.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.81,32.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.4,26.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.38,25.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.87,13.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.34,10.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.6,17.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.26,22.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,27.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.33,23.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.71,19.27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.8,28.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.55,37.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.79,30.47)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.25,20.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.72,36.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.25,23.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.75,27.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.04,20.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.96,30.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,42.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.33,72.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.24,19.63)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.47,49.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.11,34.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-da0397e6\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-da0397e6-1\">\n",
       "  <g transform=\"translate(55.72,49.81)\">\n",
       "    <path fill=\"none\" d=\"M1.9,11.93 L-1.9,-11.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.97,54.08)\">\n",
       "    <path fill=\"none\" d=\"M-12.79,8.09 L12.79,-8.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.39,57.6)\">\n",
       "    <path fill=\"none\" d=\"M-3.63,4.31 L3.63,-4.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.52,61.95)\">\n",
       "    <path fill=\"none\" d=\"M-19.87,0.98 L19.87,-0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.54,64.52)\">\n",
       "    <path fill=\"none\" d=\"M-12.91,-1.31 L12.91,1.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.42,68.17)\">\n",
       "    <path fill=\"none\" d=\"M-9.09,-4.41 L9.09,4.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.12,56.74)\">\n",
       "    <path fill=\"none\" d=\"M-7.05,5.34 L7.05,-5.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.17,56.26)\">\n",
       "    <path fill=\"none\" d=\"M-0.28,5.47 L0.28,-5.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.68,54.38)\">\n",
       "    <path fill=\"none\" d=\"M-5.07,7.48 L5.07,-7.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.55,54.1)\">\n",
       "    <path fill=\"none\" d=\"M-1.48,7.65 L1.48,-7.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.86,59.53)\">\n",
       "    <path fill=\"none\" d=\"M-0.03,2.2 L0.03,-2.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.84,52.34)\">\n",
       "    <path fill=\"none\" d=\"M11.79,9.71 L-11.79,-9.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.9,61.65)\">\n",
       "    <path fill=\"none\" d=\"M13.12,1.2 L-13.12,-1.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.88,55.69)\">\n",
       "    <path fill=\"none\" d=\"M11.52,6.52 L-11.52,-6.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.85,61.36)\">\n",
       "    <path fill=\"none\" d=\"M5.24,1.25 L-5.24,-1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.81,60.39)\">\n",
       "    <path fill=\"none\" d=\"M9.28,2.22 L-9.28,-2.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.01,63.39)\">\n",
       "    <path fill=\"none\" d=\"M8.99,-0.31 L-8.99,0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.04,54.01)\">\n",
       "    <path fill=\"none\" d=\"M7.75,7.95 L-7.75,-7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.32,54.11)\">\n",
       "    <path fill=\"none\" d=\"M15.05,8.13 L-15.05,-8.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.39,59.37)\">\n",
       "    <path fill=\"none\" d=\"M15.68,3.29 L-15.68,-3.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.09,56.67)\">\n",
       "    <path fill=\"none\" d=\"M16.1,5.76 L-16.1,-5.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.07,58.34)\">\n",
       "    <path fill=\"none\" d=\"M12.11,4.12 L-12.11,-4.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.57,57.47)\">\n",
       "    <path fill=\"none\" d=\"M6.93,4.66 L-6.93,-4.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.69,74.45)\">\n",
       "    <path fill=\"none\" d=\"M11.98,-10.42 L-11.98,10.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.92,72.14)\">\n",
       "    <path fill=\"none\" d=\"M15.45,-8.34 L-15.45,8.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.71,75.88)\">\n",
       "    <path fill=\"none\" d=\"M8.3,-11.7 L-8.3,11.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.35,77.34)\">\n",
       "    <path fill=\"none\" d=\"M0.43,-13.03 L-0.43,13.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.48,77.23)\">\n",
       "    <path fill=\"none\" d=\"M-4.25,-12.95 L4.25,12.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.79,77.05)\">\n",
       "    <path fill=\"none\" d=\"M4.58,-12.77 L-4.58,12.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.53,64.76)\">\n",
       "    <path fill=\"none\" d=\"M-8.93,-1.45 L8.93,1.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.64,63.12)\">\n",
       "    <path fill=\"none\" d=\"M-4.99,-0.07 L4.99,0.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.46,66.76)\">\n",
       "    <path fill=\"none\" d=\"M-15.89,-3.37 L15.89,3.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.99,64.78)\">\n",
       "    <path fill=\"none\" d=\"M-18.35,-1.6 L18.35,1.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.56,67.07)\">\n",
       "    <path fill=\"none\" d=\"M-5.35,-3.21 L5.35,3.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.15,67.85)\">\n",
       "    <path fill=\"none\" d=\"M-12.68,-4.27 L12.68,4.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.46,62.53)\">\n",
       "    <path fill=\"none\" d=\"M-15.82,0.45 L15.82,-0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.11,59.44)\">\n",
       "    <path fill=\"none\" d=\"M-17.52,3.26 L17.52,-3.26 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.66,60.93)\">\n",
       "    <path fill=\"none\" d=\"M-12.05,1.82 L12.05,-1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.87,40.86)\">\n",
       "    <path fill=\"none\" d=\"M-14.54,-3.82 L14.54,3.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.29,44.38)\">\n",
       "    <path fill=\"none\" d=\"M-5.72,-6.69 L5.72,6.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.02,43.53)\">\n",
       "    <path fill=\"none\" d=\"M-9.07,-6.05 L9.07,6.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.07,43.04)\">\n",
       "    <path fill=\"none\" d=\"M-1.97,-5.21 L1.97,5.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.59,41.16)\">\n",
       "    <path fill=\"none\" d=\"M-6.54,-3.76 L6.54,3.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.45,40.88)\">\n",
       "    <path fill=\"none\" d=\"M-2.85,-3.2 L2.85,3.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.76,46.31)\">\n",
       "    <path fill=\"none\" d=\"M-1.86,-8.45 L1.86,8.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.75,39.12)\">\n",
       "    <path fill=\"none\" d=\"M9.14,-2.13 L-9.14,2.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.8,48.44)\">\n",
       "    <path fill=\"none\" d=\"M11.72,-10.82 L-11.72,10.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.78,42.48)\">\n",
       "    <path fill=\"none\" d=\"M9.4,-5.1 L-9.4,5.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.75,48.15)\">\n",
       "    <path fill=\"none\" d=\"M4.35,-10.32 L-4.35,10.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.71,47.17)\">\n",
       "    <path fill=\"none\" d=\"M7.98,-9.47 L-7.98,9.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.91,50.18)\">\n",
       "    <path fill=\"none\" d=\"M7.96,-12.41 L-7.96,12.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.94,40.79)\">\n",
       "    <path fill=\"none\" d=\"M5.32,-3.35 L-5.32,3.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.23,40.89)\">\n",
       "    <path fill=\"none\" d=\"M12.71,-3.8 L-12.71,3.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.29,46.15)\">\n",
       "    <path fill=\"none\" d=\"M13.97,-8.71 L-13.97,8.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.99,43.46)\">\n",
       "    <path fill=\"none\" d=\"M14.08,-6.19 L-14.08,6.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.97,45.12)\">\n",
       "    <path fill=\"none\" d=\"M10.39,-7.6 L-10.39,7.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.47,44.26)\">\n",
       "    <path fill=\"none\" d=\"M5.25,-6.54 L-5.25,6.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.93,34.91)\">\n",
       "    <path fill=\"none\" d=\"M-6.55,1.32 L6.55,-1.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.22,34.41)\">\n",
       "    <path fill=\"none\" d=\"M-19.78,2 L19.78,-2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.51,31.54)\">\n",
       "    <path fill=\"none\" d=\"M-18.17,4.61 L18.17,-4.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65,30.82)\">\n",
       "    <path fill=\"none\" d=\"M-9.89,5.02 L9.89,-5.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.81,22.46)\">\n",
       "    <path fill=\"none\" d=\"M3.47,12.86 L-3.47,-12.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.25,25.26)\">\n",
       "    <path fill=\"none\" d=\"M11.26,10.3 L-11.26,-10.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.98,23.67)\">\n",
       "    <path fill=\"none\" d=\"M7.86,11.75 L-7.86,-11.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.61,27.02)\">\n",
       "    <path fill=\"none\" d=\"M14.61,8.73 L-14.61,-8.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.94,29.38)\">\n",
       "    <path fill=\"none\" d=\"M17.08,6.59 L-17.08,-6.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.7,32.19)\">\n",
       "    <path fill=\"none\" d=\"M19.17,4.03 L-19.17,-4.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.98,30.27)\">\n",
       "    <path fill=\"none\" d=\"M-2.71,5.11 L2.71,-5.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.17,27.93)\">\n",
       "    <path fill=\"none\" d=\"M-9.35,7.68 L9.35,-7.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.21,32.75)\">\n",
       "    <path fill=\"none\" d=\"M-1.08,2.6 L1.08,-2.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.09,37.13)\">\n",
       "    <path fill=\"none\" d=\"M-18.64,-0.5 L18.64,0.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.71,33.53)\">\n",
       "    <path fill=\"none\" d=\"M-15.31,2.74 L15.31,-2.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.43,28.7)\">\n",
       "    <path fill=\"none\" d=\"M-5.86,6.79 L5.86,-6.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.67,36.36)\">\n",
       "    <path fill=\"none\" d=\"M-13.22,0.2 L13.22,-0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.44,30.15)\">\n",
       "    <path fill=\"none\" d=\"M-15.21,5.82 L15.21,-5.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.69,31.86)\">\n",
       "    <path fill=\"none\" d=\"M-5.74,3.84 L5.74,-3.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.83,28.65)\">\n",
       "    <path fill=\"none\" d=\"M-12.77,7.14 L12.77,-7.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.29,33.42)\">\n",
       "    <path fill=\"none\" d=\"M-10.94,2.74 L10.94,-2.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.54,48.65)\">\n",
       "    <path fill=\"none\" d=\"M7.96,-2.93 L-7.96,2.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.67,53)\">\n",
       "    <path fill=\"none\" d=\"M-6.52,-6.8 L6.52,6.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.69,55.57)\">\n",
       "    <path fill=\"none\" d=\"M-0.5,-9.15 L0.5,9.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.57,59.22)\">\n",
       "    <path fill=\"none\" d=\"M3.23,-12.82 L-3.23,12.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.27,47.79)\">\n",
       "    <path fill=\"none\" d=\"M4.31,-1.97 L-4.31,1.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.32,47.31)\">\n",
       "    <path fill=\"none\" d=\"M12.02,-1.9 L-12.02,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.83,45.43)\">\n",
       "    <path fill=\"none\" d=\"M6.46,-0.23 L-6.46,0.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.7,45.15)\">\n",
       "    <path fill=\"none\" d=\"M10.59,-0.02 L-10.59,0.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.68,55.81)\">\n",
       "    <path fill=\"none\" d=\"M3.03,-9.42 L-3.03,9.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.79,54.17)\">\n",
       "    <path fill=\"none\" d=\"M6.42,-7.93 L-6.42,7.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.61,57.81)\">\n",
       "    <path fill=\"none\" d=\"M-3.14,-11.42 L3.14,11.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.14,55.84)\">\n",
       "    <path fill=\"none\" d=\"M-5.34,-9.51 L5.34,9.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.71,58.12)\">\n",
       "    <path fill=\"none\" d=\"M6.72,-11.79 L-6.72,11.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.3,58.9)\">\n",
       "    <path fill=\"none\" d=\"M-0.16,-12.48 L0.16,12.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.61,53.58)\">\n",
       "    <path fill=\"none\" d=\"M-2.98,-7.21 L2.98,7.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.26,50.49)\">\n",
       "    <path fill=\"none\" d=\"M-4.11,-4.29 L4.11,4.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.81,51.98)\">\n",
       "    <path fill=\"none\" d=\"M0.25,-5.56 L-0.25,5.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.17,39.18)\">\n",
       "    <path fill=\"none\" d=\"M6.69,5.01 L-6.69,-5.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.47,38.68)\">\n",
       "    <path fill=\"none\" d=\"M-4.42,5.33 L4.42,-5.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.76,35.81)\">\n",
       "    <path fill=\"none\" d=\"M-3.16,8.07 L3.16,-8.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.25,35.09)\">\n",
       "    <path fill=\"none\" d=\"M4.28,8.82 L-4.28,-8.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.23,34.54)\">\n",
       "    <path fill=\"none\" d=\"M11.7,9.61 L-11.7,-9.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.41,32.2)\">\n",
       "    <path fill=\"none\" d=\"M5.16,11.7 L-5.16,-11.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.46,37.02)\">\n",
       "    <path fill=\"none\" d=\"M13.22,7.31 L-13.22,-7.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.33,41.4)\">\n",
       "    <path fill=\"none\" d=\"M-3.07,2.71 L3.07,-2.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.96,37.8)\">\n",
       "    <path fill=\"none\" d=\"M-0.69,6.04 L0.69,-6.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.68,32.96)\">\n",
       "    <path fill=\"none\" d=\"M8.56,11.03 L-8.56,-11.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.92,40.63)\">\n",
       "    <path fill=\"none\" d=\"M0.86,3.23 L-0.86,-3.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.69,34.42)\">\n",
       "    <path fill=\"none\" d=\"M-0.5,9.41 L0.5,-9.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.94,36.13)\">\n",
       "    <path fill=\"none\" d=\"M8.12,7.95 L-8.12,-7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.08,32.92)\">\n",
       "    <path fill=\"none\" d=\"M1.83,10.93 L-1.83,-10.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.54,37.69)\">\n",
       "    <path fill=\"none\" d=\"M2.99,6.21 L-2.99,-6.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.88,43.6)\">\n",
       "    <path fill=\"none\" d=\"M-19.94,1.4 L19.94,-1.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.72,58.58)\">\n",
       "    <path fill=\"none\" d=\"M-11.59,-12.37 L11.59,12.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.68,32.38)\">\n",
       "    <path fill=\"none\" d=\"M-11.51,11.69 L11.51,-11.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.79,47.42)\">\n",
       "    <path fill=\"none\" d=\"M-19.87,-2.11 L19.87,2.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.61,39.85)\">\n",
       "    <path fill=\"none\" d=\"M-18.78,4.84 L18.78,-4.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-da0397e6-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-da0397e6-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-da0397e6-4\">\n",
       "  <g transform=\"translate(57.82,63.02)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.62,36.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.12,45.13)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.96,52.18)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.21,60.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.27,66.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.02,73.31)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.42,50.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.52,49.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.55,45.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.28,45.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.9,56.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.87,41.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.97,60.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.93,48.36)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.88,59.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.8,57.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.19,63.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.25,45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.83,45.19)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.95,55.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.35,50.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.31,53.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.32,51.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.56,85.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.02,81.27)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.59,88.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.87,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.14,91.44)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.76,91.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.24,66.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.46,63.22)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.1,70.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.15,66.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.3,71.11)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.47,72.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,62.03)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.4,55.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.5,58.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.23,33.24)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.81,32.23)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.4,26.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.38,25.05)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.87,13.94)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.34,10.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.6,17.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.26,22.18)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,27.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.33,23.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.71,19.27)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.8,28.92)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.55,37.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.79,30.47)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.25,20.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.72,36.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.25,23.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.75,27.13)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.04,20.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.96,30.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,42.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.33,72.03)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.24,19.63)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.47,49.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.11,34.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-da0397e6-5\">\n",
       "  <g transform=\"translate(57.82,63.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.62,36.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.12,45.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.96,52.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.21,60.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.27,66.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.02,73.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.42,50.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.52,49.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.55,45.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.28,45.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.9,56.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.87,41.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.97,60.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.93,48.36)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.88,59.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.8,57.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.19,63.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.25,45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.83,45.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.95,55.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.35,50.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(30.31,53.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.32,51.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(31.56,85.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.02,81.27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.59,88.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.87,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.14,91.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.76,91.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.24,66.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.46,63.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.1,70.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.15,66.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.3,71.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.47,72.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,62.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.4,55.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.5,58.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.23,33.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.81,32.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.4,26.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.38,25.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.87,13.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.34,10.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.6,17.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.26,22.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,27.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.33,23.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.71,19.27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.8,28.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.55,37.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.79,30.47)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.25,20.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.72,36.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.25,23.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.75,27.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.04,20.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.96,30.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,42.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.33,72.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.24,19.63)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.47,49.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.11,34.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2221856418347878cx, 0.2817353368662293cy), (-0.2865179423717812cx, -0.29105844659988256cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.19561103177917807cx, 0.291879136751658cy), (0.23840344618387335cx, -0.09627071240234561cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2028507987809461cx, 0.28591276161860796cy), (-0.07953230182746411cx, 0.07897594496709584cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.18779173206068886cx, 0.3103848959069625cy), (0.4867324375585447cx, 0.2631666566869807cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.1880297880228269cx, 0.3169502489081976cy), (0.2502463725377344cx, 0.3797750648591543cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.1931614655217164cx, 0.3301018742770776cy), (0.11547020229585211cx, 0.5420068028557721cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.1975516238910834cx, 0.2898955066735178cy), (0.0418491088712958cx, 0.03374170935028012cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.21759594678337082cx, 0.281562143637146cy), (-0.2080294565382835cx, 0.018933385441424828cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.20532050125014006cx, 0.28458841884988734cy), (-0.03314608708865913cx, -0.07457590978949598cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.21451481327644595cx, 0.2818287008985528cy), (-0.16421079751095125cx, -0.08526244668846733cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2557747287310803cx, -0.14741418759128805cy), (0.22659164610698015cx, -0.30227560490016664cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2626742487015915cx, -0.14792893820508782cy), (0.2795472231928059cx, -0.5997799070713341cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.24336886180479392cx, -0.1420850166191818cy), (-0.03209953281495439cx, -0.5237273039377344cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.25787547072179057cx, -0.14773595426507038cy), (0.1958376500914864cx, -0.6723314347103441cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2515182989019355cx, -0.14629422447440701cy), (0.14993203784442008cx, -0.44450880691204864cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2923733880106202cx, -0.12001266958553135cy), (0.9691437439433471cx, -0.18736493176101998cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2786446235225921cx, -0.09109252860705826cy), (0.672172529545858cx, 0.5028315653001976cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.27924174879546143cx, -0.14238544439567785cy), (0.6700364556047478cx, -0.703369160666882cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.29218315704592085cx, -0.11234474734807678cy), (0.9664512217276111cx, -0.011266093971026701cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.29065333493169104cx, -0.12755411504802958cy), (0.9279570847469887cx, -0.3596789172177767cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.21872471754927203cx, 0.31255027585089046cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.289978866657297cx, -0.3218733855845437cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.2615171319539673cx, -0.1169418515015781cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.06365838305913818cx, 0.05233843073481337cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5176654230471278cx, 0.26100127674305273cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.28094130206417955cx, 0.38417503791646146cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.14103345432340775cx, 0.5595584012819592cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.06302220252948443cx, 0.011086940172907456cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.2069006857723823cx, -0.012054746772319658cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.01974187078952716cx, -0.10253776679049909cy), 0.012403473458920847w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.22084924288409313cx, -0.3327479409898766cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.2807043399404301cx, -0.6307669937748438cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.050247802964127786cx, -0.5488704690553381cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.19219598885930966cx, -0.7031255374738363cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.13993320479238824cx, -0.4738611798848775cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, -0.19043574984497325cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6893000211144829cx, 0.5286808881947174cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.687761072446242cx, -0.7288127535609819cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9971172468195646cx, -0.006668989817525395cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9570932877247125cx, -0.3702911807642282cy), 0.012403473458920847w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.21872471754927203cx, 0.31255027585089046cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.289978866657297cx, -0.3218733855845437cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.2615171319539673cx, -0.1169418515015781cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.06365838305913818cx, 0.05233843073481337cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5176654230471278cx, 0.26100127674305273cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.28094130206417955cx, 0.38417503791646146cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.14103345432340775cx, 0.5595584012819592cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.06302220252948443cx, 0.011086940172907456cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.2069006857723823cx, -0.012054746772319658cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.01974187078952716cx, -0.10253776679049909cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.22084924288409313cx, -0.3327479409898766cy), \"56\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.2807043399404301cx, -0.6307669937748438cy), \"57\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.050247802964127786cx, -0.5488704690553381cy), \"58\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.19219598885930966cx, -0.7031255374738363cy), \"59\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.13993320479238824cx, -0.4738611798848775cy), \"60\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, -0.19043574984497325cy), \"61\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6893000211144829cx, 0.5286808881947174cy), \"62\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.687761072446242cx, -0.7288127535609819cy), \"63\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9971172468195646cx, -0.006668989817525395cy), \"64\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9570932877247125cx, -0.3702911807642282cy), \"65\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Assuming you already have data_2023 defined\n",
    "G_2020_2021_2022_2023, labels_2020_2021_2022_2023 = create_graph(data_2020_2021_2022_2023)\n",
    "graph2023 = plotgraph(G_2020_2021_2022_2023, labels_2020_2021_2022_2023)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "vVkX6VQPwtjm",
   "metadata": {
    "id": "vVkX6VQPwtjm",
    "outputId": "29bbc765-6b3f-4034-b1c9-77cea4180d12"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m65×2 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m Node  \u001b[0m\u001b[1m DegreeCentrality \u001b[0m\n",
      "     │\u001b[90m Int64 \u001b[0m\u001b[90m Float64          \u001b[0m\n",
      "─────┼─────────────────────────\n",
      "   1 │     5               2.0\n",
      "   2 │    56               2.0\n",
      "   3 │    35               2.0\n",
      "   4 │    55               2.0\n",
      "   5 │    60               2.0\n",
      "   6 │    30               1.0\n",
      "   7 │    32               2.0\n",
      "   8 │     6               2.0\n",
      "   9 │    45               1.0\n",
      "  10 │    64               1.0\n",
      "  11 │     4               3.0\n",
      "  12 │    13               2.0\n",
      "  13 │    54               2.0\n",
      "  14 │    63               1.0\n",
      "  15 │    62               1.0\n",
      "  16 │    58               2.0\n",
      "  17 │    52               2.0\n",
      "  18 │    12               2.0\n",
      "  19 │    28               1.0\n",
      "  20 │    23               2.0\n",
      "  21 │    41               2.0\n",
      "  22 │    43               2.0\n",
      "  23 │    11               3.0\n",
      "  24 │    36               2.0\n",
      "  25 │    39               2.0\n",
      "  26 │     7               2.0\n",
      "  27 │    25               1.0\n",
      "  28 │    34               2.0\n",
      "  29 │    50               2.0\n",
      "  30 │    59               2.0\n",
      "  31 │     2              41.0\n",
      "  32 │    10               3.0\n",
      "  33 │    18               2.0\n",
      "  34 │    26               1.0\n",
      "  35 │    27               1.0\n",
      "  36 │    42               2.0\n",
      "  37 │    16               2.0\n",
      "  38 │    20               2.0\n",
      "  39 │    19               2.0\n",
      "  40 │    49               1.0\n",
      "  41 │    44               1.0\n",
      "  42 │     9               3.0\n",
      "  43 │    31               2.0\n",
      "  44 │    61               1.0\n",
      "  45 │    29               1.0\n",
      "  46 │    46               1.0\n",
      "  47 │    57               2.0\n",
      "  48 │    21               2.0\n",
      "  49 │    38               2.0\n",
      "  50 │    24               2.0\n",
      "  51 │     8               3.0\n",
      "  52 │    17               2.0\n",
      "  53 │    37               2.0\n",
      "  54 │     1              38.0\n",
      "  55 │    53               2.0\n",
      "  56 │    22               2.0\n",
      "  57 │    47               1.0\n",
      "  58 │    14               2.0\n",
      "  59 │     3              39.0\n",
      "  60 │    51               2.0\n",
      "  61 │    33               2.0\n",
      "  62 │    40               2.0\n",
      "  63 │    48               1.0\n",
      "  64 │    15               2.0\n",
      "  65 │    65               1.0\n"
     ]
    }
   ],
   "source": [
    "using DataFrames\n",
    "\n",
    "# Assuming degree_centrality_2023 is a dictionary\n",
    "degree_centrality_2020_2021_2022_2023 = degree_centrality(G_2020_2021_2022_2023)\n",
    "\n",
    "# Flatten the dictionary\n",
    "flattened_data = [(node, centrality) for (nodes, centrality) in zip(keys(degree_centrality_2020_2021_2022_2023), values(degree_centrality_2020_2021_2022_2023)) for node in nodes]\n",
    "\n",
    "# Create a DataFrame\n",
    "df_degree_centrality_2020_2021_2022_2023 = DataFrame(flattened_data, [:Node, :DegreeCentrality])\n",
    "\n",
    "# Print the DataFrame\n",
    "println(df_degree_centrality_2020_2021_2022_2023)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c285dae2",
   "metadata": {},
   "source": [
    "## Overall plot for 2020 - 2023 "
   ]
  },
  {
   "attachments": {
    "initial%20graph%20%281%29.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "a44e182f",
   "metadata": {},
   "source": [
    "![initial%20graph%20%281%29.PNG](attachment:initial%20graph%20%281%29.PNG)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "Xq7WmB69wtjm",
   "metadata": {
    "id": "Xq7WmB69wtjm",
    "outputId": "b4069919-8364-479e-9e14-84f5ff40a81e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m3×4 DataFrame\u001b[0m\n",
      "\u001b[1m Row \u001b[0m│\u001b[1m Node  \u001b[0m\u001b[1m DegreeCentrality_20_21 \u001b[0m\u001b[1m DegreeCentrality_20_21_22 \u001b[0m\u001b[1m DegreeCentrality_20_21_22_23 \u001b[0m\n",
      "     │\u001b[90m Int64 \u001b[0m\u001b[90m Float64                \u001b[0m\u001b[90m Float64                   \u001b[0m\u001b[90m Float64                      \u001b[0m\n",
      "─────┼────────────────────────────────────────────────────────────────────────────────────────\n",
      "   1 │     1                    18.0                       30.0                          38.0\n",
      "   2 │     2                    13.0                       35.0                          41.0\n",
      "   3 │     3                    25.0                       28.0                          39.0\n"
     ]
    }
   ],
   "source": [
    "# Extract degree centrality values for nodes 1, 2, and 3\n",
    "nodes_to_compare = [1, 2, 3]\n",
    "\n",
    "# Define a function to extract degree centrality values for specific nodes\n",
    "function extract_node_values(df, nodes)\n",
    "    filtered_data = filter(row -> row.Node in nodes, df)\n",
    "    return Dict(filtered_data[:, :Node] .=> filtered_data[:, :DegreeCentrality])\n",
    "end\n",
    "\n",
    "# Extract degree centrality values for each year\n",
    "values_2021_nodes = extract_node_values(df_degree_centrality_2020_2021, nodes_to_compare)\n",
    "values_2022_nodes = extract_node_values(df_degree_centrality_2020_2021_2022, nodes_to_compare)\n",
    "values_2023_nodes = extract_node_values(df_degree_centrality_2020_2021_2022_2023, nodes_to_compare)\n",
    "\n",
    "# Convert dictionary values to an array\n",
    "get_array(dict, keys) = get.(Ref(dict), keys, missing)\n",
    "\n",
    "# Create a DataFrame to compare values\n",
    "comparison_df = DataFrame(\n",
    "    Node = nodes_to_compare,\n",
    "    #DegreeCentrality_2020 = get_array(values_2020_nodes, nodes_to_compare),\n",
    "    DegreeCentrality_20_21 = get_array(values_2021_nodes, nodes_to_compare),\n",
    "    DegreeCentrality_20_21_22 = get_array(values_2022_nodes, nodes_to_compare),\n",
    "    DegreeCentrality_20_21_22_23 = get_array(values_2023_nodes, nodes_to_compare)\n",
    ")\n",
    "\n",
    "# Print the comparison DataFrame\n",
    "println(comparison_df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "F4sOlnWkwtjn",
   "metadata": {
    "id": "F4sOlnWkwtjn"
   },
   "source": [
    " Node 1 - Gowtham\n",
    " \n",
    " Node 2 - Sahaanah\n",
    " \n",
    " Node 3 - Snega\n",
    "\n",
    "These 3 nodes are the central nodes which make the most connections with the highest degree centrality."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "oiZ66Stkwtjn",
   "metadata": {
    "id": "oiZ66Stkwtjn"
   },
   "source": [
    "## Trend of Degree centrality between the  central nodes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "0NdfuDvCwtjn",
   "metadata": {
    "id": "0NdfuDvCwtjn",
    "outputId": "675a6ff6-5e35-480b-e18d-48c92a3454a0"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n",
       "<defs>\n",
       "  <clipPath id=\"clip190\">\n",
       "    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<path clip-path=\"url(#clip190)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<defs>\n",
       "  <clipPath id=\"clip191\">\n",
       "    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<path clip-path=\"url(#clip190)\" d=\"M205.121 1423.18 L2352.76 1423.18 L2352.76 123.472 L205.121 123.472  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<defs>\n",
       "  <clipPath id=\"clip192\">\n",
       "    <rect x=\"205\" y=\"123\" width=\"2149\" height=\"1301\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"265.903,1423.18 265.903,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"941.26,1423.18 941.26,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1616.62,1423.18 1616.62,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2291.97,1423.18 2291.97,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,1423.18 2352.76,1423.18 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"265.903,1423.18 265.903,1404.28 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"941.26,1423.18 941.26,1404.28 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1616.62,1423.18 1616.62,1404.28 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2291.97,1423.18 2291.97,1404.28 \"/>\n",
       "<path clip-path=\"url(#clip190)\" d=\"M244.676 1481.64 L260.996 1481.64 L260.996 1485.58 L239.051 1485.58 L239.051 1481.64 Q241.713 1478.89 246.297 1474.26 Q250.903 1469.61 252.084 1468.27 Q254.329 1465.74 255.209 1464.01 Q256.111 1462.25 256.111 1460.56 Q256.111 1457.8 254.167 1456.07 Q252.246 1454.33 249.144 1454.33 Q246.945 1454.33 244.491 1455.09 Q242.061 1455.86 239.283 1457.41 L239.283 1452.69 Q242.107 1451.55 244.561 1450.97 Q247.014 1450.39 249.051 1450.39 Q254.422 1450.39 257.616 1453.08 Q260.811 1455.77 260.811 1460.26 Q260.811 1462.39 260 1464.31 Q259.213 1466.2 257.107 1468.8 Q256.528 1469.47 253.426 1472.69 Q250.324 1475.88 244.676 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M280.81 1454.1 Q277.199 1454.1 275.371 1457.66 Q273.565 1461.2 273.565 1468.33 Q273.565 1475.44 275.371 1479.01 Q277.199 1482.55 280.81 1482.55 Q284.445 1482.55 286.25 1479.01 Q288.079 1475.44 288.079 1468.33 Q288.079 1461.2 286.25 1457.66 Q284.445 1454.1 280.81 1454.1 M280.81 1450.39 Q286.621 1450.39 289.676 1455 Q292.755 1459.58 292.755 1468.33 Q292.755 1477.06 289.676 1481.67 Q286.621 1486.25 280.81 1486.25 Q275 1486.25 271.922 1481.67 Q268.866 1477.06 268.866 1468.33 Q268.866 1459.58 271.922 1455 Q275 1450.39 280.81 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M878.633 1481.64 L894.952 1481.64 L894.952 1485.58 L873.008 1485.58 L873.008 1481.64 Q875.67 1478.89 880.253 1474.26 Q884.86 1469.61 886.04 1468.27 Q888.286 1465.74 889.165 1464.01 Q890.068 1462.25 890.068 1460.56 Q890.068 1457.8 888.124 1456.07 Q886.202 1454.33 883.101 1454.33 Q880.902 1454.33 878.448 1455.09 Q876.017 1455.86 873.24 1457.41 L873.24 1452.69 Q876.064 1451.55 878.517 1450.97 Q880.971 1450.39 883.008 1450.39 Q888.378 1450.39 891.573 1453.08 Q894.767 1455.77 894.767 1460.26 Q894.767 1462.39 893.957 1464.31 Q893.17 1466.2 891.064 1468.8 Q890.485 1469.47 887.383 1472.69 Q884.281 1475.88 878.633 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M914.767 1454.1 Q911.156 1454.1 909.327 1457.66 Q907.522 1461.2 907.522 1468.33 Q907.522 1475.44 909.327 1479.01 Q911.156 1482.55 914.767 1482.55 Q918.401 1482.55 920.207 1479.01 Q922.036 1475.44 922.036 1468.33 Q922.036 1461.2 920.207 1457.66 Q918.401 1454.1 914.767 1454.1 M914.767 1450.39 Q920.577 1450.39 923.633 1455 Q926.711 1459.58 926.711 1468.33 Q926.711 1477.06 923.633 1481.67 Q920.577 1486.25 914.767 1486.25 Q908.957 1486.25 905.878 1481.67 Q902.823 1477.06 902.823 1468.33 Q902.823 1459.58 905.878 1455 Q908.957 1450.39 914.767 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M954.026 1493.45 L954.026 1496.76 L929.397 1496.76 L929.397 1493.45 L954.026 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M962.66 1481.64 L978.98 1481.64 L978.98 1485.58 L957.035 1485.58 L957.035 1481.64 Q959.697 1478.89 964.281 1474.26 Q968.887 1469.61 970.068 1468.27 Q972.313 1465.74 973.193 1464.01 Q974.095 1462.25 974.095 1460.56 Q974.095 1457.8 972.151 1456.07 Q970.23 1454.33 967.128 1454.33 Q964.929 1454.33 962.475 1455.09 Q960.045 1455.86 957.267 1457.41 L957.267 1452.69 Q960.091 1451.55 962.545 1450.97 Q964.998 1450.39 967.035 1450.39 Q972.406 1450.39 975.6 1453.08 Q978.795 1455.77 978.795 1460.26 Q978.795 1462.39 977.984 1464.31 Q977.197 1466.2 975.091 1468.8 Q974.512 1469.47 971.41 1472.69 Q968.308 1475.88 962.66 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M989.605 1481.64 L997.243 1481.64 L997.243 1455.28 L988.933 1456.95 L988.933 1452.69 L997.197 1451.02 L1001.87 1451.02 L1001.87 1481.64 L1009.51 1481.64 L1009.51 1485.58 L989.605 1485.58 L989.605 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1512.16 1481.64 L1528.48 1481.64 L1528.48 1485.58 L1506.54 1485.58 L1506.54 1481.64 Q1509.2 1478.89 1513.78 1474.26 Q1518.39 1469.61 1519.57 1468.27 Q1521.81 1465.74 1522.69 1464.01 Q1523.6 1462.25 1523.6 1460.56 Q1523.6 1457.8 1521.65 1456.07 Q1519.73 1454.33 1516.63 1454.33 Q1514.43 1454.33 1511.98 1455.09 Q1509.55 1455.86 1506.77 1457.41 L1506.77 1452.69 Q1509.59 1451.55 1512.05 1450.97 Q1514.5 1450.39 1516.54 1450.39 Q1521.91 1450.39 1525.1 1453.08 Q1528.3 1455.77 1528.3 1460.26 Q1528.3 1462.39 1527.49 1464.31 Q1526.7 1466.2 1524.59 1468.8 Q1524.01 1469.47 1520.91 1472.69 Q1517.81 1475.88 1512.16 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1548.3 1454.1 Q1544.68 1454.1 1542.86 1457.66 Q1541.05 1461.2 1541.05 1468.33 Q1541.05 1475.44 1542.86 1479.01 Q1544.68 1482.55 1548.3 1482.55 Q1551.93 1482.55 1553.74 1479.01 Q1555.56 1475.44 1555.56 1468.33 Q1555.56 1461.2 1553.74 1457.66 Q1551.93 1454.1 1548.3 1454.1 M1548.3 1450.39 Q1554.11 1450.39 1557.16 1455 Q1560.24 1459.58 1560.24 1468.33 Q1560.24 1477.06 1557.16 1481.67 Q1554.11 1486.25 1548.3 1486.25 Q1542.49 1486.25 1539.41 1481.67 Q1536.35 1477.06 1536.35 1468.33 Q1536.35 1459.58 1539.41 1455 Q1542.49 1450.39 1548.3 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1587.55 1493.45 L1587.55 1496.76 L1562.93 1496.76 L1562.93 1493.45 L1587.55 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1596.19 1481.64 L1612.51 1481.64 L1612.51 1485.58 L1590.56 1485.58 L1590.56 1481.64 Q1593.23 1478.89 1597.81 1474.26 Q1602.42 1469.61 1603.6 1468.27 Q1605.84 1465.74 1606.72 1464.01 Q1607.62 1462.25 1607.62 1460.56 Q1607.62 1457.8 1605.68 1456.07 Q1603.76 1454.33 1600.66 1454.33 Q1598.46 1454.33 1596 1455.09 Q1593.57 1455.86 1590.8 1457.41 L1590.8 1452.69 Q1593.62 1451.55 1596.07 1450.97 Q1598.53 1450.39 1600.56 1450.39 Q1605.93 1450.39 1609.13 1453.08 Q1612.32 1455.77 1612.32 1460.26 Q1612.32 1462.39 1611.51 1464.31 Q1610.73 1466.2 1608.62 1468.8 Q1608.04 1469.47 1604.94 1472.69 Q1601.84 1475.88 1596.19 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1623.13 1481.64 L1630.77 1481.64 L1630.77 1455.28 L1622.46 1456.95 L1622.46 1452.69 L1630.73 1451.02 L1635.4 1451.02 L1635.4 1481.64 L1643.04 1481.64 L1643.04 1485.58 L1623.13 1485.58 L1623.13 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1671.58 1493.45 L1671.58 1496.76 L1646.95 1496.76 L1646.95 1493.45 L1671.58 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1680.22 1481.64 L1696.54 1481.64 L1696.54 1485.58 L1674.59 1485.58 L1674.59 1481.64 Q1677.25 1478.89 1681.84 1474.26 Q1686.44 1469.61 1687.62 1468.27 Q1689.87 1465.74 1690.75 1464.01 Q1691.65 1462.25 1691.65 1460.56 Q1691.65 1457.8 1689.71 1456.07 Q1687.79 1454.33 1684.68 1454.33 Q1682.48 1454.33 1680.03 1455.09 Q1677.6 1455.86 1674.82 1457.41 L1674.82 1452.69 Q1677.65 1451.55 1680.1 1450.97 Q1682.55 1450.39 1684.59 1450.39 Q1689.96 1450.39 1693.16 1453.08 Q1696.35 1455.77 1696.35 1460.26 Q1696.35 1462.39 1695.54 1464.31 Q1694.75 1466.2 1692.65 1468.8 Q1692.07 1469.47 1688.97 1472.69 Q1685.86 1475.88 1680.22 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1710.38 1481.64 L1726.7 1481.64 L1726.7 1485.58 L1704.75 1485.58 L1704.75 1481.64 Q1707.42 1478.89 1712 1474.26 Q1716.6 1469.61 1717.79 1468.27 Q1720.03 1465.74 1720.91 1464.01 Q1721.81 1462.25 1721.81 1460.56 Q1721.81 1457.8 1719.87 1456.07 Q1717.95 1454.33 1714.85 1454.33 Q1712.65 1454.33 1710.19 1455.09 Q1707.76 1455.86 1704.98 1457.41 L1704.98 1452.69 Q1707.81 1451.55 1710.26 1450.97 Q1712.72 1450.39 1714.75 1450.39 Q1720.12 1450.39 1723.32 1453.08 Q1726.51 1455.77 1726.51 1460.26 Q1726.51 1462.39 1725.7 1464.31 Q1724.91 1466.2 1722.81 1468.8 Q1722.23 1469.47 1719.13 1472.69 Q1716.03 1475.88 1710.38 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2145.03 1481.64 L2161.35 1481.64 L2161.35 1485.58 L2139.41 1485.58 L2139.41 1481.64 Q2142.07 1478.89 2146.65 1474.26 Q2151.26 1469.61 2152.44 1468.27 Q2154.68 1465.74 2155.56 1464.01 Q2156.47 1462.25 2156.47 1460.56 Q2156.47 1457.8 2154.52 1456.07 Q2152.6 1454.33 2149.5 1454.33 Q2147.3 1454.33 2144.84 1455.09 Q2142.41 1455.86 2139.64 1457.41 L2139.64 1452.69 Q2142.46 1451.55 2144.91 1450.97 Q2147.37 1450.39 2149.41 1450.39 Q2154.78 1450.39 2157.97 1453.08 Q2161.16 1455.77 2161.16 1460.26 Q2161.16 1462.39 2160.35 1464.31 Q2159.57 1466.2 2157.46 1468.8 Q2156.88 1469.47 2153.78 1472.69 Q2150.68 1475.88 2145.03 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2181.16 1454.1 Q2177.55 1454.1 2175.72 1457.66 Q2173.92 1461.2 2173.92 1468.33 Q2173.92 1475.44 2175.72 1479.01 Q2177.55 1482.55 2181.16 1482.55 Q2184.8 1482.55 2186.6 1479.01 Q2188.43 1475.44 2188.43 1468.33 Q2188.43 1461.2 2186.6 1457.66 Q2184.8 1454.1 2181.16 1454.1 M2181.16 1450.39 Q2186.97 1450.39 2190.03 1455 Q2193.11 1459.58 2193.11 1468.33 Q2193.11 1477.06 2190.03 1481.67 Q2186.97 1486.25 2181.16 1486.25 Q2175.35 1486.25 2172.28 1481.67 Q2169.22 1477.06 2169.22 1468.33 Q2169.22 1459.58 2172.28 1455 Q2175.35 1450.39 2181.16 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2220.42 1493.45 L2220.42 1496.76 L2195.79 1496.76 L2195.79 1493.45 L2220.42 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2229.06 1481.64 L2245.38 1481.64 L2245.38 1485.58 L2223.43 1485.58 L2223.43 1481.64 Q2226.09 1478.89 2230.68 1474.26 Q2235.28 1469.61 2236.46 1468.27 Q2238.71 1465.74 2239.59 1464.01 Q2240.49 1462.25 2240.49 1460.56 Q2240.49 1457.8 2238.55 1456.07 Q2236.63 1454.33 2233.53 1454.33 Q2231.33 1454.33 2228.87 1455.09 Q2226.44 1455.86 2223.66 1457.41 L2223.66 1452.69 Q2226.49 1451.55 2228.94 1450.97 Q2231.4 1450.39 2233.43 1450.39 Q2238.8 1450.39 2242 1453.08 Q2245.19 1455.77 2245.19 1460.26 Q2245.19 1462.39 2244.38 1464.31 Q2243.59 1466.2 2241.49 1468.8 Q2240.91 1469.47 2237.81 1472.69 Q2234.71 1475.88 2229.06 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2256 1481.64 L2263.64 1481.64 L2263.64 1455.28 L2255.33 1456.95 L2255.33 1452.69 L2263.59 1451.02 L2268.27 1451.02 L2268.27 1481.64 L2275.91 1481.64 L2275.91 1485.58 L2256 1485.58 L2256 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2304.45 1493.45 L2304.45 1496.76 L2279.82 1496.76 L2279.82 1493.45 L2304.45 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2313.08 1481.64 L2329.4 1481.64 L2329.4 1485.58 L2307.46 1485.58 L2307.46 1481.64 Q2310.12 1478.89 2314.71 1474.26 Q2319.31 1469.61 2320.49 1468.27 Q2322.74 1465.74 2323.62 1464.01 Q2324.52 1462.25 2324.52 1460.56 Q2324.52 1457.8 2322.58 1456.07 Q2320.65 1454.33 2317.55 1454.33 Q2315.35 1454.33 2312.9 1455.09 Q2310.47 1455.86 2307.69 1457.41 L2307.69 1452.69 Q2310.52 1451.55 2312.97 1450.97 Q2315.42 1450.39 2317.46 1450.39 Q2322.83 1450.39 2326.02 1453.08 Q2329.22 1455.77 2329.22 1460.26 Q2329.22 1462.39 2328.41 1464.31 Q2327.62 1466.2 2325.52 1468.8 Q2324.94 1469.47 2321.83 1472.69 Q2318.73 1475.88 2313.08 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2343.25 1481.64 L2359.57 1481.64 L2359.57 1485.58 L2337.62 1485.58 L2337.62 1481.64 Q2340.28 1478.89 2344.87 1474.26 Q2349.47 1469.61 2350.65 1468.27 Q2352.9 1465.74 2353.78 1464.01 Q2354.68 1462.25 2354.68 1460.56 Q2354.68 1457.8 2352.74 1456.07 Q2350.82 1454.33 2347.71 1454.33 Q2345.52 1454.33 2343.06 1455.09 Q2340.63 1455.86 2337.85 1457.41 L2337.85 1452.69 Q2340.68 1451.55 2343.13 1450.97 Q2345.58 1450.39 2347.62 1450.39 Q2352.99 1450.39 2356.19 1453.08 Q2359.38 1455.77 2359.38 1460.26 Q2359.38 1462.39 2358.57 1464.31 Q2357.78 1466.2 2355.68 1468.8 Q2355.1 1469.47 2352 1472.69 Q2348.89 1475.88 2343.25 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2388.48 1493.45 L2388.48 1496.76 L2363.85 1496.76 L2363.85 1493.45 L2388.48 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2397.11 1481.64 L2413.43 1481.64 L2413.43 1485.58 L2391.49 1485.58 L2391.49 1481.64 Q2394.15 1478.89 2398.73 1474.26 Q2403.34 1469.61 2404.52 1468.27 Q2406.76 1465.74 2407.64 1464.01 Q2408.55 1462.25 2408.55 1460.56 Q2408.55 1457.8 2406.6 1456.07 Q2404.68 1454.33 2401.58 1454.33 Q2399.38 1454.33 2396.93 1455.09 Q2394.5 1455.86 2391.72 1457.41 L2391.72 1452.69 Q2394.54 1451.55 2397 1450.97 Q2399.45 1450.39 2401.49 1450.39 Q2406.86 1450.39 2410.05 1453.08 Q2413.25 1455.77 2413.25 1460.26 Q2413.25 1462.39 2412.44 1464.31 Q2411.65 1466.2 2409.54 1468.8 Q2408.96 1469.47 2405.86 1472.69 Q2402.76 1475.88 2397.11 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2437.41 1466.95 Q2440.77 1467.66 2442.64 1469.93 Q2444.54 1472.2 2444.54 1475.53 Q2444.54 1480.65 2441.02 1483.45 Q2437.51 1486.25 2431.02 1486.25 Q2428.85 1486.25 2426.53 1485.81 Q2424.24 1485.39 2421.79 1484.54 L2421.79 1480.02 Q2423.73 1481.16 2426.05 1481.74 Q2428.36 1482.32 2430.89 1482.32 Q2435.28 1482.32 2437.57 1480.58 Q2439.89 1478.84 2439.89 1475.53 Q2439.89 1472.48 2437.74 1470.77 Q2435.61 1469.03 2431.79 1469.03 L2427.76 1469.03 L2427.76 1465.19 L2431.97 1465.19 Q2435.42 1465.19 2437.25 1463.82 Q2439.08 1462.43 2439.08 1459.84 Q2439.08 1457.18 2437.18 1455.77 Q2435.31 1454.33 2431.79 1454.33 Q2429.87 1454.33 2427.67 1454.75 Q2425.47 1455.16 2422.83 1456.04 L2422.83 1451.88 Q2425.49 1451.14 2427.81 1450.77 Q2430.14 1450.39 2432.2 1450.39 Q2437.53 1450.39 2440.63 1452.83 Q2443.73 1455.23 2443.73 1459.35 Q2443.73 1462.22 2442.09 1464.21 Q2440.45 1466.18 2437.41 1466.95 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1209.87 1520.52 L1216.78 1520.52 L1229.95 1540.07 L1243.04 1520.52 L1249.94 1520.52 L1233.14 1545.41 L1233.14 1568.04 L1226.68 1568.04 L1226.68 1545.41 L1209.87 1520.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1277.79 1548.76 L1277.79 1551.62 L1250.87 1551.62 Q1251.25 1557.67 1254.49 1560.85 Q1257.77 1564 1263.6 1564 Q1266.97 1564 1270.12 1563.17 Q1273.3 1562.35 1276.42 1560.69 L1276.42 1566.23 Q1273.27 1567.57 1269.96 1568.27 Q1266.65 1568.97 1263.25 1568.97 Q1254.72 1568.97 1249.72 1564 Q1244.75 1559.04 1244.75 1550.57 Q1244.75 1541.82 1249.47 1536.69 Q1254.21 1531.54 1262.23 1531.54 Q1269.42 1531.54 1273.59 1536.18 Q1277.79 1540.8 1277.79 1548.76 M1271.94 1547.04 Q1271.87 1542.23 1269.23 1539.37 Q1266.62 1536.5 1262.29 1536.5 Q1257.39 1536.5 1254.43 1539.27 Q1251.5 1542.04 1251.06 1547.07 L1271.94 1547.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1303.61 1550.12 Q1296.51 1550.12 1293.77 1551.75 Q1291.03 1553.37 1291.03 1557.29 Q1291.03 1560.4 1293.07 1562.25 Q1295.14 1564.07 1298.67 1564.07 Q1303.54 1564.07 1306.47 1560.63 Q1309.43 1557.16 1309.43 1551.43 L1309.43 1550.12 L1303.61 1550.12 M1315.29 1547.71 L1315.29 1568.04 L1309.43 1568.04 L1309.43 1562.63 Q1307.42 1565.88 1304.43 1567.44 Q1301.44 1568.97 1297.11 1568.97 Q1291.64 1568.97 1288.39 1565.91 Q1285.18 1562.82 1285.18 1557.67 Q1285.18 1551.65 1289.19 1548.6 Q1293.23 1545.54 1301.22 1545.54 L1309.43 1545.54 L1309.43 1544.97 Q1309.43 1540.93 1306.76 1538.73 Q1304.11 1536.5 1299.31 1536.5 Q1296.25 1536.5 1293.36 1537.23 Q1290.46 1537.97 1287.79 1539.43 L1287.79 1534.02 Q1291 1532.78 1294.03 1532.17 Q1297.05 1531.54 1299.91 1531.54 Q1307.65 1531.54 1311.47 1535.55 Q1315.29 1539.56 1315.29 1547.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1348.01 1537.87 Q1347.02 1537.3 1345.84 1537.04 Q1344.7 1536.76 1343.3 1536.76 Q1338.33 1536.76 1335.66 1540 Q1333.02 1543.22 1333.02 1549.27 L1333.02 1568.04 L1327.13 1568.04 L1327.13 1532.4 L1333.02 1532.4 L1333.02 1537.93 Q1334.86 1534.69 1337.82 1533.13 Q1340.78 1531.54 1345.01 1531.54 Q1345.62 1531.54 1346.35 1531.63 Q1347.08 1531.7 1347.97 1531.85 L1348.01 1537.87 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,1386.4 2352.76,1386.4 \"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,1094.46 2352.76,1094.46 \"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,802.52 2352.76,802.52 \"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,510.582 2352.76,510.582 \"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,218.644 2352.76,218.644 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,1423.18 205.121,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,1386.4 224.019,1386.4 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,1094.46 224.019,1094.46 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,802.52 224.019,802.52 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,510.582 224.019,510.582 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,218.644 224.019,218.644 \"/>\n",
       "<path clip-path=\"url(#clip190)\" d=\"M157.177 1372.19 Q153.566 1372.19 151.737 1375.76 Q149.931 1379.3 149.931 1386.43 Q149.931 1393.54 151.737 1397.1 Q153.566 1400.64 157.177 1400.64 Q160.811 1400.64 162.616 1397.1 Q164.445 1393.54 164.445 1386.43 Q164.445 1379.3 162.616 1375.76 Q160.811 1372.19 157.177 1372.19 M157.177 1368.49 Q162.987 1368.49 166.042 1373.1 Q169.121 1377.68 169.121 1386.43 Q169.121 1395.16 166.042 1399.76 Q162.987 1404.35 157.177 1404.35 Q151.366 1404.35 148.288 1399.76 Q145.232 1395.16 145.232 1386.43 Q145.232 1377.68 148.288 1373.1 Q151.366 1368.49 157.177 1368.49 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M117.825 1107.8 L125.464 1107.8 L125.464 1081.44 L117.154 1083.1 L117.154 1078.84 L125.418 1077.18 L130.093 1077.18 L130.093 1107.8 L137.732 1107.8 L137.732 1111.74 L117.825 1111.74 L117.825 1107.8 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M157.177 1080.26 Q153.566 1080.26 151.737 1083.82 Q149.931 1087.36 149.931 1094.49 Q149.931 1101.6 151.737 1105.16 Q153.566 1108.71 157.177 1108.71 Q160.811 1108.71 162.616 1105.16 Q164.445 1101.6 164.445 1094.49 Q164.445 1087.36 162.616 1083.82 Q160.811 1080.26 157.177 1080.26 M157.177 1076.55 Q162.987 1076.55 166.042 1081.16 Q169.121 1085.74 169.121 1094.49 Q169.121 1103.22 166.042 1107.83 Q162.987 1112.41 157.177 1112.41 Q151.366 1112.41 148.288 1107.83 Q145.232 1103.22 145.232 1094.49 Q145.232 1085.74 148.288 1081.16 Q151.366 1076.55 157.177 1076.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M121.043 815.865 L137.362 815.865 L137.362 819.8 L115.418 819.8 L115.418 815.865 Q118.08 813.11 122.663 808.48 Q127.269 803.828 128.45 802.485 Q130.695 799.962 131.575 798.226 Q132.478 796.467 132.478 794.777 Q132.478 792.022 130.533 790.286 Q128.612 788.55 125.51 788.55 Q123.311 788.55 120.857 789.314 Q118.427 790.078 115.649 791.629 L115.649 786.906 Q118.473 785.772 120.927 785.193 Q123.38 784.615 125.418 784.615 Q130.788 784.615 133.982 787.3 Q137.177 789.985 137.177 794.476 Q137.177 796.605 136.367 798.527 Q135.579 800.425 133.473 803.017 Q132.894 803.689 129.792 806.906 Q126.691 810.101 121.043 815.865 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M157.177 788.318 Q153.566 788.318 151.737 791.883 Q149.931 795.425 149.931 802.555 Q149.931 809.661 151.737 813.226 Q153.566 816.767 157.177 816.767 Q160.811 816.767 162.616 813.226 Q164.445 809.661 164.445 802.555 Q164.445 795.425 162.616 791.883 Q160.811 788.318 157.177 788.318 M157.177 784.615 Q162.987 784.615 166.042 789.221 Q169.121 793.805 169.121 802.555 Q169.121 811.281 166.042 815.888 Q162.987 820.471 157.177 820.471 Q151.366 820.471 148.288 815.888 Q145.232 811.281 145.232 802.555 Q145.232 793.805 148.288 789.221 Q151.366 784.615 157.177 784.615 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M131.181 509.228 Q134.538 509.945 136.413 512.214 Q138.311 514.482 138.311 517.816 Q138.311 522.931 134.792 525.732 Q131.274 528.533 124.793 528.533 Q122.617 528.533 120.302 528.093 Q118.01 527.677 115.556 526.82 L115.556 522.306 Q117.501 523.441 119.816 524.019 Q122.13 524.598 124.654 524.598 Q129.052 524.598 131.343 522.862 Q133.658 521.126 133.658 517.816 Q133.658 514.76 131.505 513.047 Q129.376 511.311 125.556 511.311 L121.529 511.311 L121.529 507.468 L125.742 507.468 Q129.191 507.468 131.019 506.103 Q132.848 504.714 132.848 502.121 Q132.848 499.459 130.95 498.047 Q129.075 496.612 125.556 496.612 Q123.635 496.612 121.436 497.029 Q119.237 497.445 116.598 498.325 L116.598 494.158 Q119.26 493.418 121.575 493.047 Q123.913 492.677 125.973 492.677 Q131.297 492.677 134.399 495.107 Q137.501 497.515 137.501 501.635 Q137.501 504.505 135.857 506.496 Q134.214 508.464 131.181 509.228 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M157.177 496.381 Q153.566 496.381 151.737 499.945 Q149.931 503.487 149.931 510.617 Q149.931 517.723 151.737 521.288 Q153.566 524.829 157.177 524.829 Q160.811 524.829 162.616 521.288 Q164.445 517.723 164.445 510.617 Q164.445 503.487 162.616 499.945 Q160.811 496.381 157.177 496.381 M157.177 492.677 Q162.987 492.677 166.042 497.283 Q169.121 501.867 169.121 510.617 Q169.121 519.343 166.042 523.95 Q162.987 528.533 157.177 528.533 Q151.366 528.533 148.288 523.95 Q145.232 519.343 145.232 510.617 Q145.232 501.867 148.288 497.283 Q151.366 492.677 157.177 492.677 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M129.862 205.438 L118.056 223.887 L129.862 223.887 L129.862 205.438 M128.635 201.364 L134.515 201.364 L134.515 223.887 L139.445 223.887 L139.445 227.776 L134.515 227.776 L134.515 235.924 L129.862 235.924 L129.862 227.776 L114.26 227.776 L114.26 223.262 L128.635 201.364 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M157.177 204.443 Q153.566 204.443 151.737 208.007 Q149.931 211.549 149.931 218.679 Q149.931 225.785 151.737 229.35 Q153.566 232.892 157.177 232.892 Q160.811 232.892 162.616 229.35 Q164.445 225.785 164.445 218.679 Q164.445 211.549 162.616 208.007 Q160.811 204.443 157.177 204.443 M157.177 200.739 Q162.987 200.739 166.042 205.345 Q169.121 209.929 169.121 218.679 Q169.121 227.405 166.042 232.012 Q162.987 236.595 157.177 236.595 Q151.366 236.595 148.288 232.012 Q145.232 227.405 145.232 218.679 Q145.232 209.929 148.288 205.345 Q151.366 200.739 157.177 200.739 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M21.7677 1051.51 L58.7206 1051.51 L58.7206 1043.74 Q58.7206 1033.91 54.2646 1029.35 Q49.8086 1024.77 40.1964 1024.77 Q30.6479 1024.77 26.2237 1029.35 Q21.7677 1033.91 21.7677 1043.74 L21.7677 1051.51 M16.4842 1057.94 L16.4842 1044.73 Q16.4842 1030.91 22.2451 1024.45 Q27.9743 1017.99 40.1964 1017.99 Q52.4822 1017.99 58.2432 1024.48 Q64.0042 1030.98 64.0042 1044.73 L64.0042 1057.94 L16.4842 1057.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M44.7161 977.506 L47.5806 977.506 L47.5806 1004.43 Q53.6281 1004.05 56.8109 1000.8 Q59.9619 997.526 59.9619 991.702 Q59.9619 988.328 59.1344 985.177 Q58.3069 981.994 56.6518 978.875 L62.1899 978.875 Q63.5267 982.026 64.227 985.336 Q64.9272 988.646 64.9272 992.052 Q64.9272 1000.58 59.9619 1005.58 Q54.9967 1010.54 46.5303 1010.54 Q37.7774 1010.54 32.6531 1005.83 Q27.4968 1001.09 27.4968 993.07 Q27.4968 985.877 32.1438 981.707 Q36.7589 977.506 44.7161 977.506 M42.9973 983.362 Q38.1912 983.426 35.3266 986.068 Q32.4621 988.678 32.4621 993.007 Q32.4621 997.908 35.2312 1000.87 Q38.0002 1003.8 43.0292 1004.24 L42.9973 983.362 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M45.7664 944.436 Q39.4007 944.436 35.8996 947.078 Q32.3984 949.688 32.3984 954.43 Q32.3984 959.141 35.8996 961.783 Q39.4007 964.393 45.7664 964.393 Q52.1003 964.393 55.6014 961.783 Q59.1026 959.141 59.1026 954.43 Q59.1026 949.688 55.6014 947.078 Q52.1003 944.436 45.7664 944.436 M59.58 938.58 Q68.683 938.58 73.1071 942.622 Q77.5631 946.664 77.5631 955.003 Q77.5631 958.091 77.0857 960.828 Q76.6401 963.565 75.6852 966.143 L69.9879 966.143 Q71.3884 963.565 72.0568 961.051 Q72.7252 958.536 72.7252 955.926 Q72.7252 950.165 69.7015 947.301 Q66.7096 944.436 60.6303 944.436 L57.7339 944.436 Q60.885 946.25 62.4446 949.083 Q64.0042 951.916 64.0042 955.863 Q64.0042 962.419 59.0071 966.43 Q54.01 970.44 45.7664 970.44 Q37.491 970.44 32.4939 966.43 Q27.4968 962.419 27.4968 955.863 Q27.4968 951.916 29.0564 949.083 Q30.616 946.25 33.7671 944.436 L28.3562 944.436 L28.3562 938.58 L59.58 938.58 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M33.8307 905.86 Q33.2578 906.847 33.0032 908.024 Q32.7167 909.17 32.7167 910.571 Q32.7167 915.536 35.9632 918.209 Q39.1779 920.851 45.2253 920.851 L64.0042 920.851 L64.0042 926.74 L28.3562 926.74 L28.3562 920.851 L33.8944 920.851 Q30.6479 919.005 29.0883 916.045 Q27.4968 913.085 27.4968 908.852 Q27.4968 908.247 27.5923 907.515 Q27.656 906.783 27.8151 905.892 L33.8307 905.86 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M44.7161 870.658 L47.5806 870.658 L47.5806 897.585 Q53.6281 897.203 56.8109 893.956 Q59.9619 890.678 59.9619 884.853 Q59.9619 881.479 59.1344 878.328 Q58.3069 875.145 56.6518 872.026 L62.1899 872.026 Q63.5267 875.177 64.227 878.487 Q64.9272 881.798 64.9272 885.203 Q64.9272 893.733 59.9619 898.73 Q54.9967 903.696 46.5303 903.696 Q37.7774 903.696 32.6531 898.985 Q27.4968 894.243 27.4968 886.222 Q27.4968 879.029 32.1438 874.859 Q36.7589 870.658 44.7161 870.658 M42.9973 876.514 Q38.1912 876.578 35.3266 879.22 Q32.4621 881.829 32.4621 886.158 Q32.4621 891.06 35.2312 894.02 Q38.0002 896.948 43.0292 897.394 L42.9973 876.514 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M44.7161 830.554 L47.5806 830.554 L47.5806 857.481 Q53.6281 857.099 56.8109 853.852 Q59.9619 850.574 59.9619 844.749 Q59.9619 841.375 59.1344 838.224 Q58.3069 835.042 56.6518 831.922 L62.1899 831.922 Q63.5267 835.073 64.227 838.384 Q64.9272 841.694 64.9272 845.099 Q64.9272 853.629 59.9619 858.626 Q54.9967 863.592 46.5303 863.592 Q37.7774 863.592 32.6531 858.881 Q27.4968 854.139 27.4968 846.118 Q27.4968 838.925 32.1438 834.755 Q36.7589 830.554 44.7161 830.554 M42.9973 836.41 Q38.1912 836.474 35.3266 839.116 Q32.4621 841.726 32.4621 846.054 Q32.4621 850.956 35.2312 853.916 Q38.0002 856.844 43.0292 857.29 L42.9973 836.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M20.1444 764.382 L26.9239 764.382 Q23.9002 767.629 22.4043 771.321 Q20.9083 774.981 20.9083 779.119 Q20.9083 787.267 25.9054 791.596 Q30.8707 795.924 40.2919 795.924 Q49.6813 795.924 54.6784 791.596 Q59.6436 787.267 59.6436 779.119 Q59.6436 774.981 58.1477 771.321 Q56.6518 767.629 53.6281 764.382 L60.3439 764.382 Q62.6355 767.756 63.7814 771.544 Q64.9272 775.299 64.9272 779.501 Q64.9272 790.291 58.3387 796.497 Q51.7183 802.704 40.2919 802.704 Q28.8336 802.704 22.2451 796.497 Q15.6248 790.291 15.6248 779.501 Q15.6248 775.236 16.7706 771.48 Q17.8846 767.692 20.1444 764.382 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M44.7161 724.215 L47.5806 724.215 L47.5806 751.141 Q53.6281 750.76 56.8109 747.513 Q59.9619 744.235 59.9619 738.41 Q59.9619 735.036 59.1344 731.885 Q58.3069 728.702 56.6518 725.583 L62.1899 725.583 Q63.5267 728.734 64.227 732.044 Q64.9272 735.355 64.9272 738.76 Q64.9272 747.29 59.9619 752.287 Q54.9967 757.253 46.5303 757.253 Q37.7774 757.253 32.6531 752.542 Q27.4968 747.8 27.4968 739.779 Q27.4968 732.585 32.1438 728.416 Q36.7589 724.215 44.7161 724.215 M42.9973 730.071 Q38.1912 730.135 35.3266 732.776 Q32.4621 735.386 32.4621 739.715 Q32.4621 744.617 35.2312 747.577 Q38.0002 750.505 43.0292 750.951 L42.9973 730.071 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M42.4881 684.97 L64.0042 684.97 L64.0042 690.826 L42.679 690.826 Q37.6183 690.826 35.1038 692.8 Q32.5894 694.773 32.5894 698.72 Q32.5894 703.462 35.6131 706.2 Q38.6368 708.937 43.8567 708.937 L64.0042 708.937 L64.0042 714.825 L28.3562 714.825 L28.3562 708.937 L33.8944 708.937 Q30.6797 706.836 29.0883 704.003 Q27.4968 701.139 27.4968 697.415 Q27.4968 691.272 31.3163 688.121 Q35.1038 684.97 42.4881 684.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M18.2347 667.496 L28.3562 667.496 L28.3562 655.433 L32.9077 655.433 L32.9077 667.496 L52.2594 667.496 Q56.6199 667.496 57.8613 666.318 Q59.1026 665.109 59.1026 661.449 L59.1026 655.433 L64.0042 655.433 L64.0042 661.449 Q64.0042 668.228 61.4897 670.806 Q58.9434 673.384 52.2594 673.384 L32.9077 673.384 L32.9077 677.681 L28.3562 677.681 L28.3562 673.384 L18.2347 673.384 L18.2347 667.496 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M33.8307 627.074 Q33.2578 628.061 33.0032 629.238 Q32.7167 630.384 32.7167 631.784 Q32.7167 636.75 35.9632 639.423 Q39.1779 642.065 45.2253 642.065 L64.0042 642.065 L64.0042 647.953 L28.3562 647.953 L28.3562 642.065 L33.8944 642.065 Q30.6479 640.219 29.0883 637.259 Q27.4968 634.299 27.4968 630.066 Q27.4968 629.461 27.5923 628.729 Q27.656 627.997 27.8151 627.106 L33.8307 627.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M46.0847 604.73 Q46.0847 611.828 47.7079 614.565 Q49.3312 617.303 53.2461 617.303 Q56.3653 617.303 58.2114 615.265 Q60.0256 613.197 60.0256 609.664 Q60.0256 604.794 56.5881 601.866 Q53.1188 598.906 47.3897 598.906 L46.0847 598.906 L46.0847 604.73 M43.6657 593.049 L64.0042 593.049 L64.0042 598.906 L58.5933 598.906 Q61.8398 600.911 63.3994 603.903 Q64.9272 606.895 64.9272 611.223 Q64.9272 616.698 61.8716 619.944 Q58.7843 623.159 53.6281 623.159 Q47.6125 623.159 44.5569 619.149 Q41.5014 615.106 41.5014 607.117 L41.5014 598.906 L40.9285 598.906 Q36.8862 598.906 34.6901 601.579 Q32.4621 604.221 32.4621 609.027 Q32.4621 612.083 33.1941 614.979 Q33.9262 617.875 35.3903 620.549 L29.9795 620.549 Q28.7381 617.334 28.1334 614.311 Q27.4968 611.287 27.4968 608.422 Q27.4968 600.688 31.5072 596.869 Q35.5176 593.049 43.6657 593.049 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M14.479 580.986 L14.479 575.13 L64.0042 575.13 L64.0042 580.986 L14.479 580.986 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M28.3562 562.876 L28.3562 557.019 L64.0042 557.019 L64.0042 562.876 L28.3562 562.876 M14.479 562.876 L14.479 557.019 L21.895 557.019 L21.895 562.876 L14.479 562.876 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M18.2347 538.972 L28.3562 538.972 L28.3562 526.909 L32.9077 526.909 L32.9077 538.972 L52.2594 538.972 Q56.6199 538.972 57.8613 537.795 Q59.1026 536.585 59.1026 532.925 L59.1026 526.909 L64.0042 526.909 L64.0042 532.925 Q64.0042 539.705 61.4897 542.283 Q58.9434 544.861 52.2594 544.861 L32.9077 544.861 L32.9077 549.158 L28.3562 549.158 L28.3562 544.861 L18.2347 544.861 L18.2347 538.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M67.3143 504.375 Q73.68 506.858 75.6216 509.213 Q77.5631 511.568 77.5631 515.515 L77.5631 520.194 L72.6615 520.194 L72.6615 516.756 Q72.6615 514.337 71.5157 513 Q70.3699 511.664 66.1048 510.04 L63.4312 508.99 L28.3562 523.408 L28.3562 517.202 L56.238 506.062 L28.3562 494.922 L28.3562 488.715 L67.3143 504.375 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M698.201 18.8205 L698.201 65.8515 L708.085 65.8515 Q720.602 65.8515 726.395 60.1802 Q732.228 54.509 732.228 42.2752 Q732.228 30.1225 726.395 24.4918 Q720.602 18.8205 708.085 18.8205 L698.201 18.8205 M690.018 12.096 L706.829 12.096 Q724.41 12.096 732.633 19.4281 Q740.857 26.7198 740.857 42.2752 Q740.857 57.9117 732.593 65.2439 Q724.329 72.576 706.829 72.576 L690.018 72.576 L690.018 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M792.384 48.0275 L792.384 51.6733 L758.114 51.6733 Q758.6 59.3701 762.732 63.421 Q766.904 67.4314 774.317 67.4314 Q778.611 67.4314 782.622 66.3781 Q786.673 65.3249 790.642 63.2184 L790.642 70.267 Q786.632 71.9684 782.419 72.8596 Q778.206 73.7508 773.872 73.7508 Q763.015 73.7508 756.655 67.4314 Q750.336 61.1119 750.336 50.3365 Q750.336 39.1965 756.331 32.6746 Q762.367 26.1121 772.575 26.1121 Q781.73 26.1121 787.037 32.0264 Q792.384 37.9003 792.384 48.0275 M784.931 45.84 Q784.85 39.7232 781.487 36.0774 Q778.166 32.4315 772.656 32.4315 Q766.418 32.4315 762.651 35.9558 Q758.924 39.4801 758.357 45.8805 L784.931 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M834.473 49.3643 Q834.473 41.2625 831.111 36.8065 Q827.789 32.3505 821.753 32.3505 Q815.758 32.3505 812.396 36.8065 Q809.074 41.2625 809.074 49.3643 Q809.074 57.4256 812.396 61.8816 Q815.758 66.3376 821.753 66.3376 Q827.789 66.3376 831.111 61.8816 Q834.473 57.4256 834.473 49.3643 M841.927 66.9452 Q841.927 78.5308 836.782 84.1616 Q831.638 89.8329 821.024 89.8329 Q817.095 89.8329 813.611 89.2252 Q810.127 88.6581 806.846 87.4428 L806.846 80.1917 Q810.127 81.9741 813.328 82.8248 Q816.528 83.6755 819.849 83.6755 Q827.182 83.6755 830.827 79.8271 Q834.473 76.0193 834.473 68.282 L834.473 64.5957 Q832.164 68.6061 828.559 70.5911 Q824.954 72.576 819.93 72.576 Q811.586 72.576 806.481 66.2161 Q801.377 59.8562 801.377 49.3643 Q801.377 38.832 806.481 32.472 Q811.586 26.1121 819.93 26.1121 Q824.954 26.1121 828.559 28.0971 Q832.164 30.082 834.473 34.0924 L834.473 27.2059 L841.927 27.2059 L841.927 66.9452 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M883.57 34.1734 Q882.314 33.4443 880.816 33.1202 Q879.357 32.7556 877.575 32.7556 Q871.255 32.7556 867.853 36.8875 Q864.49 40.9789 864.49 48.6757 L864.49 72.576 L856.996 72.576 L856.996 27.2059 L864.49 27.2059 L864.49 34.2544 Q866.84 30.1225 870.607 28.1376 Q874.375 26.1121 879.762 26.1121 Q880.532 26.1121 881.464 26.2337 Q882.395 26.3147 883.53 26.5172 L883.57 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M928.373 48.0275 L928.373 51.6733 L894.103 51.6733 Q894.589 59.3701 898.721 63.421 Q902.893 67.4314 910.306 67.4314 Q914.6 67.4314 918.611 66.3781 Q922.661 65.3249 926.631 63.2184 L926.631 70.267 Q922.621 71.9684 918.408 72.8596 Q914.195 73.7508 909.861 73.7508 Q899.004 73.7508 892.644 67.4314 Q886.325 61.1119 886.325 50.3365 Q886.325 39.1965 892.32 32.6746 Q898.356 26.1121 908.564 26.1121 Q917.719 26.1121 923.026 32.0264 Q928.373 37.9003 928.373 48.0275 M920.92 45.84 Q920.839 39.7232 917.476 36.0774 Q914.155 32.4315 908.645 32.4315 Q902.407 32.4315 898.64 35.9558 Q894.913 39.4801 894.346 45.8805 L920.92 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M979.415 48.0275 L979.415 51.6733 L945.144 51.6733 Q945.63 59.3701 949.762 63.421 Q953.934 67.4314 961.348 67.4314 Q965.642 67.4314 969.652 66.3781 Q973.703 65.3249 977.673 63.2184 L977.673 70.267 Q973.662 71.9684 969.449 72.8596 Q965.236 73.7508 960.902 73.7508 Q950.046 73.7508 943.686 67.4314 Q937.366 61.1119 937.366 50.3365 Q937.366 39.1965 943.362 32.6746 Q949.397 26.1121 959.606 26.1121 Q968.761 26.1121 974.067 32.0264 Q979.415 37.9003 979.415 48.0275 M971.961 45.84 Q971.88 39.7232 968.518 36.0774 Q965.196 32.4315 959.687 32.4315 Q953.448 32.4315 949.681 35.9558 Q945.954 39.4801 945.387 45.8805 L971.961 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1063.63 16.7545 L1063.63 25.383 Q1059.5 21.5346 1054.8 19.6307 Q1050.14 17.7268 1044.88 17.7268 Q1034.51 17.7268 1029 24.0867 Q1023.49 30.4061 1023.49 42.3968 Q1023.49 54.3469 1029 60.7069 Q1034.51 67.0263 1044.88 67.0263 Q1050.14 67.0263 1054.8 65.1223 Q1059.5 63.2184 1063.63 59.3701 L1063.63 67.9175 Q1059.34 70.8341 1054.52 72.2924 Q1049.74 73.7508 1044.39 73.7508 Q1030.66 73.7508 1022.76 65.3654 Q1014.86 56.9395 1014.86 42.3968 Q1014.86 27.8135 1022.76 19.4281 Q1030.66 11.0023 1044.39 11.0023 Q1049.82 11.0023 1054.6 12.4606 Q1059.42 13.8784 1063.63 16.7545 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1114.76 48.0275 L1114.76 51.6733 L1080.48 51.6733 Q1080.97 59.3701 1085.1 63.421 Q1089.28 67.4314 1096.69 67.4314 Q1100.98 67.4314 1104.99 66.3781 Q1109.04 65.3249 1113.01 63.2184 L1113.01 70.267 Q1109 71.9684 1104.79 72.8596 Q1100.58 73.7508 1096.24 73.7508 Q1085.39 73.7508 1079.03 67.4314 Q1072.71 61.1119 1072.71 50.3365 Q1072.71 39.1965 1078.7 32.6746 Q1084.74 26.1121 1094.95 26.1121 Q1104.1 26.1121 1109.41 32.0264 Q1114.76 37.9003 1114.76 48.0275 M1107.3 45.84 Q1107.22 39.7232 1103.86 36.0774 Q1100.54 32.4315 1095.03 32.4315 Q1088.79 32.4315 1085.02 35.9558 Q1081.29 39.4801 1080.73 45.8805 L1107.3 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1164.7 45.1919 L1164.7 72.576 L1157.25 72.576 L1157.25 45.4349 Q1157.25 38.994 1154.74 35.7938 Q1152.23 32.5936 1147.2 32.5936 Q1141.17 32.5936 1137.68 36.4419 Q1134.2 40.2903 1134.2 46.9338 L1134.2 72.576 L1126.71 72.576 L1126.71 27.2059 L1134.2 27.2059 L1134.2 34.2544 Q1136.87 30.163 1140.48 28.1376 Q1144.12 26.1121 1148.86 26.1121 Q1156.68 26.1121 1160.69 30.9732 Q1164.7 35.7938 1164.7 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1186.94 14.324 L1186.94 27.2059 L1202.3 27.2059 L1202.3 32.9987 L1186.94 32.9987 L1186.94 57.6282 Q1186.94 63.1779 1188.44 64.7578 Q1189.98 66.3376 1194.64 66.3376 L1202.3 66.3376 L1202.3 72.576 L1194.64 72.576 Q1186.01 72.576 1182.73 69.3758 Q1179.45 66.1351 1179.45 57.6282 L1179.45 32.9987 L1173.98 32.9987 L1173.98 27.2059 L1179.45 27.2059 L1179.45 14.324 L1186.94 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1238.39 34.1734 Q1237.13 33.4443 1235.63 33.1202 Q1234.18 32.7556 1232.39 32.7556 Q1226.07 32.7556 1222.67 36.8875 Q1219.31 40.9789 1219.31 48.6757 L1219.31 72.576 L1211.81 72.576 L1211.81 27.2059 L1219.31 27.2059 L1219.31 34.2544 Q1221.66 30.1225 1225.43 28.1376 Q1229.19 26.1121 1234.58 26.1121 Q1235.35 26.1121 1236.28 26.2337 Q1237.21 26.3147 1238.35 26.5172 L1238.39 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1266.83 49.7694 Q1257.79 49.7694 1254.31 51.8354 Q1250.83 53.9013 1250.83 58.8839 Q1250.83 62.8538 1253.42 65.2034 Q1256.05 67.5124 1260.55 67.5124 Q1266.75 67.5124 1270.47 63.1374 Q1274.24 58.7219 1274.24 51.4303 L1274.24 49.7694 L1266.83 49.7694 M1281.69 46.6907 L1281.69 72.576 L1274.24 72.576 L1274.24 65.6895 Q1271.69 69.8214 1267.88 71.8063 Q1264.07 73.7508 1258.56 73.7508 Q1251.59 73.7508 1247.46 69.8619 Q1243.37 65.9325 1243.37 59.3701 Q1243.37 51.7138 1248.48 47.825 Q1253.62 43.9361 1263.79 43.9361 L1274.24 43.9361 L1274.24 43.2069 Q1274.24 38.0623 1270.84 35.2672 Q1267.47 32.4315 1261.36 32.4315 Q1257.47 32.4315 1253.78 33.3632 Q1250.1 34.295 1246.69 36.1584 L1246.69 29.2718 Q1250.78 27.692 1254.63 26.9223 Q1258.48 26.1121 1262.13 26.1121 Q1271.97 26.1121 1276.83 31.2163 Q1281.69 36.3204 1281.69 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1297.05 9.54393 L1304.5 9.54393 L1304.5 72.576 L1297.05 72.576 L1297.05 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1320.1 27.2059 L1327.55 27.2059 L1327.55 72.576 L1320.1 72.576 L1320.1 27.2059 M1320.1 9.54393 L1327.55 9.54393 L1327.55 18.9825 L1320.1 18.9825 L1320.1 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1350.52 14.324 L1350.52 27.2059 L1365.87 27.2059 L1365.87 32.9987 L1350.52 32.9987 L1350.52 57.6282 Q1350.52 63.1779 1352.02 64.7578 Q1353.56 66.3376 1358.21 66.3376 L1365.87 66.3376 L1365.87 72.576 L1358.21 72.576 Q1349.59 72.576 1346.3 69.3758 Q1343.02 66.1351 1343.02 57.6282 L1343.02 32.9987 L1337.56 32.9987 L1337.56 27.2059 L1343.02 27.2059 L1343.02 14.324 L1350.52 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1394.55 76.7889 Q1391.39 84.8907 1388.39 87.3618 Q1385.4 89.8329 1380.37 89.8329 L1374.42 89.8329 L1374.42 83.5945 L1378.79 83.5945 Q1381.87 83.5945 1383.57 82.1361 Q1385.27 80.6778 1387.34 75.2496 L1388.68 71.8468 L1370.33 27.2059 L1378.23 27.2059 L1392.4 62.6918 L1406.58 27.2059 L1414.48 27.2059 L1394.55 76.7889 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1476.01 17.6457 Q1467.1 17.6457 1461.84 24.2892 Q1456.61 30.9327 1456.61 42.3968 Q1456.61 53.8203 1461.84 60.4638 Q1467.1 67.1073 1476.01 67.1073 Q1484.93 67.1073 1490.11 60.4638 Q1495.34 53.8203 1495.34 42.3968 Q1495.34 30.9327 1490.11 24.2892 Q1484.93 17.6457 1476.01 17.6457 M1476.01 11.0023 Q1488.73 11.0023 1496.35 19.5497 Q1503.97 28.0566 1503.97 42.3968 Q1503.97 56.6965 1496.35 65.2439 Q1488.73 73.7508 1476.01 73.7508 Q1463.25 73.7508 1455.6 65.2439 Q1447.98 56.737 1447.98 42.3968 Q1447.98 28.0566 1455.6 19.5497 Q1463.25 11.0023 1476.01 11.0023 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1511.1 27.2059 L1519 27.2059 L1533.17 65.2844 L1547.35 27.2059 L1555.25 27.2059 L1538.24 72.576 L1528.11 72.576 L1511.1 27.2059 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1604.35 48.0275 L1604.35 51.6733 L1570.08 51.6733 Q1570.56 59.3701 1574.69 63.421 Q1578.87 67.4314 1586.28 67.4314 Q1590.57 67.4314 1594.58 66.3781 Q1598.64 65.3249 1602.61 63.2184 L1602.61 70.267 Q1598.6 71.9684 1594.38 72.8596 Q1590.17 73.7508 1585.83 73.7508 Q1574.98 73.7508 1568.62 67.4314 Q1562.3 61.1119 1562.3 50.3365 Q1562.3 39.1965 1568.29 32.6746 Q1574.33 26.1121 1584.54 26.1121 Q1593.69 26.1121 1599 32.0264 Q1604.35 37.9003 1604.35 48.0275 M1596.89 45.84 Q1596.81 39.7232 1593.45 36.0774 Q1590.13 32.4315 1584.62 32.4315 Q1578.38 32.4315 1574.61 35.9558 Q1570.89 39.4801 1570.32 45.8805 L1596.89 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1642.87 34.1734 Q1641.62 33.4443 1640.12 33.1202 Q1638.66 32.7556 1636.88 32.7556 Q1630.56 32.7556 1627.15 36.8875 Q1623.79 40.9789 1623.79 48.6757 L1623.79 72.576 L1616.3 72.576 L1616.3 27.2059 L1623.79 27.2059 L1623.79 34.2544 Q1626.14 30.1225 1629.91 28.1376 Q1633.68 26.1121 1639.06 26.1121 Q1639.83 26.1121 1640.77 26.2337 Q1641.7 26.3147 1642.83 26.5172 L1642.87 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1669 12.096 L1720.16 12.096 L1720.16 18.9825 L1698.69 18.9825 L1698.69 72.576 L1690.47 72.576 L1690.47 18.9825 L1669 18.9825 L1669 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1725.19 27.2059 L1732.64 27.2059 L1732.64 72.576 L1725.19 72.576 L1725.19 27.2059 M1725.19 9.54393 L1732.64 9.54393 L1732.64 18.9825 L1725.19 18.9825 L1725.19 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1783.56 35.9153 Q1786.35 30.8922 1790.24 28.5022 Q1794.13 26.1121 1799.4 26.1121 Q1806.49 26.1121 1810.34 31.0947 Q1814.18 36.0368 1814.18 45.1919 L1814.18 72.576 L1806.69 72.576 L1806.69 45.4349 Q1806.69 38.913 1804.38 35.7533 Q1802.07 32.5936 1797.33 32.5936 Q1791.54 32.5936 1788.18 36.4419 Q1784.82 40.2903 1784.82 46.9338 L1784.82 72.576 L1777.32 72.576 L1777.32 45.4349 Q1777.32 38.8725 1775.01 35.7533 Q1772.7 32.5936 1767.88 32.5936 Q1762.17 32.5936 1758.81 36.4824 Q1755.45 40.3308 1755.45 46.9338 L1755.45 72.576 L1747.95 72.576 L1747.95 27.2059 L1755.45 27.2059 L1755.45 34.2544 Q1758 30.082 1761.56 28.0971 Q1765.13 26.1121 1770.03 26.1121 Q1774.97 26.1121 1778.41 28.6237 Q1781.9 31.1352 1783.56 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1867.86 48.0275 L1867.86 51.6733 L1833.59 51.6733 Q1834.07 59.3701 1838.21 63.421 Q1842.38 67.4314 1849.79 67.4314 Q1854.09 67.4314 1858.1 66.3781 Q1862.15 65.3249 1866.12 63.2184 L1866.12 70.267 Q1862.11 71.9684 1857.89 72.8596 Q1853.68 73.7508 1849.35 73.7508 Q1838.49 73.7508 1832.13 67.4314 Q1825.81 61.1119 1825.81 50.3365 Q1825.81 39.1965 1831.81 32.6746 Q1837.84 26.1121 1848.05 26.1121 Q1857.21 26.1121 1862.51 32.0264 Q1867.86 37.9003 1867.86 48.0275 M1860.41 45.84 Q1860.32 39.7232 1856.96 36.0774 Q1853.64 32.4315 1848.13 32.4315 Q1841.89 32.4315 1838.13 35.9558 Q1834.4 39.4801 1833.83 45.8805 L1860.41 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip192)\" style=\"stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"265.903,1123.65 941.26,860.907 1616.62,510.582 2291.97,247.838 \"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"265.903\" y1=\"1123.65\" x2=\"265.903\" y2=\"1107.65\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"265.903\" y1=\"1123.65\" x2=\"249.903\" y2=\"1123.65\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"265.903\" y1=\"1123.65\" x2=\"265.903\" y2=\"1139.65\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"265.903\" y1=\"1123.65\" x2=\"281.903\" y2=\"1123.65\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"941.26\" y1=\"860.907\" x2=\"941.26\" y2=\"844.907\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"941.26\" y1=\"860.907\" x2=\"925.26\" y2=\"860.907\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"941.26\" y1=\"860.907\" x2=\"941.26\" y2=\"876.907\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"941.26\" y1=\"860.907\" x2=\"957.26\" y2=\"860.907\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"1616.62\" y1=\"510.582\" x2=\"1616.62\" y2=\"494.582\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"1616.62\" y1=\"510.582\" x2=\"1600.62\" y2=\"510.582\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"1616.62\" y1=\"510.582\" x2=\"1616.62\" y2=\"526.582\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"1616.62\" y1=\"510.582\" x2=\"1632.62\" y2=\"510.582\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"2291.97\" y1=\"247.838\" x2=\"2291.97\" y2=\"231.838\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"2291.97\" y1=\"247.838\" x2=\"2275.97\" y2=\"247.838\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"2291.97\" y1=\"247.838\" x2=\"2291.97\" y2=\"263.838\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"2291.97\" y1=\"247.838\" x2=\"2307.97\" y2=\"247.838\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#ffa500; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"265.903,1386.4 941.26,1006.88 1616.62,393.807 2291.97,160.256 \"/>\n",
       "<circle clip-path=\"url(#clip192)\" cx=\"265.903\" cy=\"1386.4\" r=\"14.4\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n",
       "<circle clip-path=\"url(#clip192)\" cx=\"941.26\" cy=\"1006.88\" r=\"14.4\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n",
       "<circle clip-path=\"url(#clip192)\" cx=\"1616.62\" cy=\"393.807\" r=\"14.4\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n",
       "<circle clip-path=\"url(#clip192)\" cx=\"2291.97\" cy=\"160.256\" r=\"14.4\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n",
       "<polyline clip-path=\"url(#clip192)\" style=\"stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"265.903,948.489 941.26,656.551 1616.62,598.163 2291.97,189.45 \"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"265.903\" y1=\"948.489\" x2=\"265.903\" y2=\"932.489\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"265.903\" y1=\"948.489\" x2=\"249.903\" y2=\"948.489\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"265.903\" y1=\"948.489\" x2=\"265.903\" y2=\"964.489\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"265.903\" y1=\"948.489\" x2=\"281.903\" y2=\"948.489\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"941.26\" y1=\"656.551\" x2=\"941.26\" y2=\"640.551\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"941.26\" y1=\"656.551\" x2=\"925.26\" y2=\"656.551\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"941.26\" y1=\"656.551\" x2=\"941.26\" y2=\"672.551\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"941.26\" y1=\"656.551\" x2=\"957.26\" y2=\"656.551\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"1616.62\" y1=\"598.163\" x2=\"1616.62\" y2=\"582.163\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"1616.62\" y1=\"598.163\" x2=\"1600.62\" y2=\"598.163\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"1616.62\" y1=\"598.163\" x2=\"1616.62\" y2=\"614.163\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"1616.62\" y1=\"598.163\" x2=\"1632.62\" y2=\"598.163\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"2291.97\" y1=\"189.45\" x2=\"2291.97\" y2=\"173.45\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"2291.97\" y1=\"189.45\" x2=\"2275.97\" y2=\"189.45\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"2291.97\" y1=\"189.45\" x2=\"2291.97\" y2=\"205.45\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip192)\" x1=\"2291.97\" y1=\"189.45\" x2=\"2307.97\" y2=\"189.45\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<path clip-path=\"url(#clip190)\" d=\"M276.709 374.156 L651.981 374.156 L651.981 166.796 L276.709 166.796  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"276.709,374.156 651.981,374.156 651.981,166.796 276.709,166.796 276.709,374.156 \"/>\n",
       "<polyline clip-path=\"url(#clip190)\" style=\"stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"300.571,218.636 443.747,218.636 \"/>\n",
       "<line clip-path=\"url(#clip190)\" x1=\"372.159\" y1=\"218.636\" x2=\"372.159\" y2=\"196.541\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip190)\" x1=\"372.159\" y1=\"218.636\" x2=\"350.064\" y2=\"218.636\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip190)\" x1=\"372.159\" y1=\"218.636\" x2=\"372.159\" y2=\"240.731\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip190)\" x1=\"372.159\" y1=\"218.636\" x2=\"394.254\" y2=\"218.636\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<path clip-path=\"url(#clip190)\" d=\"M467.61 201.356 L473.906 201.356 L489.23 230.268 L489.23 201.356 L493.767 201.356 L493.767 235.916 L487.471 235.916 L472.147 207.004 L472.147 235.916 L467.61 235.916 L467.61 201.356 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M512.934 212.976 Q509.508 212.976 507.517 215.661 Q505.526 218.323 505.526 222.976 Q505.526 227.629 507.494 230.314 Q509.484 232.976 512.934 232.976 Q516.336 232.976 518.327 230.291 Q520.318 227.606 520.318 222.976 Q520.318 218.37 518.327 215.684 Q516.336 212.976 512.934 212.976 M512.934 209.365 Q518.489 209.365 521.66 212.976 Q524.832 216.587 524.832 222.976 Q524.832 229.342 521.66 232.976 Q518.489 236.587 512.934 236.587 Q507.355 236.587 504.184 232.976 Q501.035 229.342 501.035 222.976 Q501.035 216.587 504.184 212.976 Q507.355 209.365 512.934 209.365 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M548.952 213.925 L548.952 199.897 L553.211 199.897 L553.211 235.916 L548.952 235.916 L548.952 232.027 Q547.609 234.342 545.549 235.476 Q543.512 236.587 540.642 236.587 Q535.943 236.587 532.98 232.837 Q530.04 229.087 530.04 222.976 Q530.04 216.865 532.98 213.115 Q535.943 209.365 540.642 209.365 Q543.512 209.365 545.549 210.499 Q547.609 211.61 548.952 213.925 M534.438 222.976 Q534.438 227.675 536.359 230.36 Q538.304 233.022 541.683 233.022 Q545.063 233.022 547.007 230.36 Q548.952 227.675 548.952 222.976 Q548.952 218.277 547.007 215.615 Q545.063 212.93 541.683 212.93 Q538.304 212.93 536.359 215.615 Q534.438 218.277 534.438 222.976 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M584.16 221.888 L584.16 223.971 L564.577 223.971 Q564.855 228.369 567.216 230.684 Q569.6 232.976 573.836 232.976 Q576.29 232.976 578.581 232.374 Q580.896 231.772 583.165 230.569 L583.165 234.596 Q580.873 235.568 578.466 236.078 Q576.058 236.587 573.581 236.587 Q567.378 236.587 563.743 232.976 Q560.132 229.365 560.132 223.207 Q560.132 216.842 563.558 213.115 Q567.007 209.365 572.841 209.365 Q578.072 209.365 581.104 212.745 Q584.16 216.101 584.16 221.888 M579.901 220.638 Q579.854 217.143 577.933 215.059 Q576.035 212.976 572.887 212.976 Q569.322 212.976 567.169 214.99 Q565.04 217.004 564.716 220.661 L579.901 220.638 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M607.632 231.981 L615.271 231.981 L615.271 205.615 L606.961 207.282 L606.961 203.022 L615.225 201.356 L619.901 201.356 L619.901 231.981 L627.539 231.981 L627.539 235.916 L607.632 235.916 L607.632 231.981 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip190)\" style=\"stroke:#ffa500; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"300.571,270.476 443.747,270.476 \"/>\n",
       "<circle clip-path=\"url(#clip190)\" cx=\"372.159\" cy=\"270.476\" r=\"19.8855\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"4.55111\"/>\n",
       "<path clip-path=\"url(#clip190)\" d=\"M467.61 253.196 L473.906 253.196 L489.23 282.108 L489.23 253.196 L493.767 253.196 L493.767 287.756 L487.471 287.756 L472.147 258.844 L472.147 287.756 L467.61 287.756 L467.61 253.196 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M512.934 264.816 Q509.508 264.816 507.517 267.501 Q505.526 270.163 505.526 274.816 Q505.526 279.469 507.494 282.154 Q509.484 284.816 512.934 284.816 Q516.336 284.816 518.327 282.131 Q520.318 279.446 520.318 274.816 Q520.318 270.21 518.327 267.524 Q516.336 264.816 512.934 264.816 M512.934 261.205 Q518.489 261.205 521.66 264.816 Q524.832 268.427 524.832 274.816 Q524.832 281.182 521.66 284.816 Q518.489 288.427 512.934 288.427 Q507.355 288.427 504.184 284.816 Q501.035 281.182 501.035 274.816 Q501.035 268.427 504.184 264.816 Q507.355 261.205 512.934 261.205 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M548.952 265.765 L548.952 251.737 L553.211 251.737 L553.211 287.756 L548.952 287.756 L548.952 283.867 Q547.609 286.182 545.549 287.316 Q543.512 288.427 540.642 288.427 Q535.943 288.427 532.98 284.677 Q530.04 280.927 530.04 274.816 Q530.04 268.705 532.98 264.955 Q535.943 261.205 540.642 261.205 Q543.512 261.205 545.549 262.339 Q547.609 263.45 548.952 265.765 M534.438 274.816 Q534.438 279.515 536.359 282.2 Q538.304 284.862 541.683 284.862 Q545.063 284.862 547.007 282.2 Q548.952 279.515 548.952 274.816 Q548.952 270.117 547.007 267.455 Q545.063 264.77 541.683 264.77 Q538.304 264.77 536.359 267.455 Q534.438 270.117 534.438 274.816 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M584.16 273.728 L584.16 275.811 L564.577 275.811 Q564.855 280.209 567.216 282.524 Q569.6 284.816 573.836 284.816 Q576.29 284.816 578.581 284.214 Q580.896 283.612 583.165 282.409 L583.165 286.436 Q580.873 287.408 578.466 287.918 Q576.058 288.427 573.581 288.427 Q567.378 288.427 563.743 284.816 Q560.132 281.205 560.132 275.047 Q560.132 268.682 563.558 264.955 Q567.007 261.205 572.841 261.205 Q578.072 261.205 581.104 264.585 Q584.16 267.941 584.16 273.728 M579.901 272.478 Q579.854 268.983 577.933 266.899 Q576.035 264.816 572.887 264.816 Q569.322 264.816 567.169 266.83 Q565.04 268.844 564.716 272.501 L579.901 272.478 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M610.85 283.821 L627.169 283.821 L627.169 287.756 L605.225 287.756 L605.225 283.821 Q607.887 281.066 612.47 276.436 Q617.076 271.784 618.257 270.441 Q620.502 267.918 621.382 266.182 Q622.285 264.423 622.285 262.733 Q622.285 259.978 620.34 258.242 Q618.419 256.506 615.317 256.506 Q613.118 256.506 610.664 257.27 Q608.234 258.034 605.456 259.585 L605.456 254.862 Q608.28 253.728 610.734 253.149 Q613.188 252.571 615.225 252.571 Q620.595 252.571 623.789 255.256 Q626.984 257.941 626.984 262.432 Q626.984 264.561 626.174 266.483 Q625.387 268.381 623.28 270.973 Q622.701 271.645 619.6 274.862 Q616.498 278.057 610.85 283.821 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip190)\" style=\"stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"300.571,322.316 443.747,322.316 \"/>\n",
       "<line clip-path=\"url(#clip190)\" x1=\"372.159\" y1=\"322.316\" x2=\"372.159\" y2=\"300.221\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip190)\" x1=\"372.159\" y1=\"322.316\" x2=\"350.064\" y2=\"322.316\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip190)\" x1=\"372.159\" y1=\"322.316\" x2=\"372.159\" y2=\"344.411\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip190)\" x1=\"372.159\" y1=\"322.316\" x2=\"394.254\" y2=\"322.316\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<path clip-path=\"url(#clip190)\" d=\"M467.61 305.036 L473.906 305.036 L489.23 333.948 L489.23 305.036 L493.767 305.036 L493.767 339.596 L487.471 339.596 L472.147 310.684 L472.147 339.596 L467.61 339.596 L467.61 305.036 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M512.934 316.656 Q509.508 316.656 507.517 319.341 Q505.526 322.003 505.526 326.656 Q505.526 331.309 507.494 333.994 Q509.484 336.656 512.934 336.656 Q516.336 336.656 518.327 333.971 Q520.318 331.286 520.318 326.656 Q520.318 322.05 518.327 319.364 Q516.336 316.656 512.934 316.656 M512.934 313.045 Q518.489 313.045 521.66 316.656 Q524.832 320.267 524.832 326.656 Q524.832 333.022 521.66 336.656 Q518.489 340.267 512.934 340.267 Q507.355 340.267 504.184 336.656 Q501.035 333.022 501.035 326.656 Q501.035 320.267 504.184 316.656 Q507.355 313.045 512.934 313.045 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M548.952 317.605 L548.952 303.577 L553.211 303.577 L553.211 339.596 L548.952 339.596 L548.952 335.707 Q547.609 338.022 545.549 339.156 Q543.512 340.267 540.642 340.267 Q535.943 340.267 532.98 336.517 Q530.04 332.767 530.04 326.656 Q530.04 320.545 532.98 316.795 Q535.943 313.045 540.642 313.045 Q543.512 313.045 545.549 314.179 Q547.609 315.29 548.952 317.605 M534.438 326.656 Q534.438 331.355 536.359 334.04 Q538.304 336.702 541.683 336.702 Q545.063 336.702 547.007 334.04 Q548.952 331.355 548.952 326.656 Q548.952 321.957 547.007 319.295 Q545.063 316.61 541.683 316.61 Q538.304 316.61 536.359 319.295 Q534.438 321.957 534.438 326.656 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M584.16 325.568 L584.16 327.651 L564.577 327.651 Q564.855 332.049 567.216 334.364 Q569.6 336.656 573.836 336.656 Q576.29 336.656 578.581 336.054 Q580.896 335.452 583.165 334.249 L583.165 338.276 Q580.873 339.248 578.466 339.758 Q576.058 340.267 573.581 340.267 Q567.378 340.267 563.743 336.656 Q560.132 333.045 560.132 326.887 Q560.132 320.522 563.558 316.795 Q567.007 313.045 572.841 313.045 Q578.072 313.045 581.104 316.425 Q584.16 319.781 584.16 325.568 M579.901 324.318 Q579.854 320.823 577.933 318.739 Q576.035 316.656 572.887 316.656 Q569.322 316.656 567.169 318.67 Q565.04 320.684 564.716 324.341 L579.901 324.318 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M620.988 320.962 Q624.345 321.679 626.22 323.948 Q628.118 326.216 628.118 329.549 Q628.118 334.665 624.6 337.466 Q621.081 340.267 614.6 340.267 Q612.424 340.267 610.109 339.827 Q607.817 339.411 605.364 338.554 L605.364 334.04 Q607.308 335.174 609.623 335.753 Q611.938 336.332 614.461 336.332 Q618.859 336.332 621.151 334.596 Q623.465 332.86 623.465 329.549 Q623.465 326.494 621.313 324.781 Q619.183 323.045 615.364 323.045 L611.336 323.045 L611.336 319.202 L615.549 319.202 Q618.998 319.202 620.826 317.837 Q622.655 316.448 622.655 313.855 Q622.655 311.193 620.757 309.781 Q618.882 308.346 615.364 308.346 Q613.442 308.346 611.243 308.763 Q609.044 309.179 606.405 310.059 L606.405 305.892 Q609.067 305.151 611.382 304.781 Q613.72 304.411 615.78 304.411 Q621.104 304.411 624.206 306.841 Q627.308 309.249 627.308 313.369 Q627.308 316.239 625.664 318.23 Q624.021 320.198 620.988 320.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n",
       "<defs>\n",
       "  <clipPath id=\"clip240\">\n",
       "    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<path clip-path=\"url(#clip240)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<defs>\n",
       "  <clipPath id=\"clip241\">\n",
       "    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<path clip-path=\"url(#clip240)\" d=\"M205.121 1423.18 L2352.76 1423.18 L2352.76 123.472 L205.121 123.472  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<defs>\n",
       "  <clipPath id=\"clip242\">\n",
       "    <rect x=\"205\" y=\"123\" width=\"2149\" height=\"1301\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"265.903,1423.18 265.903,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"941.26,1423.18 941.26,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1616.62,1423.18 1616.62,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2291.97,1423.18 2291.97,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,1423.18 2352.76,1423.18 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"265.903,1423.18 265.903,1404.28 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"941.26,1423.18 941.26,1404.28 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1616.62,1423.18 1616.62,1404.28 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2291.97,1423.18 2291.97,1404.28 \"/>\n",
       "<path clip-path=\"url(#clip240)\" d=\"M244.676 1481.64 L260.996 1481.64 L260.996 1485.58 L239.051 1485.58 L239.051 1481.64 Q241.713 1478.89 246.297 1474.26 Q250.903 1469.61 252.084 1468.27 Q254.329 1465.74 255.209 1464.01 Q256.111 1462.25 256.111 1460.56 Q256.111 1457.8 254.167 1456.07 Q252.246 1454.33 249.144 1454.33 Q246.945 1454.33 244.491 1455.09 Q242.061 1455.86 239.283 1457.41 L239.283 1452.69 Q242.107 1451.55 244.561 1450.97 Q247.014 1450.39 249.051 1450.39 Q254.422 1450.39 257.616 1453.08 Q260.811 1455.77 260.811 1460.26 Q260.811 1462.39 260 1464.31 Q259.213 1466.2 257.107 1468.8 Q256.528 1469.47 253.426 1472.69 Q250.324 1475.88 244.676 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M280.81 1454.1 Q277.199 1454.1 275.371 1457.66 Q273.565 1461.2 273.565 1468.33 Q273.565 1475.44 275.371 1479.01 Q277.199 1482.55 280.81 1482.55 Q284.445 1482.55 286.25 1479.01 Q288.079 1475.44 288.079 1468.33 Q288.079 1461.2 286.25 1457.66 Q284.445 1454.1 280.81 1454.1 M280.81 1450.39 Q286.621 1450.39 289.676 1455 Q292.755 1459.58 292.755 1468.33 Q292.755 1477.06 289.676 1481.67 Q286.621 1486.25 280.81 1486.25 Q275 1486.25 271.922 1481.67 Q268.866 1477.06 268.866 1468.33 Q268.866 1459.58 271.922 1455 Q275 1450.39 280.81 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M878.633 1481.64 L894.952 1481.64 L894.952 1485.58 L873.008 1485.58 L873.008 1481.64 Q875.67 1478.89 880.253 1474.26 Q884.86 1469.61 886.04 1468.27 Q888.286 1465.74 889.165 1464.01 Q890.068 1462.25 890.068 1460.56 Q890.068 1457.8 888.124 1456.07 Q886.202 1454.33 883.101 1454.33 Q880.902 1454.33 878.448 1455.09 Q876.017 1455.86 873.24 1457.41 L873.24 1452.69 Q876.064 1451.55 878.517 1450.97 Q880.971 1450.39 883.008 1450.39 Q888.378 1450.39 891.573 1453.08 Q894.767 1455.77 894.767 1460.26 Q894.767 1462.39 893.957 1464.31 Q893.17 1466.2 891.064 1468.8 Q890.485 1469.47 887.383 1472.69 Q884.281 1475.88 878.633 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M914.767 1454.1 Q911.156 1454.1 909.327 1457.66 Q907.522 1461.2 907.522 1468.33 Q907.522 1475.44 909.327 1479.01 Q911.156 1482.55 914.767 1482.55 Q918.401 1482.55 920.207 1479.01 Q922.036 1475.44 922.036 1468.33 Q922.036 1461.2 920.207 1457.66 Q918.401 1454.1 914.767 1454.1 M914.767 1450.39 Q920.577 1450.39 923.633 1455 Q926.711 1459.58 926.711 1468.33 Q926.711 1477.06 923.633 1481.67 Q920.577 1486.25 914.767 1486.25 Q908.957 1486.25 905.878 1481.67 Q902.823 1477.06 902.823 1468.33 Q902.823 1459.58 905.878 1455 Q908.957 1450.39 914.767 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M954.026 1493.45 L954.026 1496.76 L929.397 1496.76 L929.397 1493.45 L954.026 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M962.66 1481.64 L978.98 1481.64 L978.98 1485.58 L957.035 1485.58 L957.035 1481.64 Q959.697 1478.89 964.281 1474.26 Q968.887 1469.61 970.068 1468.27 Q972.313 1465.74 973.193 1464.01 Q974.095 1462.25 974.095 1460.56 Q974.095 1457.8 972.151 1456.07 Q970.23 1454.33 967.128 1454.33 Q964.929 1454.33 962.475 1455.09 Q960.045 1455.86 957.267 1457.41 L957.267 1452.69 Q960.091 1451.55 962.545 1450.97 Q964.998 1450.39 967.035 1450.39 Q972.406 1450.39 975.6 1453.08 Q978.795 1455.77 978.795 1460.26 Q978.795 1462.39 977.984 1464.31 Q977.197 1466.2 975.091 1468.8 Q974.512 1469.47 971.41 1472.69 Q968.308 1475.88 962.66 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M989.605 1481.64 L997.243 1481.64 L997.243 1455.28 L988.933 1456.95 L988.933 1452.69 L997.197 1451.02 L1001.87 1451.02 L1001.87 1481.64 L1009.51 1481.64 L1009.51 1485.58 L989.605 1485.58 L989.605 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1512.16 1481.64 L1528.48 1481.64 L1528.48 1485.58 L1506.54 1485.58 L1506.54 1481.64 Q1509.2 1478.89 1513.78 1474.26 Q1518.39 1469.61 1519.57 1468.27 Q1521.81 1465.74 1522.69 1464.01 Q1523.6 1462.25 1523.6 1460.56 Q1523.6 1457.8 1521.65 1456.07 Q1519.73 1454.33 1516.63 1454.33 Q1514.43 1454.33 1511.98 1455.09 Q1509.55 1455.86 1506.77 1457.41 L1506.77 1452.69 Q1509.59 1451.55 1512.05 1450.97 Q1514.5 1450.39 1516.54 1450.39 Q1521.91 1450.39 1525.1 1453.08 Q1528.3 1455.77 1528.3 1460.26 Q1528.3 1462.39 1527.49 1464.31 Q1526.7 1466.2 1524.59 1468.8 Q1524.01 1469.47 1520.91 1472.69 Q1517.81 1475.88 1512.16 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1548.3 1454.1 Q1544.68 1454.1 1542.86 1457.66 Q1541.05 1461.2 1541.05 1468.33 Q1541.05 1475.44 1542.86 1479.01 Q1544.68 1482.55 1548.3 1482.55 Q1551.93 1482.55 1553.74 1479.01 Q1555.56 1475.44 1555.56 1468.33 Q1555.56 1461.2 1553.74 1457.66 Q1551.93 1454.1 1548.3 1454.1 M1548.3 1450.39 Q1554.11 1450.39 1557.16 1455 Q1560.24 1459.58 1560.24 1468.33 Q1560.24 1477.06 1557.16 1481.67 Q1554.11 1486.25 1548.3 1486.25 Q1542.49 1486.25 1539.41 1481.67 Q1536.35 1477.06 1536.35 1468.33 Q1536.35 1459.58 1539.41 1455 Q1542.49 1450.39 1548.3 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1587.55 1493.45 L1587.55 1496.76 L1562.93 1496.76 L1562.93 1493.45 L1587.55 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1596.19 1481.64 L1612.51 1481.64 L1612.51 1485.58 L1590.56 1485.58 L1590.56 1481.64 Q1593.23 1478.89 1597.81 1474.26 Q1602.42 1469.61 1603.6 1468.27 Q1605.84 1465.74 1606.72 1464.01 Q1607.62 1462.25 1607.62 1460.56 Q1607.62 1457.8 1605.68 1456.07 Q1603.76 1454.33 1600.66 1454.33 Q1598.46 1454.33 1596 1455.09 Q1593.57 1455.86 1590.8 1457.41 L1590.8 1452.69 Q1593.62 1451.55 1596.07 1450.97 Q1598.53 1450.39 1600.56 1450.39 Q1605.93 1450.39 1609.13 1453.08 Q1612.32 1455.77 1612.32 1460.26 Q1612.32 1462.39 1611.51 1464.31 Q1610.73 1466.2 1608.62 1468.8 Q1608.04 1469.47 1604.94 1472.69 Q1601.84 1475.88 1596.19 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1623.13 1481.64 L1630.77 1481.64 L1630.77 1455.28 L1622.46 1456.95 L1622.46 1452.69 L1630.73 1451.02 L1635.4 1451.02 L1635.4 1481.64 L1643.04 1481.64 L1643.04 1485.58 L1623.13 1485.58 L1623.13 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1671.58 1493.45 L1671.58 1496.76 L1646.95 1496.76 L1646.95 1493.45 L1671.58 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1680.22 1481.64 L1696.54 1481.64 L1696.54 1485.58 L1674.59 1485.58 L1674.59 1481.64 Q1677.25 1478.89 1681.84 1474.26 Q1686.44 1469.61 1687.62 1468.27 Q1689.87 1465.74 1690.75 1464.01 Q1691.65 1462.25 1691.65 1460.56 Q1691.65 1457.8 1689.71 1456.07 Q1687.79 1454.33 1684.68 1454.33 Q1682.48 1454.33 1680.03 1455.09 Q1677.6 1455.86 1674.82 1457.41 L1674.82 1452.69 Q1677.65 1451.55 1680.1 1450.97 Q1682.55 1450.39 1684.59 1450.39 Q1689.96 1450.39 1693.16 1453.08 Q1696.35 1455.77 1696.35 1460.26 Q1696.35 1462.39 1695.54 1464.31 Q1694.75 1466.2 1692.65 1468.8 Q1692.07 1469.47 1688.97 1472.69 Q1685.86 1475.88 1680.22 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1710.38 1481.64 L1726.7 1481.64 L1726.7 1485.58 L1704.75 1485.58 L1704.75 1481.64 Q1707.42 1478.89 1712 1474.26 Q1716.6 1469.61 1717.79 1468.27 Q1720.03 1465.74 1720.91 1464.01 Q1721.81 1462.25 1721.81 1460.56 Q1721.81 1457.8 1719.87 1456.07 Q1717.95 1454.33 1714.85 1454.33 Q1712.65 1454.33 1710.19 1455.09 Q1707.76 1455.86 1704.98 1457.41 L1704.98 1452.69 Q1707.81 1451.55 1710.26 1450.97 Q1712.72 1450.39 1714.75 1450.39 Q1720.12 1450.39 1723.32 1453.08 Q1726.51 1455.77 1726.51 1460.26 Q1726.51 1462.39 1725.7 1464.31 Q1724.91 1466.2 1722.81 1468.8 Q1722.23 1469.47 1719.13 1472.69 Q1716.03 1475.88 1710.38 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2145.03 1481.64 L2161.35 1481.64 L2161.35 1485.58 L2139.41 1485.58 L2139.41 1481.64 Q2142.07 1478.89 2146.65 1474.26 Q2151.26 1469.61 2152.44 1468.27 Q2154.68 1465.74 2155.56 1464.01 Q2156.47 1462.25 2156.47 1460.56 Q2156.47 1457.8 2154.52 1456.07 Q2152.6 1454.33 2149.5 1454.33 Q2147.3 1454.33 2144.84 1455.09 Q2142.41 1455.86 2139.64 1457.41 L2139.64 1452.69 Q2142.46 1451.55 2144.91 1450.97 Q2147.37 1450.39 2149.41 1450.39 Q2154.78 1450.39 2157.97 1453.08 Q2161.16 1455.77 2161.16 1460.26 Q2161.16 1462.39 2160.35 1464.31 Q2159.57 1466.2 2157.46 1468.8 Q2156.88 1469.47 2153.78 1472.69 Q2150.68 1475.88 2145.03 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2181.16 1454.1 Q2177.55 1454.1 2175.72 1457.66 Q2173.92 1461.2 2173.92 1468.33 Q2173.92 1475.44 2175.72 1479.01 Q2177.55 1482.55 2181.16 1482.55 Q2184.8 1482.55 2186.6 1479.01 Q2188.43 1475.44 2188.43 1468.33 Q2188.43 1461.2 2186.6 1457.66 Q2184.8 1454.1 2181.16 1454.1 M2181.16 1450.39 Q2186.97 1450.39 2190.03 1455 Q2193.11 1459.58 2193.11 1468.33 Q2193.11 1477.06 2190.03 1481.67 Q2186.97 1486.25 2181.16 1486.25 Q2175.35 1486.25 2172.28 1481.67 Q2169.22 1477.06 2169.22 1468.33 Q2169.22 1459.58 2172.28 1455 Q2175.35 1450.39 2181.16 1450.39 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2220.42 1493.45 L2220.42 1496.76 L2195.79 1496.76 L2195.79 1493.45 L2220.42 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2229.06 1481.64 L2245.38 1481.64 L2245.38 1485.58 L2223.43 1485.58 L2223.43 1481.64 Q2226.09 1478.89 2230.68 1474.26 Q2235.28 1469.61 2236.46 1468.27 Q2238.71 1465.74 2239.59 1464.01 Q2240.49 1462.25 2240.49 1460.56 Q2240.49 1457.8 2238.55 1456.07 Q2236.63 1454.33 2233.53 1454.33 Q2231.33 1454.33 2228.87 1455.09 Q2226.44 1455.86 2223.66 1457.41 L2223.66 1452.69 Q2226.49 1451.55 2228.94 1450.97 Q2231.4 1450.39 2233.43 1450.39 Q2238.8 1450.39 2242 1453.08 Q2245.19 1455.77 2245.19 1460.26 Q2245.19 1462.39 2244.38 1464.31 Q2243.59 1466.2 2241.49 1468.8 Q2240.91 1469.47 2237.81 1472.69 Q2234.71 1475.88 2229.06 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2256 1481.64 L2263.64 1481.64 L2263.64 1455.28 L2255.33 1456.95 L2255.33 1452.69 L2263.59 1451.02 L2268.27 1451.02 L2268.27 1481.64 L2275.91 1481.64 L2275.91 1485.58 L2256 1485.58 L2256 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2304.45 1493.45 L2304.45 1496.76 L2279.82 1496.76 L2279.82 1493.45 L2304.45 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2313.08 1481.64 L2329.4 1481.64 L2329.4 1485.58 L2307.46 1485.58 L2307.46 1481.64 Q2310.12 1478.89 2314.71 1474.26 Q2319.31 1469.61 2320.49 1468.27 Q2322.74 1465.74 2323.62 1464.01 Q2324.52 1462.25 2324.52 1460.56 Q2324.52 1457.8 2322.58 1456.07 Q2320.65 1454.33 2317.55 1454.33 Q2315.35 1454.33 2312.9 1455.09 Q2310.47 1455.86 2307.69 1457.41 L2307.69 1452.69 Q2310.52 1451.55 2312.97 1450.97 Q2315.42 1450.39 2317.46 1450.39 Q2322.83 1450.39 2326.02 1453.08 Q2329.22 1455.77 2329.22 1460.26 Q2329.22 1462.39 2328.41 1464.31 Q2327.62 1466.2 2325.52 1468.8 Q2324.94 1469.47 2321.83 1472.69 Q2318.73 1475.88 2313.08 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2343.25 1481.64 L2359.57 1481.64 L2359.57 1485.58 L2337.62 1485.58 L2337.62 1481.64 Q2340.28 1478.89 2344.87 1474.26 Q2349.47 1469.61 2350.65 1468.27 Q2352.9 1465.74 2353.78 1464.01 Q2354.68 1462.25 2354.68 1460.56 Q2354.68 1457.8 2352.74 1456.07 Q2350.82 1454.33 2347.71 1454.33 Q2345.52 1454.33 2343.06 1455.09 Q2340.63 1455.86 2337.85 1457.41 L2337.85 1452.69 Q2340.68 1451.55 2343.13 1450.97 Q2345.58 1450.39 2347.62 1450.39 Q2352.99 1450.39 2356.19 1453.08 Q2359.38 1455.77 2359.38 1460.26 Q2359.38 1462.39 2358.57 1464.31 Q2357.78 1466.2 2355.68 1468.8 Q2355.1 1469.47 2352 1472.69 Q2348.89 1475.88 2343.25 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2388.48 1493.45 L2388.48 1496.76 L2363.85 1496.76 L2363.85 1493.45 L2388.48 1493.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2397.11 1481.64 L2413.43 1481.64 L2413.43 1485.58 L2391.49 1485.58 L2391.49 1481.64 Q2394.15 1478.89 2398.73 1474.26 Q2403.34 1469.61 2404.52 1468.27 Q2406.76 1465.74 2407.64 1464.01 Q2408.55 1462.25 2408.55 1460.56 Q2408.55 1457.8 2406.6 1456.07 Q2404.68 1454.33 2401.58 1454.33 Q2399.38 1454.33 2396.93 1455.09 Q2394.5 1455.86 2391.72 1457.41 L2391.72 1452.69 Q2394.54 1451.55 2397 1450.97 Q2399.45 1450.39 2401.49 1450.39 Q2406.86 1450.39 2410.05 1453.08 Q2413.25 1455.77 2413.25 1460.26 Q2413.25 1462.39 2412.44 1464.31 Q2411.65 1466.2 2409.54 1468.8 Q2408.96 1469.47 2405.86 1472.69 Q2402.76 1475.88 2397.11 1481.64 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M2437.41 1466.95 Q2440.77 1467.66 2442.64 1469.93 Q2444.54 1472.2 2444.54 1475.53 Q2444.54 1480.65 2441.02 1483.45 Q2437.51 1486.25 2431.02 1486.25 Q2428.85 1486.25 2426.53 1485.81 Q2424.24 1485.39 2421.79 1484.54 L2421.79 1480.02 Q2423.73 1481.16 2426.05 1481.74 Q2428.36 1482.32 2430.89 1482.32 Q2435.28 1482.32 2437.57 1480.58 Q2439.89 1478.84 2439.89 1475.53 Q2439.89 1472.48 2437.74 1470.77 Q2435.61 1469.03 2431.79 1469.03 L2427.76 1469.03 L2427.76 1465.19 L2431.97 1465.19 Q2435.42 1465.19 2437.25 1463.82 Q2439.08 1462.43 2439.08 1459.84 Q2439.08 1457.18 2437.18 1455.77 Q2435.31 1454.33 2431.79 1454.33 Q2429.87 1454.33 2427.67 1454.75 Q2425.47 1455.16 2422.83 1456.04 L2422.83 1451.88 Q2425.49 1451.14 2427.81 1450.77 Q2430.14 1450.39 2432.2 1450.39 Q2437.53 1450.39 2440.63 1452.83 Q2443.73 1455.23 2443.73 1459.35 Q2443.73 1462.22 2442.09 1464.21 Q2440.45 1466.18 2437.41 1466.95 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1209.87 1520.52 L1216.78 1520.52 L1229.95 1540.07 L1243.04 1520.52 L1249.94 1520.52 L1233.14 1545.41 L1233.14 1568.04 L1226.68 1568.04 L1226.68 1545.41 L1209.87 1520.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1277.79 1548.76 L1277.79 1551.62 L1250.87 1551.62 Q1251.25 1557.67 1254.49 1560.85 Q1257.77 1564 1263.6 1564 Q1266.97 1564 1270.12 1563.17 Q1273.3 1562.35 1276.42 1560.69 L1276.42 1566.23 Q1273.27 1567.57 1269.96 1568.27 Q1266.65 1568.97 1263.25 1568.97 Q1254.72 1568.97 1249.72 1564 Q1244.75 1559.04 1244.75 1550.57 Q1244.75 1541.82 1249.47 1536.69 Q1254.21 1531.54 1262.23 1531.54 Q1269.42 1531.54 1273.59 1536.18 Q1277.79 1540.8 1277.79 1548.76 M1271.94 1547.04 Q1271.87 1542.23 1269.23 1539.37 Q1266.62 1536.5 1262.29 1536.5 Q1257.39 1536.5 1254.43 1539.27 Q1251.5 1542.04 1251.06 1547.07 L1271.94 1547.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1303.61 1550.12 Q1296.51 1550.12 1293.77 1551.75 Q1291.03 1553.37 1291.03 1557.29 Q1291.03 1560.4 1293.07 1562.25 Q1295.14 1564.07 1298.67 1564.07 Q1303.54 1564.07 1306.47 1560.63 Q1309.43 1557.16 1309.43 1551.43 L1309.43 1550.12 L1303.61 1550.12 M1315.29 1547.71 L1315.29 1568.04 L1309.43 1568.04 L1309.43 1562.63 Q1307.42 1565.88 1304.43 1567.44 Q1301.44 1568.97 1297.11 1568.97 Q1291.64 1568.97 1288.39 1565.91 Q1285.18 1562.82 1285.18 1557.67 Q1285.18 1551.65 1289.19 1548.6 Q1293.23 1545.54 1301.22 1545.54 L1309.43 1545.54 L1309.43 1544.97 Q1309.43 1540.93 1306.76 1538.73 Q1304.11 1536.5 1299.31 1536.5 Q1296.25 1536.5 1293.36 1537.23 Q1290.46 1537.97 1287.79 1539.43 L1287.79 1534.02 Q1291 1532.78 1294.03 1532.17 Q1297.05 1531.54 1299.91 1531.54 Q1307.65 1531.54 1311.47 1535.55 Q1315.29 1539.56 1315.29 1547.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1348.01 1537.87 Q1347.02 1537.3 1345.84 1537.04 Q1344.7 1536.76 1343.3 1536.76 Q1338.33 1536.76 1335.66 1540 Q1333.02 1543.22 1333.02 1549.27 L1333.02 1568.04 L1327.13 1568.04 L1327.13 1532.4 L1333.02 1532.4 L1333.02 1537.93 Q1334.86 1534.69 1337.82 1533.13 Q1340.78 1531.54 1345.01 1531.54 Q1345.62 1531.54 1346.35 1531.63 Q1347.08 1531.7 1347.97 1531.85 L1348.01 1537.87 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,1386.4 2352.76,1386.4 \"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,1094.46 2352.76,1094.46 \"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,802.52 2352.76,802.52 \"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,510.582 2352.76,510.582 \"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"205.121,218.644 2352.76,218.644 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,1423.18 205.121,123.472 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,1386.4 224.019,1386.4 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,1094.46 224.019,1094.46 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,802.52 224.019,802.52 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,510.582 224.019,510.582 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"205.121,218.644 224.019,218.644 \"/>\n",
       "<path clip-path=\"url(#clip240)\" d=\"M157.177 1372.19 Q153.566 1372.19 151.737 1375.76 Q149.931 1379.3 149.931 1386.43 Q149.931 1393.54 151.737 1397.1 Q153.566 1400.64 157.177 1400.64 Q160.811 1400.64 162.616 1397.1 Q164.445 1393.54 164.445 1386.43 Q164.445 1379.3 162.616 1375.76 Q160.811 1372.19 157.177 1372.19 M157.177 1368.49 Q162.987 1368.49 166.042 1373.1 Q169.121 1377.68 169.121 1386.43 Q169.121 1395.16 166.042 1399.76 Q162.987 1404.35 157.177 1404.35 Q151.366 1404.35 148.288 1399.76 Q145.232 1395.16 145.232 1386.43 Q145.232 1377.68 148.288 1373.1 Q151.366 1368.49 157.177 1368.49 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M117.825 1107.8 L125.464 1107.8 L125.464 1081.44 L117.154 1083.1 L117.154 1078.84 L125.418 1077.18 L130.093 1077.18 L130.093 1107.8 L137.732 1107.8 L137.732 1111.74 L117.825 1111.74 L117.825 1107.8 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M157.177 1080.26 Q153.566 1080.26 151.737 1083.82 Q149.931 1087.36 149.931 1094.49 Q149.931 1101.6 151.737 1105.16 Q153.566 1108.71 157.177 1108.71 Q160.811 1108.71 162.616 1105.16 Q164.445 1101.6 164.445 1094.49 Q164.445 1087.36 162.616 1083.82 Q160.811 1080.26 157.177 1080.26 M157.177 1076.55 Q162.987 1076.55 166.042 1081.16 Q169.121 1085.74 169.121 1094.49 Q169.121 1103.22 166.042 1107.83 Q162.987 1112.41 157.177 1112.41 Q151.366 1112.41 148.288 1107.83 Q145.232 1103.22 145.232 1094.49 Q145.232 1085.74 148.288 1081.16 Q151.366 1076.55 157.177 1076.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M121.043 815.865 L137.362 815.865 L137.362 819.8 L115.418 819.8 L115.418 815.865 Q118.08 813.11 122.663 808.48 Q127.269 803.828 128.45 802.485 Q130.695 799.962 131.575 798.226 Q132.478 796.467 132.478 794.777 Q132.478 792.022 130.533 790.286 Q128.612 788.55 125.51 788.55 Q123.311 788.55 120.857 789.314 Q118.427 790.078 115.649 791.629 L115.649 786.906 Q118.473 785.772 120.927 785.193 Q123.38 784.615 125.418 784.615 Q130.788 784.615 133.982 787.3 Q137.177 789.985 137.177 794.476 Q137.177 796.605 136.367 798.527 Q135.579 800.425 133.473 803.017 Q132.894 803.689 129.792 806.906 Q126.691 810.101 121.043 815.865 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M157.177 788.318 Q153.566 788.318 151.737 791.883 Q149.931 795.425 149.931 802.555 Q149.931 809.661 151.737 813.226 Q153.566 816.767 157.177 816.767 Q160.811 816.767 162.616 813.226 Q164.445 809.661 164.445 802.555 Q164.445 795.425 162.616 791.883 Q160.811 788.318 157.177 788.318 M157.177 784.615 Q162.987 784.615 166.042 789.221 Q169.121 793.805 169.121 802.555 Q169.121 811.281 166.042 815.888 Q162.987 820.471 157.177 820.471 Q151.366 820.471 148.288 815.888 Q145.232 811.281 145.232 802.555 Q145.232 793.805 148.288 789.221 Q151.366 784.615 157.177 784.615 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M131.181 509.228 Q134.538 509.945 136.413 512.214 Q138.311 514.482 138.311 517.816 Q138.311 522.931 134.792 525.732 Q131.274 528.533 124.793 528.533 Q122.617 528.533 120.302 528.093 Q118.01 527.677 115.556 526.82 L115.556 522.306 Q117.501 523.441 119.816 524.019 Q122.13 524.598 124.654 524.598 Q129.052 524.598 131.343 522.862 Q133.658 521.126 133.658 517.816 Q133.658 514.76 131.505 513.047 Q129.376 511.311 125.556 511.311 L121.529 511.311 L121.529 507.468 L125.742 507.468 Q129.191 507.468 131.019 506.103 Q132.848 504.714 132.848 502.121 Q132.848 499.459 130.95 498.047 Q129.075 496.612 125.556 496.612 Q123.635 496.612 121.436 497.029 Q119.237 497.445 116.598 498.325 L116.598 494.158 Q119.26 493.418 121.575 493.047 Q123.913 492.677 125.973 492.677 Q131.297 492.677 134.399 495.107 Q137.501 497.515 137.501 501.635 Q137.501 504.505 135.857 506.496 Q134.214 508.464 131.181 509.228 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M157.177 496.381 Q153.566 496.381 151.737 499.945 Q149.931 503.487 149.931 510.617 Q149.931 517.723 151.737 521.288 Q153.566 524.829 157.177 524.829 Q160.811 524.829 162.616 521.288 Q164.445 517.723 164.445 510.617 Q164.445 503.487 162.616 499.945 Q160.811 496.381 157.177 496.381 M157.177 492.677 Q162.987 492.677 166.042 497.283 Q169.121 501.867 169.121 510.617 Q169.121 519.343 166.042 523.95 Q162.987 528.533 157.177 528.533 Q151.366 528.533 148.288 523.95 Q145.232 519.343 145.232 510.617 Q145.232 501.867 148.288 497.283 Q151.366 492.677 157.177 492.677 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M129.862 205.438 L118.056 223.887 L129.862 223.887 L129.862 205.438 M128.635 201.364 L134.515 201.364 L134.515 223.887 L139.445 223.887 L139.445 227.776 L134.515 227.776 L134.515 235.924 L129.862 235.924 L129.862 227.776 L114.26 227.776 L114.26 223.262 L128.635 201.364 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M157.177 204.443 Q153.566 204.443 151.737 208.007 Q149.931 211.549 149.931 218.679 Q149.931 225.785 151.737 229.35 Q153.566 232.892 157.177 232.892 Q160.811 232.892 162.616 229.35 Q164.445 225.785 164.445 218.679 Q164.445 211.549 162.616 208.007 Q160.811 204.443 157.177 204.443 M157.177 200.739 Q162.987 200.739 166.042 205.345 Q169.121 209.929 169.121 218.679 Q169.121 227.405 166.042 232.012 Q162.987 236.595 157.177 236.595 Q151.366 236.595 148.288 232.012 Q145.232 227.405 145.232 218.679 Q145.232 209.929 148.288 205.345 Q151.366 200.739 157.177 200.739 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M21.7677 1051.51 L58.7206 1051.51 L58.7206 1043.74 Q58.7206 1033.91 54.2646 1029.35 Q49.8086 1024.77 40.1964 1024.77 Q30.6479 1024.77 26.2237 1029.35 Q21.7677 1033.91 21.7677 1043.74 L21.7677 1051.51 M16.4842 1057.94 L16.4842 1044.73 Q16.4842 1030.91 22.2451 1024.45 Q27.9743 1017.99 40.1964 1017.99 Q52.4822 1017.99 58.2432 1024.48 Q64.0042 1030.98 64.0042 1044.73 L64.0042 1057.94 L16.4842 1057.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M44.7161 977.506 L47.5806 977.506 L47.5806 1004.43 Q53.6281 1004.05 56.8109 1000.8 Q59.9619 997.526 59.9619 991.702 Q59.9619 988.328 59.1344 985.177 Q58.3069 981.994 56.6518 978.875 L62.1899 978.875 Q63.5267 982.026 64.227 985.336 Q64.9272 988.646 64.9272 992.052 Q64.9272 1000.58 59.9619 1005.58 Q54.9967 1010.54 46.5303 1010.54 Q37.7774 1010.54 32.6531 1005.83 Q27.4968 1001.09 27.4968 993.07 Q27.4968 985.877 32.1438 981.707 Q36.7589 977.506 44.7161 977.506 M42.9973 983.362 Q38.1912 983.426 35.3266 986.068 Q32.4621 988.678 32.4621 993.007 Q32.4621 997.908 35.2312 1000.87 Q38.0002 1003.8 43.0292 1004.24 L42.9973 983.362 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M45.7664 944.436 Q39.4007 944.436 35.8996 947.078 Q32.3984 949.688 32.3984 954.43 Q32.3984 959.141 35.8996 961.783 Q39.4007 964.393 45.7664 964.393 Q52.1003 964.393 55.6014 961.783 Q59.1026 959.141 59.1026 954.43 Q59.1026 949.688 55.6014 947.078 Q52.1003 944.436 45.7664 944.436 M59.58 938.58 Q68.683 938.58 73.1071 942.622 Q77.5631 946.664 77.5631 955.003 Q77.5631 958.091 77.0857 960.828 Q76.6401 963.565 75.6852 966.143 L69.9879 966.143 Q71.3884 963.565 72.0568 961.051 Q72.7252 958.536 72.7252 955.926 Q72.7252 950.165 69.7015 947.301 Q66.7096 944.436 60.6303 944.436 L57.7339 944.436 Q60.885 946.25 62.4446 949.083 Q64.0042 951.916 64.0042 955.863 Q64.0042 962.419 59.0071 966.43 Q54.01 970.44 45.7664 970.44 Q37.491 970.44 32.4939 966.43 Q27.4968 962.419 27.4968 955.863 Q27.4968 951.916 29.0564 949.083 Q30.616 946.25 33.7671 944.436 L28.3562 944.436 L28.3562 938.58 L59.58 938.58 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M33.8307 905.86 Q33.2578 906.847 33.0032 908.024 Q32.7167 909.17 32.7167 910.571 Q32.7167 915.536 35.9632 918.209 Q39.1779 920.851 45.2253 920.851 L64.0042 920.851 L64.0042 926.74 L28.3562 926.74 L28.3562 920.851 L33.8944 920.851 Q30.6479 919.005 29.0883 916.045 Q27.4968 913.085 27.4968 908.852 Q27.4968 908.247 27.5923 907.515 Q27.656 906.783 27.8151 905.892 L33.8307 905.86 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M44.7161 870.658 L47.5806 870.658 L47.5806 897.585 Q53.6281 897.203 56.8109 893.956 Q59.9619 890.678 59.9619 884.853 Q59.9619 881.479 59.1344 878.328 Q58.3069 875.145 56.6518 872.026 L62.1899 872.026 Q63.5267 875.177 64.227 878.487 Q64.9272 881.798 64.9272 885.203 Q64.9272 893.733 59.9619 898.73 Q54.9967 903.696 46.5303 903.696 Q37.7774 903.696 32.6531 898.985 Q27.4968 894.243 27.4968 886.222 Q27.4968 879.029 32.1438 874.859 Q36.7589 870.658 44.7161 870.658 M42.9973 876.514 Q38.1912 876.578 35.3266 879.22 Q32.4621 881.829 32.4621 886.158 Q32.4621 891.06 35.2312 894.02 Q38.0002 896.948 43.0292 897.394 L42.9973 876.514 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M44.7161 830.554 L47.5806 830.554 L47.5806 857.481 Q53.6281 857.099 56.8109 853.852 Q59.9619 850.574 59.9619 844.749 Q59.9619 841.375 59.1344 838.224 Q58.3069 835.042 56.6518 831.922 L62.1899 831.922 Q63.5267 835.073 64.227 838.384 Q64.9272 841.694 64.9272 845.099 Q64.9272 853.629 59.9619 858.626 Q54.9967 863.592 46.5303 863.592 Q37.7774 863.592 32.6531 858.881 Q27.4968 854.139 27.4968 846.118 Q27.4968 838.925 32.1438 834.755 Q36.7589 830.554 44.7161 830.554 M42.9973 836.41 Q38.1912 836.474 35.3266 839.116 Q32.4621 841.726 32.4621 846.054 Q32.4621 850.956 35.2312 853.916 Q38.0002 856.844 43.0292 857.29 L42.9973 836.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M20.1444 764.382 L26.9239 764.382 Q23.9002 767.629 22.4043 771.321 Q20.9083 774.981 20.9083 779.119 Q20.9083 787.267 25.9054 791.596 Q30.8707 795.924 40.2919 795.924 Q49.6813 795.924 54.6784 791.596 Q59.6436 787.267 59.6436 779.119 Q59.6436 774.981 58.1477 771.321 Q56.6518 767.629 53.6281 764.382 L60.3439 764.382 Q62.6355 767.756 63.7814 771.544 Q64.9272 775.299 64.9272 779.501 Q64.9272 790.291 58.3387 796.497 Q51.7183 802.704 40.2919 802.704 Q28.8336 802.704 22.2451 796.497 Q15.6248 790.291 15.6248 779.501 Q15.6248 775.236 16.7706 771.48 Q17.8846 767.692 20.1444 764.382 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M44.7161 724.215 L47.5806 724.215 L47.5806 751.141 Q53.6281 750.76 56.8109 747.513 Q59.9619 744.235 59.9619 738.41 Q59.9619 735.036 59.1344 731.885 Q58.3069 728.702 56.6518 725.583 L62.1899 725.583 Q63.5267 728.734 64.227 732.044 Q64.9272 735.355 64.9272 738.76 Q64.9272 747.29 59.9619 752.287 Q54.9967 757.253 46.5303 757.253 Q37.7774 757.253 32.6531 752.542 Q27.4968 747.8 27.4968 739.779 Q27.4968 732.585 32.1438 728.416 Q36.7589 724.215 44.7161 724.215 M42.9973 730.071 Q38.1912 730.135 35.3266 732.776 Q32.4621 735.386 32.4621 739.715 Q32.4621 744.617 35.2312 747.577 Q38.0002 750.505 43.0292 750.951 L42.9973 730.071 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M42.4881 684.97 L64.0042 684.97 L64.0042 690.826 L42.679 690.826 Q37.6183 690.826 35.1038 692.8 Q32.5894 694.773 32.5894 698.72 Q32.5894 703.462 35.6131 706.2 Q38.6368 708.937 43.8567 708.937 L64.0042 708.937 L64.0042 714.825 L28.3562 714.825 L28.3562 708.937 L33.8944 708.937 Q30.6797 706.836 29.0883 704.003 Q27.4968 701.139 27.4968 697.415 Q27.4968 691.272 31.3163 688.121 Q35.1038 684.97 42.4881 684.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M18.2347 667.496 L28.3562 667.496 L28.3562 655.433 L32.9077 655.433 L32.9077 667.496 L52.2594 667.496 Q56.6199 667.496 57.8613 666.318 Q59.1026 665.109 59.1026 661.449 L59.1026 655.433 L64.0042 655.433 L64.0042 661.449 Q64.0042 668.228 61.4897 670.806 Q58.9434 673.384 52.2594 673.384 L32.9077 673.384 L32.9077 677.681 L28.3562 677.681 L28.3562 673.384 L18.2347 673.384 L18.2347 667.496 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M33.8307 627.074 Q33.2578 628.061 33.0032 629.238 Q32.7167 630.384 32.7167 631.784 Q32.7167 636.75 35.9632 639.423 Q39.1779 642.065 45.2253 642.065 L64.0042 642.065 L64.0042 647.953 L28.3562 647.953 L28.3562 642.065 L33.8944 642.065 Q30.6479 640.219 29.0883 637.259 Q27.4968 634.299 27.4968 630.066 Q27.4968 629.461 27.5923 628.729 Q27.656 627.997 27.8151 627.106 L33.8307 627.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M46.0847 604.73 Q46.0847 611.828 47.7079 614.565 Q49.3312 617.303 53.2461 617.303 Q56.3653 617.303 58.2114 615.265 Q60.0256 613.197 60.0256 609.664 Q60.0256 604.794 56.5881 601.866 Q53.1188 598.906 47.3897 598.906 L46.0847 598.906 L46.0847 604.73 M43.6657 593.049 L64.0042 593.049 L64.0042 598.906 L58.5933 598.906 Q61.8398 600.911 63.3994 603.903 Q64.9272 606.895 64.9272 611.223 Q64.9272 616.698 61.8716 619.944 Q58.7843 623.159 53.6281 623.159 Q47.6125 623.159 44.5569 619.149 Q41.5014 615.106 41.5014 607.117 L41.5014 598.906 L40.9285 598.906 Q36.8862 598.906 34.6901 601.579 Q32.4621 604.221 32.4621 609.027 Q32.4621 612.083 33.1941 614.979 Q33.9262 617.875 35.3903 620.549 L29.9795 620.549 Q28.7381 617.334 28.1334 614.311 Q27.4968 611.287 27.4968 608.422 Q27.4968 600.688 31.5072 596.869 Q35.5176 593.049 43.6657 593.049 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M14.479 580.986 L14.479 575.13 L64.0042 575.13 L64.0042 580.986 L14.479 580.986 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M28.3562 562.876 L28.3562 557.019 L64.0042 557.019 L64.0042 562.876 L28.3562 562.876 M14.479 562.876 L14.479 557.019 L21.895 557.019 L21.895 562.876 L14.479 562.876 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M18.2347 538.972 L28.3562 538.972 L28.3562 526.909 L32.9077 526.909 L32.9077 538.972 L52.2594 538.972 Q56.6199 538.972 57.8613 537.795 Q59.1026 536.585 59.1026 532.925 L59.1026 526.909 L64.0042 526.909 L64.0042 532.925 Q64.0042 539.705 61.4897 542.283 Q58.9434 544.861 52.2594 544.861 L32.9077 544.861 L32.9077 549.158 L28.3562 549.158 L28.3562 544.861 L18.2347 544.861 L18.2347 538.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M67.3143 504.375 Q73.68 506.858 75.6216 509.213 Q77.5631 511.568 77.5631 515.515 L77.5631 520.194 L72.6615 520.194 L72.6615 516.756 Q72.6615 514.337 71.5157 513 Q70.3699 511.664 66.1048 510.04 L63.4312 508.99 L28.3562 523.408 L28.3562 517.202 L56.238 506.062 L28.3562 494.922 L28.3562 488.715 L67.3143 504.375 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M698.201 18.8205 L698.201 65.8515 L708.085 65.8515 Q720.602 65.8515 726.395 60.1802 Q732.228 54.509 732.228 42.2752 Q732.228 30.1225 726.395 24.4918 Q720.602 18.8205 708.085 18.8205 L698.201 18.8205 M690.018 12.096 L706.829 12.096 Q724.41 12.096 732.633 19.4281 Q740.857 26.7198 740.857 42.2752 Q740.857 57.9117 732.593 65.2439 Q724.329 72.576 706.829 72.576 L690.018 72.576 L690.018 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M792.384 48.0275 L792.384 51.6733 L758.114 51.6733 Q758.6 59.3701 762.732 63.421 Q766.904 67.4314 774.317 67.4314 Q778.611 67.4314 782.622 66.3781 Q786.673 65.3249 790.642 63.2184 L790.642 70.267 Q786.632 71.9684 782.419 72.8596 Q778.206 73.7508 773.872 73.7508 Q763.015 73.7508 756.655 67.4314 Q750.336 61.1119 750.336 50.3365 Q750.336 39.1965 756.331 32.6746 Q762.367 26.1121 772.575 26.1121 Q781.73 26.1121 787.037 32.0264 Q792.384 37.9003 792.384 48.0275 M784.931 45.84 Q784.85 39.7232 781.487 36.0774 Q778.166 32.4315 772.656 32.4315 Q766.418 32.4315 762.651 35.9558 Q758.924 39.4801 758.357 45.8805 L784.931 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M834.473 49.3643 Q834.473 41.2625 831.111 36.8065 Q827.789 32.3505 821.753 32.3505 Q815.758 32.3505 812.396 36.8065 Q809.074 41.2625 809.074 49.3643 Q809.074 57.4256 812.396 61.8816 Q815.758 66.3376 821.753 66.3376 Q827.789 66.3376 831.111 61.8816 Q834.473 57.4256 834.473 49.3643 M841.927 66.9452 Q841.927 78.5308 836.782 84.1616 Q831.638 89.8329 821.024 89.8329 Q817.095 89.8329 813.611 89.2252 Q810.127 88.6581 806.846 87.4428 L806.846 80.1917 Q810.127 81.9741 813.328 82.8248 Q816.528 83.6755 819.849 83.6755 Q827.182 83.6755 830.827 79.8271 Q834.473 76.0193 834.473 68.282 L834.473 64.5957 Q832.164 68.6061 828.559 70.5911 Q824.954 72.576 819.93 72.576 Q811.586 72.576 806.481 66.2161 Q801.377 59.8562 801.377 49.3643 Q801.377 38.832 806.481 32.472 Q811.586 26.1121 819.93 26.1121 Q824.954 26.1121 828.559 28.0971 Q832.164 30.082 834.473 34.0924 L834.473 27.2059 L841.927 27.2059 L841.927 66.9452 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M883.57 34.1734 Q882.314 33.4443 880.816 33.1202 Q879.357 32.7556 877.575 32.7556 Q871.255 32.7556 867.853 36.8875 Q864.49 40.9789 864.49 48.6757 L864.49 72.576 L856.996 72.576 L856.996 27.2059 L864.49 27.2059 L864.49 34.2544 Q866.84 30.1225 870.607 28.1376 Q874.375 26.1121 879.762 26.1121 Q880.532 26.1121 881.464 26.2337 Q882.395 26.3147 883.53 26.5172 L883.57 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M928.373 48.0275 L928.373 51.6733 L894.103 51.6733 Q894.589 59.3701 898.721 63.421 Q902.893 67.4314 910.306 67.4314 Q914.6 67.4314 918.611 66.3781 Q922.661 65.3249 926.631 63.2184 L926.631 70.267 Q922.621 71.9684 918.408 72.8596 Q914.195 73.7508 909.861 73.7508 Q899.004 73.7508 892.644 67.4314 Q886.325 61.1119 886.325 50.3365 Q886.325 39.1965 892.32 32.6746 Q898.356 26.1121 908.564 26.1121 Q917.719 26.1121 923.026 32.0264 Q928.373 37.9003 928.373 48.0275 M920.92 45.84 Q920.839 39.7232 917.476 36.0774 Q914.155 32.4315 908.645 32.4315 Q902.407 32.4315 898.64 35.9558 Q894.913 39.4801 894.346 45.8805 L920.92 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M979.415 48.0275 L979.415 51.6733 L945.144 51.6733 Q945.63 59.3701 949.762 63.421 Q953.934 67.4314 961.348 67.4314 Q965.642 67.4314 969.652 66.3781 Q973.703 65.3249 977.673 63.2184 L977.673 70.267 Q973.662 71.9684 969.449 72.8596 Q965.236 73.7508 960.902 73.7508 Q950.046 73.7508 943.686 67.4314 Q937.366 61.1119 937.366 50.3365 Q937.366 39.1965 943.362 32.6746 Q949.397 26.1121 959.606 26.1121 Q968.761 26.1121 974.067 32.0264 Q979.415 37.9003 979.415 48.0275 M971.961 45.84 Q971.88 39.7232 968.518 36.0774 Q965.196 32.4315 959.687 32.4315 Q953.448 32.4315 949.681 35.9558 Q945.954 39.4801 945.387 45.8805 L971.961 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1063.63 16.7545 L1063.63 25.383 Q1059.5 21.5346 1054.8 19.6307 Q1050.14 17.7268 1044.88 17.7268 Q1034.51 17.7268 1029 24.0867 Q1023.49 30.4061 1023.49 42.3968 Q1023.49 54.3469 1029 60.7069 Q1034.51 67.0263 1044.88 67.0263 Q1050.14 67.0263 1054.8 65.1223 Q1059.5 63.2184 1063.63 59.3701 L1063.63 67.9175 Q1059.34 70.8341 1054.52 72.2924 Q1049.74 73.7508 1044.39 73.7508 Q1030.66 73.7508 1022.76 65.3654 Q1014.86 56.9395 1014.86 42.3968 Q1014.86 27.8135 1022.76 19.4281 Q1030.66 11.0023 1044.39 11.0023 Q1049.82 11.0023 1054.6 12.4606 Q1059.42 13.8784 1063.63 16.7545 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1114.76 48.0275 L1114.76 51.6733 L1080.48 51.6733 Q1080.97 59.3701 1085.1 63.421 Q1089.28 67.4314 1096.69 67.4314 Q1100.98 67.4314 1104.99 66.3781 Q1109.04 65.3249 1113.01 63.2184 L1113.01 70.267 Q1109 71.9684 1104.79 72.8596 Q1100.58 73.7508 1096.24 73.7508 Q1085.39 73.7508 1079.03 67.4314 Q1072.71 61.1119 1072.71 50.3365 Q1072.71 39.1965 1078.7 32.6746 Q1084.74 26.1121 1094.95 26.1121 Q1104.1 26.1121 1109.41 32.0264 Q1114.76 37.9003 1114.76 48.0275 M1107.3 45.84 Q1107.22 39.7232 1103.86 36.0774 Q1100.54 32.4315 1095.03 32.4315 Q1088.79 32.4315 1085.02 35.9558 Q1081.29 39.4801 1080.73 45.8805 L1107.3 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1164.7 45.1919 L1164.7 72.576 L1157.25 72.576 L1157.25 45.4349 Q1157.25 38.994 1154.74 35.7938 Q1152.23 32.5936 1147.2 32.5936 Q1141.17 32.5936 1137.68 36.4419 Q1134.2 40.2903 1134.2 46.9338 L1134.2 72.576 L1126.71 72.576 L1126.71 27.2059 L1134.2 27.2059 L1134.2 34.2544 Q1136.87 30.163 1140.48 28.1376 Q1144.12 26.1121 1148.86 26.1121 Q1156.68 26.1121 1160.69 30.9732 Q1164.7 35.7938 1164.7 45.1919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1186.94 14.324 L1186.94 27.2059 L1202.3 27.2059 L1202.3 32.9987 L1186.94 32.9987 L1186.94 57.6282 Q1186.94 63.1779 1188.44 64.7578 Q1189.98 66.3376 1194.64 66.3376 L1202.3 66.3376 L1202.3 72.576 L1194.64 72.576 Q1186.01 72.576 1182.73 69.3758 Q1179.45 66.1351 1179.45 57.6282 L1179.45 32.9987 L1173.98 32.9987 L1173.98 27.2059 L1179.45 27.2059 L1179.45 14.324 L1186.94 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1238.39 34.1734 Q1237.13 33.4443 1235.63 33.1202 Q1234.18 32.7556 1232.39 32.7556 Q1226.07 32.7556 1222.67 36.8875 Q1219.31 40.9789 1219.31 48.6757 L1219.31 72.576 L1211.81 72.576 L1211.81 27.2059 L1219.31 27.2059 L1219.31 34.2544 Q1221.66 30.1225 1225.43 28.1376 Q1229.19 26.1121 1234.58 26.1121 Q1235.35 26.1121 1236.28 26.2337 Q1237.21 26.3147 1238.35 26.5172 L1238.39 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1266.83 49.7694 Q1257.79 49.7694 1254.31 51.8354 Q1250.83 53.9013 1250.83 58.8839 Q1250.83 62.8538 1253.42 65.2034 Q1256.05 67.5124 1260.55 67.5124 Q1266.75 67.5124 1270.47 63.1374 Q1274.24 58.7219 1274.24 51.4303 L1274.24 49.7694 L1266.83 49.7694 M1281.69 46.6907 L1281.69 72.576 L1274.24 72.576 L1274.24 65.6895 Q1271.69 69.8214 1267.88 71.8063 Q1264.07 73.7508 1258.56 73.7508 Q1251.59 73.7508 1247.46 69.8619 Q1243.37 65.9325 1243.37 59.3701 Q1243.37 51.7138 1248.48 47.825 Q1253.62 43.9361 1263.79 43.9361 L1274.24 43.9361 L1274.24 43.2069 Q1274.24 38.0623 1270.84 35.2672 Q1267.47 32.4315 1261.36 32.4315 Q1257.47 32.4315 1253.78 33.3632 Q1250.1 34.295 1246.69 36.1584 L1246.69 29.2718 Q1250.78 27.692 1254.63 26.9223 Q1258.48 26.1121 1262.13 26.1121 Q1271.97 26.1121 1276.83 31.2163 Q1281.69 36.3204 1281.69 46.6907 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1297.05 9.54393 L1304.5 9.54393 L1304.5 72.576 L1297.05 72.576 L1297.05 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1320.1 27.2059 L1327.55 27.2059 L1327.55 72.576 L1320.1 72.576 L1320.1 27.2059 M1320.1 9.54393 L1327.55 9.54393 L1327.55 18.9825 L1320.1 18.9825 L1320.1 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1350.52 14.324 L1350.52 27.2059 L1365.87 27.2059 L1365.87 32.9987 L1350.52 32.9987 L1350.52 57.6282 Q1350.52 63.1779 1352.02 64.7578 Q1353.56 66.3376 1358.21 66.3376 L1365.87 66.3376 L1365.87 72.576 L1358.21 72.576 Q1349.59 72.576 1346.3 69.3758 Q1343.02 66.1351 1343.02 57.6282 L1343.02 32.9987 L1337.56 32.9987 L1337.56 27.2059 L1343.02 27.2059 L1343.02 14.324 L1350.52 14.324 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1394.55 76.7889 Q1391.39 84.8907 1388.39 87.3618 Q1385.4 89.8329 1380.37 89.8329 L1374.42 89.8329 L1374.42 83.5945 L1378.79 83.5945 Q1381.87 83.5945 1383.57 82.1361 Q1385.27 80.6778 1387.34 75.2496 L1388.68 71.8468 L1370.33 27.2059 L1378.23 27.2059 L1392.4 62.6918 L1406.58 27.2059 L1414.48 27.2059 L1394.55 76.7889 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1476.01 17.6457 Q1467.1 17.6457 1461.84 24.2892 Q1456.61 30.9327 1456.61 42.3968 Q1456.61 53.8203 1461.84 60.4638 Q1467.1 67.1073 1476.01 67.1073 Q1484.93 67.1073 1490.11 60.4638 Q1495.34 53.8203 1495.34 42.3968 Q1495.34 30.9327 1490.11 24.2892 Q1484.93 17.6457 1476.01 17.6457 M1476.01 11.0023 Q1488.73 11.0023 1496.35 19.5497 Q1503.97 28.0566 1503.97 42.3968 Q1503.97 56.6965 1496.35 65.2439 Q1488.73 73.7508 1476.01 73.7508 Q1463.25 73.7508 1455.6 65.2439 Q1447.98 56.737 1447.98 42.3968 Q1447.98 28.0566 1455.6 19.5497 Q1463.25 11.0023 1476.01 11.0023 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1511.1 27.2059 L1519 27.2059 L1533.17 65.2844 L1547.35 27.2059 L1555.25 27.2059 L1538.24 72.576 L1528.11 72.576 L1511.1 27.2059 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1604.35 48.0275 L1604.35 51.6733 L1570.08 51.6733 Q1570.56 59.3701 1574.69 63.421 Q1578.87 67.4314 1586.28 67.4314 Q1590.57 67.4314 1594.58 66.3781 Q1598.64 65.3249 1602.61 63.2184 L1602.61 70.267 Q1598.6 71.9684 1594.38 72.8596 Q1590.17 73.7508 1585.83 73.7508 Q1574.98 73.7508 1568.62 67.4314 Q1562.3 61.1119 1562.3 50.3365 Q1562.3 39.1965 1568.29 32.6746 Q1574.33 26.1121 1584.54 26.1121 Q1593.69 26.1121 1599 32.0264 Q1604.35 37.9003 1604.35 48.0275 M1596.89 45.84 Q1596.81 39.7232 1593.45 36.0774 Q1590.13 32.4315 1584.62 32.4315 Q1578.38 32.4315 1574.61 35.9558 Q1570.89 39.4801 1570.32 45.8805 L1596.89 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1642.87 34.1734 Q1641.62 33.4443 1640.12 33.1202 Q1638.66 32.7556 1636.88 32.7556 Q1630.56 32.7556 1627.15 36.8875 Q1623.79 40.9789 1623.79 48.6757 L1623.79 72.576 L1616.3 72.576 L1616.3 27.2059 L1623.79 27.2059 L1623.79 34.2544 Q1626.14 30.1225 1629.91 28.1376 Q1633.68 26.1121 1639.06 26.1121 Q1639.83 26.1121 1640.77 26.2337 Q1641.7 26.3147 1642.83 26.5172 L1642.87 34.1734 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1669 12.096 L1720.16 12.096 L1720.16 18.9825 L1698.69 18.9825 L1698.69 72.576 L1690.47 72.576 L1690.47 18.9825 L1669 18.9825 L1669 12.096 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1725.19 27.2059 L1732.64 27.2059 L1732.64 72.576 L1725.19 72.576 L1725.19 27.2059 M1725.19 9.54393 L1732.64 9.54393 L1732.64 18.9825 L1725.19 18.9825 L1725.19 9.54393 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1783.56 35.9153 Q1786.35 30.8922 1790.24 28.5022 Q1794.13 26.1121 1799.4 26.1121 Q1806.49 26.1121 1810.34 31.0947 Q1814.18 36.0368 1814.18 45.1919 L1814.18 72.576 L1806.69 72.576 L1806.69 45.4349 Q1806.69 38.913 1804.38 35.7533 Q1802.07 32.5936 1797.33 32.5936 Q1791.54 32.5936 1788.18 36.4419 Q1784.82 40.2903 1784.82 46.9338 L1784.82 72.576 L1777.32 72.576 L1777.32 45.4349 Q1777.32 38.8725 1775.01 35.7533 Q1772.7 32.5936 1767.88 32.5936 Q1762.17 32.5936 1758.81 36.4824 Q1755.45 40.3308 1755.45 46.9338 L1755.45 72.576 L1747.95 72.576 L1747.95 27.2059 L1755.45 27.2059 L1755.45 34.2544 Q1758 30.082 1761.56 28.0971 Q1765.13 26.1121 1770.03 26.1121 Q1774.97 26.1121 1778.41 28.6237 Q1781.9 31.1352 1783.56 35.9153 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M1867.86 48.0275 L1867.86 51.6733 L1833.59 51.6733 Q1834.07 59.3701 1838.21 63.421 Q1842.38 67.4314 1849.79 67.4314 Q1854.09 67.4314 1858.1 66.3781 Q1862.15 65.3249 1866.12 63.2184 L1866.12 70.267 Q1862.11 71.9684 1857.89 72.8596 Q1853.68 73.7508 1849.35 73.7508 Q1838.49 73.7508 1832.13 67.4314 Q1825.81 61.1119 1825.81 50.3365 Q1825.81 39.1965 1831.81 32.6746 Q1837.84 26.1121 1848.05 26.1121 Q1857.21 26.1121 1862.51 32.0264 Q1867.86 37.9003 1867.86 48.0275 M1860.41 45.84 Q1860.32 39.7232 1856.96 36.0774 Q1853.64 32.4315 1848.13 32.4315 Q1841.89 32.4315 1838.13 35.9558 Q1834.4 39.4801 1833.83 45.8805 L1860.41 45.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip242)\" style=\"stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"265.903,1123.65 941.26,860.907 1616.62,510.582 2291.97,247.838 \"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"265.903\" y1=\"1123.65\" x2=\"265.903\" y2=\"1107.65\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"265.903\" y1=\"1123.65\" x2=\"249.903\" y2=\"1123.65\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"265.903\" y1=\"1123.65\" x2=\"265.903\" y2=\"1139.65\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"265.903\" y1=\"1123.65\" x2=\"281.903\" y2=\"1123.65\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"941.26\" y1=\"860.907\" x2=\"941.26\" y2=\"844.907\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"941.26\" y1=\"860.907\" x2=\"925.26\" y2=\"860.907\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"941.26\" y1=\"860.907\" x2=\"941.26\" y2=\"876.907\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"941.26\" y1=\"860.907\" x2=\"957.26\" y2=\"860.907\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"1616.62\" y1=\"510.582\" x2=\"1616.62\" y2=\"494.582\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"1616.62\" y1=\"510.582\" x2=\"1600.62\" y2=\"510.582\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"1616.62\" y1=\"510.582\" x2=\"1616.62\" y2=\"526.582\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"1616.62\" y1=\"510.582\" x2=\"1632.62\" y2=\"510.582\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"2291.97\" y1=\"247.838\" x2=\"2291.97\" y2=\"231.838\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"2291.97\" y1=\"247.838\" x2=\"2275.97\" y2=\"247.838\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"2291.97\" y1=\"247.838\" x2=\"2291.97\" y2=\"263.838\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"2291.97\" y1=\"247.838\" x2=\"2307.97\" y2=\"247.838\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#ffa500; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"265.903,1386.4 941.26,1006.88 1616.62,393.807 2291.97,160.256 \"/>\n",
       "<circle clip-path=\"url(#clip242)\" cx=\"265.903\" cy=\"1386.4\" r=\"14.4\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n",
       "<circle clip-path=\"url(#clip242)\" cx=\"941.26\" cy=\"1006.88\" r=\"14.4\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n",
       "<circle clip-path=\"url(#clip242)\" cx=\"1616.62\" cy=\"393.807\" r=\"14.4\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n",
       "<circle clip-path=\"url(#clip242)\" cx=\"2291.97\" cy=\"160.256\" r=\"14.4\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.2\"/>\n",
       "<polyline clip-path=\"url(#clip242)\" style=\"stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"265.903,948.489 941.26,656.551 1616.62,598.163 2291.97,189.45 \"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"265.903\" y1=\"948.489\" x2=\"265.903\" y2=\"932.489\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"265.903\" y1=\"948.489\" x2=\"249.903\" y2=\"948.489\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"265.903\" y1=\"948.489\" x2=\"265.903\" y2=\"964.489\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"265.903\" y1=\"948.489\" x2=\"281.903\" y2=\"948.489\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"941.26\" y1=\"656.551\" x2=\"941.26\" y2=\"640.551\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"941.26\" y1=\"656.551\" x2=\"925.26\" y2=\"656.551\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"941.26\" y1=\"656.551\" x2=\"941.26\" y2=\"672.551\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"941.26\" y1=\"656.551\" x2=\"957.26\" y2=\"656.551\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"1616.62\" y1=\"598.163\" x2=\"1616.62\" y2=\"582.163\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"1616.62\" y1=\"598.163\" x2=\"1600.62\" y2=\"598.163\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"1616.62\" y1=\"598.163\" x2=\"1616.62\" y2=\"614.163\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"1616.62\" y1=\"598.163\" x2=\"1632.62\" y2=\"598.163\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"2291.97\" y1=\"189.45\" x2=\"2291.97\" y2=\"173.45\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"2291.97\" y1=\"189.45\" x2=\"2275.97\" y2=\"189.45\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"2291.97\" y1=\"189.45\" x2=\"2291.97\" y2=\"205.45\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip242)\" x1=\"2291.97\" y1=\"189.45\" x2=\"2307.97\" y2=\"189.45\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<path clip-path=\"url(#clip240)\" d=\"M276.709 374.156 L651.981 374.156 L651.981 166.796 L276.709 166.796  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"276.709,374.156 651.981,374.156 651.981,166.796 276.709,166.796 276.709,374.156 \"/>\n",
       "<polyline clip-path=\"url(#clip240)\" style=\"stroke:#0000ff; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"300.571,218.636 443.747,218.636 \"/>\n",
       "<line clip-path=\"url(#clip240)\" x1=\"372.159\" y1=\"218.636\" x2=\"372.159\" y2=\"196.541\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip240)\" x1=\"372.159\" y1=\"218.636\" x2=\"350.064\" y2=\"218.636\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip240)\" x1=\"372.159\" y1=\"218.636\" x2=\"372.159\" y2=\"240.731\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip240)\" x1=\"372.159\" y1=\"218.636\" x2=\"394.254\" y2=\"218.636\" style=\"stroke:#0000ff; stroke-width:8; stroke-opacity:1\"/>\n",
       "<path clip-path=\"url(#clip240)\" d=\"M467.61 201.356 L473.906 201.356 L489.23 230.268 L489.23 201.356 L493.767 201.356 L493.767 235.916 L487.471 235.916 L472.147 207.004 L472.147 235.916 L467.61 235.916 L467.61 201.356 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M512.934 212.976 Q509.508 212.976 507.517 215.661 Q505.526 218.323 505.526 222.976 Q505.526 227.629 507.494 230.314 Q509.484 232.976 512.934 232.976 Q516.336 232.976 518.327 230.291 Q520.318 227.606 520.318 222.976 Q520.318 218.37 518.327 215.684 Q516.336 212.976 512.934 212.976 M512.934 209.365 Q518.489 209.365 521.66 212.976 Q524.832 216.587 524.832 222.976 Q524.832 229.342 521.66 232.976 Q518.489 236.587 512.934 236.587 Q507.355 236.587 504.184 232.976 Q501.035 229.342 501.035 222.976 Q501.035 216.587 504.184 212.976 Q507.355 209.365 512.934 209.365 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M548.952 213.925 L548.952 199.897 L553.211 199.897 L553.211 235.916 L548.952 235.916 L548.952 232.027 Q547.609 234.342 545.549 235.476 Q543.512 236.587 540.642 236.587 Q535.943 236.587 532.98 232.837 Q530.04 229.087 530.04 222.976 Q530.04 216.865 532.98 213.115 Q535.943 209.365 540.642 209.365 Q543.512 209.365 545.549 210.499 Q547.609 211.61 548.952 213.925 M534.438 222.976 Q534.438 227.675 536.359 230.36 Q538.304 233.022 541.683 233.022 Q545.063 233.022 547.007 230.36 Q548.952 227.675 548.952 222.976 Q548.952 218.277 547.007 215.615 Q545.063 212.93 541.683 212.93 Q538.304 212.93 536.359 215.615 Q534.438 218.277 534.438 222.976 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M584.16 221.888 L584.16 223.971 L564.577 223.971 Q564.855 228.369 567.216 230.684 Q569.6 232.976 573.836 232.976 Q576.29 232.976 578.581 232.374 Q580.896 231.772 583.165 230.569 L583.165 234.596 Q580.873 235.568 578.466 236.078 Q576.058 236.587 573.581 236.587 Q567.378 236.587 563.743 232.976 Q560.132 229.365 560.132 223.207 Q560.132 216.842 563.558 213.115 Q567.007 209.365 572.841 209.365 Q578.072 209.365 581.104 212.745 Q584.16 216.101 584.16 221.888 M579.901 220.638 Q579.854 217.143 577.933 215.059 Q576.035 212.976 572.887 212.976 Q569.322 212.976 567.169 214.99 Q565.04 217.004 564.716 220.661 L579.901 220.638 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M607.632 231.981 L615.271 231.981 L615.271 205.615 L606.961 207.282 L606.961 203.022 L615.225 201.356 L619.901 201.356 L619.901 231.981 L627.539 231.981 L627.539 235.916 L607.632 235.916 L607.632 231.981 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip240)\" style=\"stroke:#ffa500; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"300.571,270.476 443.747,270.476 \"/>\n",
       "<circle clip-path=\"url(#clip240)\" cx=\"372.159\" cy=\"270.476\" r=\"19.8855\" fill=\"#ffa500\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"4.55111\"/>\n",
       "<path clip-path=\"url(#clip240)\" d=\"M467.61 253.196 L473.906 253.196 L489.23 282.108 L489.23 253.196 L493.767 253.196 L493.767 287.756 L487.471 287.756 L472.147 258.844 L472.147 287.756 L467.61 287.756 L467.61 253.196 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M512.934 264.816 Q509.508 264.816 507.517 267.501 Q505.526 270.163 505.526 274.816 Q505.526 279.469 507.494 282.154 Q509.484 284.816 512.934 284.816 Q516.336 284.816 518.327 282.131 Q520.318 279.446 520.318 274.816 Q520.318 270.21 518.327 267.524 Q516.336 264.816 512.934 264.816 M512.934 261.205 Q518.489 261.205 521.66 264.816 Q524.832 268.427 524.832 274.816 Q524.832 281.182 521.66 284.816 Q518.489 288.427 512.934 288.427 Q507.355 288.427 504.184 284.816 Q501.035 281.182 501.035 274.816 Q501.035 268.427 504.184 264.816 Q507.355 261.205 512.934 261.205 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M548.952 265.765 L548.952 251.737 L553.211 251.737 L553.211 287.756 L548.952 287.756 L548.952 283.867 Q547.609 286.182 545.549 287.316 Q543.512 288.427 540.642 288.427 Q535.943 288.427 532.98 284.677 Q530.04 280.927 530.04 274.816 Q530.04 268.705 532.98 264.955 Q535.943 261.205 540.642 261.205 Q543.512 261.205 545.549 262.339 Q547.609 263.45 548.952 265.765 M534.438 274.816 Q534.438 279.515 536.359 282.2 Q538.304 284.862 541.683 284.862 Q545.063 284.862 547.007 282.2 Q548.952 279.515 548.952 274.816 Q548.952 270.117 547.007 267.455 Q545.063 264.77 541.683 264.77 Q538.304 264.77 536.359 267.455 Q534.438 270.117 534.438 274.816 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M584.16 273.728 L584.16 275.811 L564.577 275.811 Q564.855 280.209 567.216 282.524 Q569.6 284.816 573.836 284.816 Q576.29 284.816 578.581 284.214 Q580.896 283.612 583.165 282.409 L583.165 286.436 Q580.873 287.408 578.466 287.918 Q576.058 288.427 573.581 288.427 Q567.378 288.427 563.743 284.816 Q560.132 281.205 560.132 275.047 Q560.132 268.682 563.558 264.955 Q567.007 261.205 572.841 261.205 Q578.072 261.205 581.104 264.585 Q584.16 267.941 584.16 273.728 M579.901 272.478 Q579.854 268.983 577.933 266.899 Q576.035 264.816 572.887 264.816 Q569.322 264.816 567.169 266.83 Q565.04 268.844 564.716 272.501 L579.901 272.478 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M610.85 283.821 L627.169 283.821 L627.169 287.756 L605.225 287.756 L605.225 283.821 Q607.887 281.066 612.47 276.436 Q617.076 271.784 618.257 270.441 Q620.502 267.918 621.382 266.182 Q622.285 264.423 622.285 262.733 Q622.285 259.978 620.34 258.242 Q618.419 256.506 615.317 256.506 Q613.118 256.506 610.664 257.27 Q608.234 258.034 605.456 259.585 L605.456 254.862 Q608.28 253.728 610.734 253.149 Q613.188 252.571 615.225 252.571 Q620.595 252.571 623.789 255.256 Q626.984 257.941 626.984 262.432 Q626.984 264.561 626.174 266.483 Q625.387 268.381 623.28 270.973 Q622.701 271.645 619.6 274.862 Q616.498 278.057 610.85 283.821 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip240)\" style=\"stroke:#008000; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"300.571,322.316 443.747,322.316 \"/>\n",
       "<line clip-path=\"url(#clip240)\" x1=\"372.159\" y1=\"322.316\" x2=\"372.159\" y2=\"300.221\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip240)\" x1=\"372.159\" y1=\"322.316\" x2=\"350.064\" y2=\"322.316\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip240)\" x1=\"372.159\" y1=\"322.316\" x2=\"372.159\" y2=\"344.411\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<line clip-path=\"url(#clip240)\" x1=\"372.159\" y1=\"322.316\" x2=\"394.254\" y2=\"322.316\" style=\"stroke:#008000; stroke-width:8; stroke-opacity:1\"/>\n",
       "<path clip-path=\"url(#clip240)\" d=\"M467.61 305.036 L473.906 305.036 L489.23 333.948 L489.23 305.036 L493.767 305.036 L493.767 339.596 L487.471 339.596 L472.147 310.684 L472.147 339.596 L467.61 339.596 L467.61 305.036 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M512.934 316.656 Q509.508 316.656 507.517 319.341 Q505.526 322.003 505.526 326.656 Q505.526 331.309 507.494 333.994 Q509.484 336.656 512.934 336.656 Q516.336 336.656 518.327 333.971 Q520.318 331.286 520.318 326.656 Q520.318 322.05 518.327 319.364 Q516.336 316.656 512.934 316.656 M512.934 313.045 Q518.489 313.045 521.66 316.656 Q524.832 320.267 524.832 326.656 Q524.832 333.022 521.66 336.656 Q518.489 340.267 512.934 340.267 Q507.355 340.267 504.184 336.656 Q501.035 333.022 501.035 326.656 Q501.035 320.267 504.184 316.656 Q507.355 313.045 512.934 313.045 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M548.952 317.605 L548.952 303.577 L553.211 303.577 L553.211 339.596 L548.952 339.596 L548.952 335.707 Q547.609 338.022 545.549 339.156 Q543.512 340.267 540.642 340.267 Q535.943 340.267 532.98 336.517 Q530.04 332.767 530.04 326.656 Q530.04 320.545 532.98 316.795 Q535.943 313.045 540.642 313.045 Q543.512 313.045 545.549 314.179 Q547.609 315.29 548.952 317.605 M534.438 326.656 Q534.438 331.355 536.359 334.04 Q538.304 336.702 541.683 336.702 Q545.063 336.702 547.007 334.04 Q548.952 331.355 548.952 326.656 Q548.952 321.957 547.007 319.295 Q545.063 316.61 541.683 316.61 Q538.304 316.61 536.359 319.295 Q534.438 321.957 534.438 326.656 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M584.16 325.568 L584.16 327.651 L564.577 327.651 Q564.855 332.049 567.216 334.364 Q569.6 336.656 573.836 336.656 Q576.29 336.656 578.581 336.054 Q580.896 335.452 583.165 334.249 L583.165 338.276 Q580.873 339.248 578.466 339.758 Q576.058 340.267 573.581 340.267 Q567.378 340.267 563.743 336.656 Q560.132 333.045 560.132 326.887 Q560.132 320.522 563.558 316.795 Q567.007 313.045 572.841 313.045 Q578.072 313.045 581.104 316.425 Q584.16 319.781 584.16 325.568 M579.901 324.318 Q579.854 320.823 577.933 318.739 Q576.035 316.656 572.887 316.656 Q569.322 316.656 567.169 318.67 Q565.04 320.684 564.716 324.341 L579.901 324.318 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip240)\" d=\"M620.988 320.962 Q624.345 321.679 626.22 323.948 Q628.118 326.216 628.118 329.549 Q628.118 334.665 624.6 337.466 Q621.081 340.267 614.6 340.267 Q612.424 340.267 610.109 339.827 Q607.817 339.411 605.364 338.554 L605.364 334.04 Q607.308 335.174 609.623 335.753 Q611.938 336.332 614.461 336.332 Q618.859 336.332 621.151 334.596 Q623.465 332.86 623.465 329.549 Q623.465 326.494 621.313 324.781 Q619.183 323.045 615.364 323.045 L611.336 323.045 L611.336 319.202 L615.549 319.202 Q618.998 319.202 620.826 317.837 Q622.655 316.448 622.655 313.855 Q622.655 311.193 620.757 309.781 Q618.882 308.346 615.364 308.346 Q613.442 308.346 611.243 308.763 Q609.044 309.179 606.405 310.059 L606.405 305.892 Q609.067 305.151 611.382 304.781 Q613.72 304.411 615.78 304.411 Q621.104 304.411 624.206 306.841 Q627.308 309.249 627.308 313.369 Q627.308 316.239 625.664 318.23 Q624.021 320.198 620.988 320.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using DataFrames\n",
    "using Plots\n",
    "\n",
    "# Sample DataFrame\n",
    "df = DataFrame(\n",
    "    Node = [1, 2, 3],\n",
    "    DegreeCentrality_20 = [9.0, 0, 15.0],\n",
    "    DegreeCentrality_20_21 = [18.0, 13.0, 25.0],\n",
    "    DegreeCentrality_20_21_22 = [30.0, 34.0, 27.0],\n",
    "    DegreeCentrality_20_21_22_23 = [39.0, 42.0, 41.0]\n",
    ")\n",
    "\n",
    "# Extract relevant columns for plotting\n",
    "nodes = df.Node\n",
    "degree_centralities = select(df, Not(:Node))\n",
    "\n",
    "# Create a new DataFrame for plotting\n",
    "df_plot = DataFrame(\n",
    "    Node = repeat(nodes, inner=size(degree_centralities, 2)),\n",
    "    DegreeCentrality = collect(Iterators.flatten(eachrow(degree_centralities))),\n",
    "    Year = repeat([\"20\", \"20_21\", \"20_21_22\", \"20_21_22_23\"], outer=size(degree_centralities, 1))\n",
    ")\n",
    "\n",
    "# Manually set colors for each node\n",
    "node_colors = Dict(\n",
    "    1 => :blue,\n",
    "    2 => :orange,\n",
    "    3 => :green\n",
    ")\n",
    "\n",
    "# Plot degree centrality trends over time with consistent colors for each node\n",
    "plot()\n",
    "\n",
    "for node in nodes\n",
    "    plot!(df_plot[df_plot.Node .== node, :Year], df_plot[df_plot.Node .== node, :DegreeCentrality],\n",
    "          label=\"Node $node\", color=node_colors[node], marker=:auto, linewidth=2)\n",
    "end\n",
    "\n",
    "xlabel!(\"Year\")\n",
    "ylabel!(\"Degree Centrality\")\n",
    "title!(\"Degree Centrality Over Time\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49c89897",
   "metadata": {},
   "source": [
    "## Inferences: "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1yLrAjupwtjn",
   "metadata": {
    "id": "1yLrAjupwtjn"
   },
   "source": [
    "Node 1 and Node 3 show overall growth in degree centrality over the specified time periods (2020 - 2023), while Node 2 starts with no connections in the first period (2020) but experiences substantial growth in the later periods."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e57dda2",
   "metadata": {
    "id": "Avp9_gtjwtjn"
   },
   "source": [
    "## Homophily"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7abf532",
   "metadata": {},
   "source": [
    "To what extent do LinkedIn connections exhibit homophily based on attributes such as education and job titles?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "c3784691",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-f163df1f-1\">\n",
       "  <g transform=\"translate(67.16,47.2)\">\n",
       "    <path fill=\"none\" d=\"M-12.07,-0.35 L12.07,0.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.04,36.85)\">\n",
       "    <path fill=\"none\" d=\"M-8.73,8.89 L8.73,-8.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.44,36.33)\">\n",
       "    <path fill=\"none\" d=\"M-4.57,9.25 L4.57,-9.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.01,33.76)\">\n",
       "    <path fill=\"none\" d=\"M-3.38,11.78 L3.38,-11.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.86,49.82)\">\n",
       "    <path fill=\"none\" d=\"M-10.86,-2.6 L10.86,2.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.08,48.56)\">\n",
       "    <path fill=\"none\" d=\"M-7.05,-1.41 L7.05,1.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.74,45.27)\">\n",
       "    <path fill=\"none\" d=\"M-9.68,1.29 L9.68,-1.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.95,45.73)\">\n",
       "    <path fill=\"none\" d=\"M-5.89,0.83 L5.89,-0.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.86,39.82)\">\n",
       "    <path fill=\"none\" d=\"M-8.32,6.06 L8.32,-6.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.52,39.76)\">\n",
       "    <path fill=\"none\" d=\"M1.44,5.77 L-1.44,-5.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.69,34.48)\">\n",
       "    <path fill=\"none\" d=\"M-10.42,11.25 L10.42,-11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.85,38.94)\">\n",
       "    <path fill=\"none\" d=\"M-3.88,6.66 L3.88,-6.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.49,37.29)\">\n",
       "    <path fill=\"none\" d=\"M0.67,8.23 L-0.67,-8.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.54,37.15)\">\n",
       "    <path fill=\"none\" d=\"M-12.95,8.76 L12.95,-8.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.86,33.77)\">\n",
       "    <path fill=\"none\" d=\"M-6.89,11.84 L6.89,-11.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.17,35.29)\">\n",
       "    <path fill=\"none\" d=\"M-0.8,10.23 L0.8,-10.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.25,41)\">\n",
       "    <path fill=\"none\" d=\"M-1.55,4.55 L1.55,-4.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.52,54.85)\">\n",
       "    <path fill=\"none\" d=\"M-11.86,-7.21 L11.86,7.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.4,41.68)\">\n",
       "    <path fill=\"none\" d=\"M-16.43,4.64 L16.43,-4.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.68,57.56)\">\n",
       "    <path fill=\"none\" d=\"M1.4,-9.47 L-1.4,9.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.68,51.96)\">\n",
       "    <path fill=\"none\" d=\"M0.44,-3.87 L-0.44,3.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.18,58.87)\">\n",
       "    <path fill=\"none\" d=\"M4.57,-10.82 L-4.57,10.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.02,54.17)\">\n",
       "    <path fill=\"none\" d=\"M6.2,-6.3 L-6.2,6.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.84,60.24)\">\n",
       "    <path fill=\"none\" d=\"M1.3,-12.15 L-1.3,12.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.86,56.51)\">\n",
       "    <path fill=\"none\" d=\"M5.63,-8.53 L-5.63,8.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.77,54.62)\">\n",
       "    <path fill=\"none\" d=\"M2.1,-6.55 L-2.1,6.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.54,53.32)\">\n",
       "    <path fill=\"none\" d=\"M-3.5,-5.35 L3.5,5.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.85,56.41)\">\n",
       "    <path fill=\"none\" d=\"M-6.69,-8.48 L6.69,8.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.64,60.84)\">\n",
       "    <path fill=\"none\" d=\"M-2.16,-12.76 L2.16,12.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.6,58.96)\">\n",
       "    <path fill=\"none\" d=\"M-3.89,-10.91 L3.89,10.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.21,49.63)\">\n",
       "    <path fill=\"none\" d=\"M2.76,-1.92 L-2.76,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.43,56.21)\">\n",
       "    <path fill=\"none\" d=\"M-1.87,-8.13 L1.87,8.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.74,51.72)\">\n",
       "    <path fill=\"none\" d=\"M5.28,-3.98 L-5.28,3.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.69,59.53)\">\n",
       "    <path fill=\"none\" d=\"M-7.65,-11.56 L7.65,11.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.79,49.98)\">\n",
       "    <path fill=\"none\" d=\"M18.69,-2.9 L-18.69,2.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.53,46.51)\">\n",
       "    <path fill=\"none\" d=\"M18.91,0.27 L-18.91,-0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.42,37.46)\">\n",
       "    <path fill=\"none\" d=\"M14.45,8.51 L-14.45,-8.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.29,43.36)\">\n",
       "    <path fill=\"none\" d=\"M18.21,3.14 L-18.21,-3.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.84,40.4)\">\n",
       "    <path fill=\"none\" d=\"M16.79,5.84 L-16.79,-5.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.41,55.25)\">\n",
       "    <path fill=\"none\" d=\"M0.54,-6.36 L-0.54,6.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.29,42.08)\">\n",
       "    <path fill=\"none\" d=\"M-3.37,4.38 L3.37,-4.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.17,31.73)\">\n",
       "    <path fill=\"none\" d=\"M-6.94,-4.01 L6.94,4.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.57,31.21)\">\n",
       "    <path fill=\"none\" d=\"M-11.38,-4.7 L11.38,4.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.14,28.64)\">\n",
       "    <path fill=\"none\" d=\"M-12.94,-7.13 L12.94,7.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.11,57.87)\">\n",
       "    <path fill=\"none\" d=\"M-0.49,-3.75 L0.49,3.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.99,44.7)\">\n",
       "    <path fill=\"none\" d=\"M-4.75,6.97 L4.75,-6.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.32,56.61)\">\n",
       "    <path fill=\"none\" d=\"M-3.62,-5.13 L3.62,5.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.2,43.45)\">\n",
       "    <path fill=\"none\" d=\"M-8.06,5.95 L8.06,-5.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.99,53.32)\">\n",
       "    <path fill=\"none\" d=\"M-1.54,-8.3 L1.54,8.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.87,40.15)\">\n",
       "    <path fill=\"none\" d=\"M-5.2,2.8 L5.2,-2.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.2,53.77)\">\n",
       "    <path fill=\"none\" d=\"M-4.84,-7.94 L4.84,7.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.08,40.61)\">\n",
       "    <path fill=\"none\" d=\"M-8.84,3.42 L8.84,-3.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.3,59.64)\">\n",
       "    <path fill=\"none\" d=\"M13.79,-2.89 L-13.79,2.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.18,46.47)\">\n",
       "    <path fill=\"none\" d=\"M9.55,8.88 L-9.55,-8.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.37,53.25)\">\n",
       "    <path fill=\"none\" d=\"M15.19,-8.83 L-15.19,8.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.25,40.08)\">\n",
       "    <path fill=\"none\" d=\"M10.04,3.01 L-10.04,-3.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.54,61.52)\">\n",
       "    <path fill=\"none\" d=\"M6.01,-1.06 L-6.01,1.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.42,48.36)\">\n",
       "    <path fill=\"none\" d=\"M2.58,10.52 L-2.58,-10.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.14,57.89)\">\n",
       "    <path fill=\"none\" d=\"M6.98,-4.17 L-6.98,4.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.02,44.72)\">\n",
       "    <path fill=\"none\" d=\"M2.97,6.92 L-2.97,-6.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.95,55.8)\">\n",
       "    <path fill=\"none\" d=\"M16.59,-6.47 L-16.59,6.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.83,42.64)\">\n",
       "    <path fill=\"none\" d=\"M11.77,5.37 L-11.77,-5.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.84,63.39)\">\n",
       "    <path fill=\"none\" d=\"M10.26,0.42 L-10.26,-0.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.73,50.23)\">\n",
       "    <path fill=\"none\" d=\"M6.56,12.45 L-6.56,-12.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.1,51.48)\">\n",
       "    <path fill=\"none\" d=\"M11.23,-10.39 L-11.23,10.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.98,38.32)\">\n",
       "    <path fill=\"none\" d=\"M5.72,1.34 L-5.72,-1.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.5,58.41)\">\n",
       "    <path fill=\"none\" d=\"M17,-4.07 L-17,4.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.38,45.25)\">\n",
       "    <path fill=\"none\" d=\"M12.49,7.82 L-12.49,-7.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.79,57.18)\">\n",
       "    <path fill=\"none\" d=\"M12.45,-5.07 L-12.45,5.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.68,44.01)\">\n",
       "    <path fill=\"none\" d=\"M7.95,6.47 L-7.95,-6.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.47,61.91)\">\n",
       "    <path fill=\"none\" d=\"M14.88,-0.89 L-14.88,0.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.35,48.74)\">\n",
       "    <path fill=\"none\" d=\"M10.79,11.11 L-10.79,-11.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.57,60.55)\">\n",
       "    <path fill=\"none\" d=\"M10.05,-2 L-10.05,2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.46,47.38)\">\n",
       "    <path fill=\"none\" d=\"M6.18,9.64 L-6.18,-9.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.9,54.48)\">\n",
       "    <path fill=\"none\" d=\"M11.78,-7.55 L-11.78,7.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.78,41.32)\">\n",
       "    <path fill=\"none\" d=\"M6.84,3.94 L-6.84,-3.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.2,54.3)\">\n",
       "    <path fill=\"none\" d=\"M7.39,-7.54 L-7.39,7.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.08,41.13)\">\n",
       "    <path fill=\"none\" d=\"M2.67,3.43 L-2.67,-3.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.1,24.86)\">\n",
       "    <path fill=\"none\" d=\"M10.53,-10.65 L-10.53,10.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.58,32)\">\n",
       "    <path fill=\"none\" d=\"M18.32,-4.17 L-18.32,4.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.26,23.4)\">\n",
       "    <path fill=\"none\" d=\"M7.04,-11.97 L-7.04,11.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.04,29.12)\">\n",
       "    <path fill=\"none\" d=\"M15.95,-6.78 L-15.95,6.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.56,26.61)\">\n",
       "    <path fill=\"none\" d=\"M13.7,-9.07 L-13.7,9.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.53,22.45)\">\n",
       "    <path fill=\"none\" d=\"M2.73,-12.84 L-2.73,12.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.99,34.7)\">\n",
       "    <path fill=\"none\" d=\"M-6.79,-1.49 L6.79,1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.65,34.64)\">\n",
       "    <path fill=\"none\" d=\"M-18.07,-1.75 L18.07,1.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.82,29.36)\">\n",
       "    <path fill=\"none\" d=\"M-5.7,-6.13 L5.7,6.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.98,33.83)\">\n",
       "    <path fill=\"none\" d=\"M-11.79,-2.38 L11.79,2.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.62,32.17)\">\n",
       "    <path fill=\"none\" d=\"M-17.17,-3.99 L17.17,3.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.67,32.03)\">\n",
       "    <path fill=\"none\" d=\"M-2.92,-3.43 L2.92,3.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.99,28.65)\">\n",
       "    <path fill=\"none\" d=\"M-9.29,-6.98 L9.29,6.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.3,30.17)\">\n",
       "    <path fill=\"none\" d=\"M-15.61,-5.8 L15.61,5.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.37,35.88)\">\n",
       "    <path fill=\"none\" d=\"M-14.33,-0.61 L14.33,0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.65,49.73)\">\n",
       "    <path fill=\"none\" d=\"M-4.42,11.92 L4.42,-11.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.93,65.61)\">\n",
       "    <path fill=\"none\" d=\"M13.06,-2.39 L-13.06,2.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.93,60.01)\">\n",
       "    <path fill=\"none\" d=\"M12.08,2.52 L-12.08,-2.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.42,66.91)\">\n",
       "    <path fill=\"none\" d=\"M16.6,-3.63 L-16.6,3.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.27,62.22)\">\n",
       "    <path fill=\"none\" d=\"M18.67,0.62 L-18.67,-0.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.12,72.16)\">\n",
       "    <path fill=\"none\" d=\"M-14.93,-8.45 L14.93,8.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.43,76.84)\">\n",
       "    <path fill=\"none\" d=\"M-4.24,-12.68 L4.24,12.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.97,77.28)\">\n",
       "    <path fill=\"none\" d=\"M-0.19,-13.09 L0.19,13.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.28,74.33)\">\n",
       "    <path fill=\"none\" d=\"M-11.4,-10.41 L11.4,10.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.52,75.93)\">\n",
       "    <path fill=\"none\" d=\"M-7.97,-11.86 L7.97,11.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.43,77.07)\">\n",
       "    <path fill=\"none\" d=\"M4.86,-12.93 L-4.86,12.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.08,68.29)\">\n",
       "    <path fill=\"none\" d=\"M13.06,-4.8 L-13.06,4.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.11,64.56)\">\n",
       "    <path fill=\"none\" d=\"M17.84,-1.5 L-17.84,1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.01,62.66)\">\n",
       "    <path fill=\"none\" d=\"M13.92,0.21 L-13.92,-0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.79,61.37)\">\n",
       "    <path fill=\"none\" d=\"M7.2,1.22 L-7.2,-1.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.1,64.46)\">\n",
       "    <path fill=\"none\" d=\"M3.96,-1.09 L-3.96,1.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.89,68.89)\">\n",
       "    <path fill=\"none\" d=\"M9.43,-5.2 L-9.43,5.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.85,67.01)\">\n",
       "    <path fill=\"none\" d=\"M7.38,-3.41 L-7.38,3.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.46,57.68)\">\n",
       "    <path fill=\"none\" d=\"M15.63,4.72 L-15.63,-4.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.68,64.25)\">\n",
       "    <path fill=\"none\" d=\"M9.29,-1.14 L-9.29,1.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.99,59.77)\">\n",
       "    <path fill=\"none\" d=\"M17.99,2.84 L-17.99,-2.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.94,67.58)\">\n",
       "    <path fill=\"none\" d=\"M3.75,-3.64 L-3.75,3.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-f163df1f-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-f163df1f-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-f163df1f-4\">\n",
       "  <g transform=\"translate(53.27,46.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.05,47.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.81,26.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.61,25.86)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.76,20.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.45,52.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.88,50.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.22,43.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.63,44.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.84,56.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.97,43.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.32,60.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.52,52.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.13,48.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.92,63.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.44,40.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.23,53.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.83,51.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.17,60.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.39,58.2)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.04,46.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.64,45.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.68,13.16)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,27.43)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105,10.24)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.56,21.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.6,16.66)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.53,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.45,32.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,32.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.11,22.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.43,31.09)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.71,27.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.81,27.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.45,20.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.07,23.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.22,35.2)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.76,62.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.53,36.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.1,68.32)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.09,57.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.08,70.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.78,61.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.48,81.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.09,90.78)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.18,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.8,85.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.28,88.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.1,91.25)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.4,73.69)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.46,66.21)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.27,62.43)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.81,59.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.44,66.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.02,74.89)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.94,71.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.15,52.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.59,65.61)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.21,56.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.11,72.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.32,53.16)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,46.21)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.57,28.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.31,39.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.4,33.99)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-f163df1f-5\">\n",
       "  <g transform=\"translate(53.27,46.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.05,47.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.81,26.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.61,25.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.76,20.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.45,52.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.88,50.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.22,43.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.63,44.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.84,56.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.97,43.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.32,60.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.52,52.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.13,48.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.92,63.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.44,40.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.23,53.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.83,51.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.17,60.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.39,58.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.04,46.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.64,45.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.68,13.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,27.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105,10.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.56,21.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.6,16.66)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.53,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.45,32.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,32.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.11,22.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.43,31.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.71,27.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.81,27.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.45,20.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.07,23.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.22,35.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.76,62.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.53,36.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.1,68.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.09,57.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.08,70.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.78,61.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.48,81.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.09,90.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.18,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.8,85.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.28,88.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.1,91.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.4,73.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.46,66.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.27,62.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.81,59.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.44,66.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.02,74.89)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.94,71.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.15,52.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.59,65.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.21,56.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.11,72.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.32,53.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,46.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.57,28.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.31,39.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.4,33.99)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-a0c6ec63\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-a0c6ec63-1\">\n",
       "  <g transform=\"translate(67.16,47.2)\">\n",
       "    <path fill=\"none\" d=\"M-12.07,-0.35 L12.07,0.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.04,36.85)\">\n",
       "    <path fill=\"none\" d=\"M-8.73,8.89 L8.73,-8.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.44,36.33)\">\n",
       "    <path fill=\"none\" d=\"M-4.57,9.25 L4.57,-9.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.01,33.76)\">\n",
       "    <path fill=\"none\" d=\"M-3.38,11.78 L3.38,-11.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.86,49.82)\">\n",
       "    <path fill=\"none\" d=\"M-10.86,-2.6 L10.86,2.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.08,48.56)\">\n",
       "    <path fill=\"none\" d=\"M-7.05,-1.41 L7.05,1.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.74,45.27)\">\n",
       "    <path fill=\"none\" d=\"M-9.68,1.29 L9.68,-1.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.95,45.73)\">\n",
       "    <path fill=\"none\" d=\"M-5.89,0.83 L5.89,-0.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.86,39.82)\">\n",
       "    <path fill=\"none\" d=\"M-8.32,6.06 L8.32,-6.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.52,39.76)\">\n",
       "    <path fill=\"none\" d=\"M1.44,5.77 L-1.44,-5.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.69,34.48)\">\n",
       "    <path fill=\"none\" d=\"M-10.42,11.25 L10.42,-11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.85,38.94)\">\n",
       "    <path fill=\"none\" d=\"M-3.88,6.66 L3.88,-6.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.49,37.29)\">\n",
       "    <path fill=\"none\" d=\"M0.67,8.23 L-0.67,-8.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.54,37.15)\">\n",
       "    <path fill=\"none\" d=\"M-12.95,8.76 L12.95,-8.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.86,33.77)\">\n",
       "    <path fill=\"none\" d=\"M-6.89,11.84 L6.89,-11.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.17,35.29)\">\n",
       "    <path fill=\"none\" d=\"M-0.8,10.23 L0.8,-10.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.25,41)\">\n",
       "    <path fill=\"none\" d=\"M-1.55,4.55 L1.55,-4.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.52,54.85)\">\n",
       "    <path fill=\"none\" d=\"M-11.86,-7.21 L11.86,7.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.4,41.68)\">\n",
       "    <path fill=\"none\" d=\"M-16.43,4.64 L16.43,-4.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.68,57.56)\">\n",
       "    <path fill=\"none\" d=\"M1.4,-9.47 L-1.4,9.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.68,51.96)\">\n",
       "    <path fill=\"none\" d=\"M0.44,-3.87 L-0.44,3.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.18,58.87)\">\n",
       "    <path fill=\"none\" d=\"M4.57,-10.82 L-4.57,10.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.02,54.17)\">\n",
       "    <path fill=\"none\" d=\"M6.2,-6.3 L-6.2,6.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.84,60.24)\">\n",
       "    <path fill=\"none\" d=\"M1.3,-12.15 L-1.3,12.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.86,56.51)\">\n",
       "    <path fill=\"none\" d=\"M5.63,-8.53 L-5.63,8.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.77,54.62)\">\n",
       "    <path fill=\"none\" d=\"M2.1,-6.55 L-2.1,6.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.54,53.32)\">\n",
       "    <path fill=\"none\" d=\"M-3.5,-5.35 L3.5,5.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.85,56.41)\">\n",
       "    <path fill=\"none\" d=\"M-6.69,-8.48 L6.69,8.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.64,60.84)\">\n",
       "    <path fill=\"none\" d=\"M-2.16,-12.76 L2.16,12.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.6,58.96)\">\n",
       "    <path fill=\"none\" d=\"M-3.89,-10.91 L3.89,10.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.21,49.63)\">\n",
       "    <path fill=\"none\" d=\"M2.76,-1.92 L-2.76,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.43,56.21)\">\n",
       "    <path fill=\"none\" d=\"M-1.87,-8.13 L1.87,8.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.74,51.72)\">\n",
       "    <path fill=\"none\" d=\"M5.28,-3.98 L-5.28,3.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.69,59.53)\">\n",
       "    <path fill=\"none\" d=\"M-7.65,-11.56 L7.65,11.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.79,49.98)\">\n",
       "    <path fill=\"none\" d=\"M18.69,-2.9 L-18.69,2.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.53,46.51)\">\n",
       "    <path fill=\"none\" d=\"M18.91,0.27 L-18.91,-0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.42,37.46)\">\n",
       "    <path fill=\"none\" d=\"M14.45,8.51 L-14.45,-8.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.29,43.36)\">\n",
       "    <path fill=\"none\" d=\"M18.21,3.14 L-18.21,-3.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.84,40.4)\">\n",
       "    <path fill=\"none\" d=\"M16.79,5.84 L-16.79,-5.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.41,55.25)\">\n",
       "    <path fill=\"none\" d=\"M0.54,-6.36 L-0.54,6.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.29,42.08)\">\n",
       "    <path fill=\"none\" d=\"M-3.37,4.38 L3.37,-4.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.17,31.73)\">\n",
       "    <path fill=\"none\" d=\"M-6.94,-4.01 L6.94,4.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.57,31.21)\">\n",
       "    <path fill=\"none\" d=\"M-11.38,-4.7 L11.38,4.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.14,28.64)\">\n",
       "    <path fill=\"none\" d=\"M-12.94,-7.13 L12.94,7.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.11,57.87)\">\n",
       "    <path fill=\"none\" d=\"M-0.49,-3.75 L0.49,3.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.99,44.7)\">\n",
       "    <path fill=\"none\" d=\"M-4.75,6.97 L4.75,-6.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.32,56.61)\">\n",
       "    <path fill=\"none\" d=\"M-3.62,-5.13 L3.62,5.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.2,43.45)\">\n",
       "    <path fill=\"none\" d=\"M-8.06,5.95 L8.06,-5.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.99,53.32)\">\n",
       "    <path fill=\"none\" d=\"M-1.54,-8.3 L1.54,8.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.87,40.15)\">\n",
       "    <path fill=\"none\" d=\"M-5.2,2.8 L5.2,-2.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.2,53.77)\">\n",
       "    <path fill=\"none\" d=\"M-4.84,-7.94 L4.84,7.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.08,40.61)\">\n",
       "    <path fill=\"none\" d=\"M-8.84,3.42 L8.84,-3.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.3,59.64)\">\n",
       "    <path fill=\"none\" d=\"M13.79,-2.89 L-13.79,2.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.18,46.47)\">\n",
       "    <path fill=\"none\" d=\"M9.55,8.88 L-9.55,-8.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.37,53.25)\">\n",
       "    <path fill=\"none\" d=\"M15.19,-8.83 L-15.19,8.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.25,40.08)\">\n",
       "    <path fill=\"none\" d=\"M10.04,3.01 L-10.04,-3.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.54,61.52)\">\n",
       "    <path fill=\"none\" d=\"M6.01,-1.06 L-6.01,1.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.42,48.36)\">\n",
       "    <path fill=\"none\" d=\"M2.58,10.52 L-2.58,-10.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.14,57.89)\">\n",
       "    <path fill=\"none\" d=\"M6.98,-4.17 L-6.98,4.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.02,44.72)\">\n",
       "    <path fill=\"none\" d=\"M2.97,6.92 L-2.97,-6.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.95,55.8)\">\n",
       "    <path fill=\"none\" d=\"M16.59,-6.47 L-16.59,6.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.83,42.64)\">\n",
       "    <path fill=\"none\" d=\"M11.77,5.37 L-11.77,-5.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.84,63.39)\">\n",
       "    <path fill=\"none\" d=\"M10.26,0.42 L-10.26,-0.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.73,50.23)\">\n",
       "    <path fill=\"none\" d=\"M6.56,12.45 L-6.56,-12.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.1,51.48)\">\n",
       "    <path fill=\"none\" d=\"M11.23,-10.39 L-11.23,10.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.98,38.32)\">\n",
       "    <path fill=\"none\" d=\"M5.72,1.34 L-5.72,-1.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.5,58.41)\">\n",
       "    <path fill=\"none\" d=\"M17,-4.07 L-17,4.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.38,45.25)\">\n",
       "    <path fill=\"none\" d=\"M12.49,7.82 L-12.49,-7.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.79,57.18)\">\n",
       "    <path fill=\"none\" d=\"M12.45,-5.07 L-12.45,5.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.68,44.01)\">\n",
       "    <path fill=\"none\" d=\"M7.95,6.47 L-7.95,-6.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.47,61.91)\">\n",
       "    <path fill=\"none\" d=\"M14.88,-0.89 L-14.88,0.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.35,48.74)\">\n",
       "    <path fill=\"none\" d=\"M10.79,11.11 L-10.79,-11.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.57,60.55)\">\n",
       "    <path fill=\"none\" d=\"M10.05,-2 L-10.05,2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.46,47.38)\">\n",
       "    <path fill=\"none\" d=\"M6.18,9.64 L-6.18,-9.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.9,54.48)\">\n",
       "    <path fill=\"none\" d=\"M11.78,-7.55 L-11.78,7.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.78,41.32)\">\n",
       "    <path fill=\"none\" d=\"M6.84,3.94 L-6.84,-3.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.2,54.3)\">\n",
       "    <path fill=\"none\" d=\"M7.39,-7.54 L-7.39,7.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.08,41.13)\">\n",
       "    <path fill=\"none\" d=\"M2.67,3.43 L-2.67,-3.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.1,24.86)\">\n",
       "    <path fill=\"none\" d=\"M10.53,-10.65 L-10.53,10.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.58,32)\">\n",
       "    <path fill=\"none\" d=\"M18.32,-4.17 L-18.32,4.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.26,23.4)\">\n",
       "    <path fill=\"none\" d=\"M7.04,-11.97 L-7.04,11.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.04,29.12)\">\n",
       "    <path fill=\"none\" d=\"M15.95,-6.78 L-15.95,6.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.56,26.61)\">\n",
       "    <path fill=\"none\" d=\"M13.7,-9.07 L-13.7,9.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.53,22.45)\">\n",
       "    <path fill=\"none\" d=\"M2.73,-12.84 L-2.73,12.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.99,34.7)\">\n",
       "    <path fill=\"none\" d=\"M-6.79,-1.49 L6.79,1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.65,34.64)\">\n",
       "    <path fill=\"none\" d=\"M-18.07,-1.75 L18.07,1.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.82,29.36)\">\n",
       "    <path fill=\"none\" d=\"M-5.7,-6.13 L5.7,6.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.98,33.83)\">\n",
       "    <path fill=\"none\" d=\"M-11.79,-2.38 L11.79,2.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.62,32.17)\">\n",
       "    <path fill=\"none\" d=\"M-17.17,-3.99 L17.17,3.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.67,32.03)\">\n",
       "    <path fill=\"none\" d=\"M-2.92,-3.43 L2.92,3.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.99,28.65)\">\n",
       "    <path fill=\"none\" d=\"M-9.29,-6.98 L9.29,6.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.3,30.17)\">\n",
       "    <path fill=\"none\" d=\"M-15.61,-5.8 L15.61,5.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.37,35.88)\">\n",
       "    <path fill=\"none\" d=\"M-14.33,-0.61 L14.33,0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.65,49.73)\">\n",
       "    <path fill=\"none\" d=\"M-4.42,11.92 L4.42,-11.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.93,65.61)\">\n",
       "    <path fill=\"none\" d=\"M13.06,-2.39 L-13.06,2.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.93,60.01)\">\n",
       "    <path fill=\"none\" d=\"M12.08,2.52 L-12.08,-2.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.42,66.91)\">\n",
       "    <path fill=\"none\" d=\"M16.6,-3.63 L-16.6,3.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.27,62.22)\">\n",
       "    <path fill=\"none\" d=\"M18.67,0.62 L-18.67,-0.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.12,72.16)\">\n",
       "    <path fill=\"none\" d=\"M-14.93,-8.45 L14.93,8.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.43,76.84)\">\n",
       "    <path fill=\"none\" d=\"M-4.24,-12.68 L4.24,12.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.97,77.28)\">\n",
       "    <path fill=\"none\" d=\"M-0.19,-13.09 L0.19,13.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.28,74.33)\">\n",
       "    <path fill=\"none\" d=\"M-11.4,-10.41 L11.4,10.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.52,75.93)\">\n",
       "    <path fill=\"none\" d=\"M-7.97,-11.86 L7.97,11.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.43,77.07)\">\n",
       "    <path fill=\"none\" d=\"M4.86,-12.93 L-4.86,12.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.08,68.29)\">\n",
       "    <path fill=\"none\" d=\"M13.06,-4.8 L-13.06,4.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.11,64.56)\">\n",
       "    <path fill=\"none\" d=\"M17.84,-1.5 L-17.84,1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.01,62.66)\">\n",
       "    <path fill=\"none\" d=\"M13.92,0.21 L-13.92,-0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.79,61.37)\">\n",
       "    <path fill=\"none\" d=\"M7.2,1.22 L-7.2,-1.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.1,64.46)\">\n",
       "    <path fill=\"none\" d=\"M3.96,-1.09 L-3.96,1.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.89,68.89)\">\n",
       "    <path fill=\"none\" d=\"M9.43,-5.2 L-9.43,5.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.85,67.01)\">\n",
       "    <path fill=\"none\" d=\"M7.38,-3.41 L-7.38,3.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.46,57.68)\">\n",
       "    <path fill=\"none\" d=\"M15.63,4.72 L-15.63,-4.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.68,64.25)\">\n",
       "    <path fill=\"none\" d=\"M9.29,-1.14 L-9.29,1.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.99,59.77)\">\n",
       "    <path fill=\"none\" d=\"M17.99,2.84 L-17.99,-2.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.94,67.58)\">\n",
       "    <path fill=\"none\" d=\"M3.75,-3.64 L-3.75,3.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-a0c6ec63-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-a0c6ec63-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-a0c6ec63-4\">\n",
       "  <g transform=\"translate(53.27,46.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.05,47.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.81,26.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.61,25.86)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.76,20.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.45,52.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.88,50.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.22,43.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.63,44.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.84,56.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.97,43.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.32,60.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.52,52.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.13,48.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.92,63.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.44,40.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.23,53.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.83,51.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.17,60.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.39,58.2)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.04,46.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.64,45.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.68,13.16)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,27.43)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105,10.24)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.56,21.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.6,16.66)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.53,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.45,32.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,32.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.11,22.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.43,31.09)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.71,27.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.81,27.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.45,20.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.07,23.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.22,35.2)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.76,62.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.53,36.57)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.1,68.32)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.09,57.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.08,70.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.78,61.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.48,81.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.09,90.78)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.18,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.8,85.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.28,88.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.1,91.25)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.4,73.69)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.46,66.21)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.27,62.43)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.81,59.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.44,66.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.02,74.89)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.94,71.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.15,52.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.59,65.61)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.21,56.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.11,72.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.32,53.16)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,46.21)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.57,28.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.31,39.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.4,33.99)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-a0c6ec63-5\">\n",
       "  <g transform=\"translate(53.27,46.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.05,47.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.81,26.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.61,25.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.76,20.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.45,52.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.88,50.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.22,43.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.63,44.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.84,56.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.97,43.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.32,60.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.52,52.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(116.13,48.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.92,63.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.44,40.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.23,53.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.83,51.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.17,60.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.39,58.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.04,46.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.64,45.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.68,13.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,27.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105,10.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.56,21.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.6,16.66)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.53,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.45,32.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,32.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.11,22.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.43,31.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.71,27.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.81,27.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.45,20.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.07,23.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.22,35.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.76,62.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.53,36.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.1,68.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.09,57.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.08,70.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.78,61.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.48,81.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.09,90.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.18,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.8,85.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.28,88.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.1,91.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.4,73.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.46,66.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.27,62.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.81,59.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.44,66.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.02,74.89)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.94,71.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.15,52.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.59,65.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.21,56.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.11,72.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.32,53.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,46.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.57,28.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.31,39.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.4,33.99)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.26502218501669655cx, -0.07547830638501471cy), (0.14453448551869702cx, -0.058763723024461555cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.278315540211571cx, -0.10221075617442939cy), (0.01801540321552321cx, -0.52884457781379cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2857837826624675cx, -0.1060184103069846cy), (-0.1307500820848814cx, -0.5500631513982518cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.28983389501864393cx, -0.10713116367853721cy), (-0.1750348750303903cx, -0.6724294486017024cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.26663672419422035cx, -0.06679096305916096cy), (0.10192506798027043cx, 0.05810036992386377cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2661677014055628cx, -0.06830063754384526cy), (-0.02691773018897003cx, -0.0006077551545451906cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2655355617645692cx, -0.08250011225738396cy), (0.06299409338364328cx, -0.14457725193103788cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2655885384511166cx, -0.08277373400093525cy), (-0.06569533571264602cx, -0.12240843279984003cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.27440973447373024cx, -0.0989953937411582cy), (0.007848219900734196cx, -0.38984432500668076cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.3013740032023705cx, -0.1072831136985061cy), (-0.35008199996193795cx, -0.384351449066084cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12285219962685462cx, 0.31323861065683456cy), (-0.4826568638855426cx, 0.3854037912234052cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12264116205711846cx, 0.30891627690087325cy), (-0.34990408858021665cx, 0.2989681364400248cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12349339241445978cx, 0.3023204149394253cy), (-0.12089892403552505cx, 0.2435639637238937cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12474127960138218cx, 0.32080416413478735cy), (-0.009697081452880216cx, 0.37306565655707896cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12918756611333765cx, 0.32863385979784954cy), (-0.1909783473227557cx, 0.5782284901373731cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12767325494116913cx, 0.3265133151180615cy), (-0.12294492804704173cx, 0.49003335090079836cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12512192911894027cx, 0.2973997804861449cy), (-0.40530991624077917cx, 0.0710789547708329cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.1230877476188679cx, 0.31485253674068253cy), (-0.1920625711299522cx, 0.36934824457568993cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.12338140297311971cx, 0.3028031659298079cy), (-0.48734167123793215cx, 0.16625999584237044cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.13537472573369794cx, 0.3346250613309541cy), (0.008086624586196432cx, 0.5092091966186032cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.2960050772982201cx, -0.0767427617657892cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.1755173778002206cx, -0.05749926764368707cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.035704940302172306cx, -0.5543125722224302cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.12052878744912876cx, -0.5793387999394471cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.16886369275081414cx, -0.7028178505144504cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.13129342108427022cx, 0.06805216863049202cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.0029196457036873014cx, 0.007834369067398761cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.09346360891729422cx, -0.15033460242263263cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.03527879686554247cx, -0.12843940503498608cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6810313222770921cx, 0.1530890338596611cy), 0.012403473458920847w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.14891464961256884cx, 0.5069777311888897cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.4338309636285351cx, 0.058909800427007664cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.22261780001778053cx, 0.37463184648640224cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.5176032447715087cx, 0.15949422694220816cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.010181626186801851cx, 0.5342653231195871cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9909636831205243cx, 0.07575623082862215cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, -0.09085074107127256cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.834029034349721cx, -0.5251569104377334cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9741893754283941cx, -0.24216314671331596cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.921634422735556cx, -0.38424901768654385cy), 0.012403473458920847w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.2960050772982201cx, -0.0767427617657892cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.1755173778002206cx, -0.05749926764368707cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.035704940302172306cx, -0.5543125722224302cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.12052878744912876cx, -0.5793387999394471cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.16886369275081414cx, -0.7028178505144504cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.13129342108427022cx, 0.06805216863049202cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.0029196457036873014cx, 0.007834369067398761cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.09346360891729422cx, -0.15033460242263263cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.03527879686554247cx, -0.12843940503498608cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6810313222770921cx, 0.1530890338596611cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.14891464961256884cx, 0.5069777311888897cy), \"56\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.4338309636285351cx, 0.058909800427007664cy), \"57\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.22261780001778053cx, 0.37463184648640224cy), \"58\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5176032447715087cx, 0.15949422694220816cy), \"59\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.010181626186801851cx, 0.5342653231195871cy), \"60\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9909636831205243cx, 0.07575623082862215cy), \"61\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, -0.09085074107127256cy), \"62\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.834029034349721cx, -0.5251569104377334cy), \"63\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9741893754283941cx, -0.24216314671331596cy), \"64\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.921634422735556cx, -0.38424901768654385cy), \"65\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using CSV\n",
    "using DataFrames\n",
    "\n",
    "\n",
    "f=CSV.read(\"dataset_updated.csv\",DataFrame)\n",
    "\n",
    "\n",
    "f.Index = 1:nrow(f)\n",
    "\n",
    "f[!,2]\n",
    "\n",
    "\n",
    "h=unique(f[!,2])\n",
    "\n",
    "ed = Dict()\n",
    "\n",
    "\n",
    "count=0\n",
    "for i in h\n",
    "    count+=1\n",
    "    ed[i]=count\n",
    "end\n",
    "\n",
    "\n",
    "tu=()\n",
    "\n",
    "l=[]\n",
    "\n",
    "for i in eachrow(f)\n",
    "    #println((ed[i[:1]],ed[i[:2]]))\n",
    "    #println(i[:1])\n",
    "    push!(l, (ed[i[:1]],ed[i[:2]]))\n",
    "end\n",
    "\n",
    "\n",
    "\n",
    "using Graphs, GraphPlot\n",
    "\n",
    "g = let \n",
    "    edges = Graphs.Edge.(l)\n",
    "    Graph(edges)\n",
    "end\n",
    "\n",
    "gplot(g, nodelabel=1:count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "98ce76d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[32m\u001b[1m    Updating\u001b[22m\u001b[39m registry at `~/.julia/registries/General.toml`\n",
      "\u001b[32m\u001b[1m   Resolving\u001b[22m\u001b[39m package versions...\n",
      "\u001b[32m\u001b[1m  No Changes\u001b[22m\u001b[39m to `~/Downloads/Project.toml`\n",
      "\u001b[32m\u001b[1m  No Changes\u001b[22m\u001b[39m to `~/Downloads/Manifest.toml`\n"
     ]
    }
   ],
   "source": [
    "import Pkg\n",
    "Pkg.add(\"DataStructures\")\n",
    "using DataStructures"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "c55e1446",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "counts (generic function with 1 method)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using DataFrames\n",
    "\n",
    "\n",
    "function counts(obs::AbstractVector{T})::Dict{T,Int} where T\n",
    "    out = Dict{T,Int}()\n",
    "    count=DataStructures.counter(obs)\n",
    "    return count\n",
    "    out\n",
    "end\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7ecc4fee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "frequencies (generic function with 1 method)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Computing frequency values\n",
    "function frequencies(suma::Dict)\n",
    "    total=0\n",
    "    for (key, value) in suma\n",
    "        total=total+value\n",
    "    end\n",
    "    Dict(c => v / total for (c, v) in pairs(suma))\n",
    "    end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f9a3ea87",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "frequencies (generic function with 2 methods)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "function frequencies(vals)\n",
    "    counts = DataStructures.counter(vals)\n",
    "    total = length(vals)\n",
    "    Dict(c => v / total for (c, v) in pairs(counts))\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f27f0501",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "chance_homophily (generic function with 1 method)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Computing the chance homophily for the specified attributes\n",
    "function chance_homophily(sumq::Dict{T,Float64})::Float64 where T\n",
    "    tot=0\n",
    "    for i in values(sumq)\n",
    "        tot=tot+i^2\n",
    "    end\n",
    "    return tot\n",
    "end      \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d5c48889",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "chance_homophily (generic function with 2 methods)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "function chance_homophily(suma::Dict{T,Int})::Float64 where T\n",
    "    f=frequencies(suma)\n",
    "    chance_homophily(f)\n",
    "    #Dict(c => v / total for (c, v) in pairs(suma))\n",
    "    \n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "59c458c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "chance_homophily (generic function with 3 methods)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "function chance_homophily(x::Vector)::Float64\n",
    "    chance_homophily(counts(x))\n",
    "end\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "e6f22cd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.07861111111111112"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y=f[!,\"University\"]\n",
    "o=[]\n",
    "for i in y\n",
    "    #println(i)\n",
    "    push!(o,i)\n",
    "end\n",
    "chu=chance_homophily(o)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "904b6b4a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.02291666666666665"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y=f[!,\"Company\"]\n",
    "o=[]\n",
    "for i in y\n",
    "    #println(i)\n",
    "    push!(o,i)\n",
    "end\n",
    "chc=chance_homophily(o)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "72d7b228",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.11486111111111114"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y=f[!,\"Skills\"]\n",
    "o=[]\n",
    "for i in y\n",
    "    #println(i)\n",
    "    push!(o,i)\n",
    "end\n",
    "chs=chance_homophily(o)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d0c6f5dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.020694444444444453"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y=f[!,\"Position\"]\n",
    "o=[]\n",
    "for i in y\n",
    "    #println(i)\n",
    "    push!(o,i)\n",
    "end\n",
    "chp=chance_homophily(o)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8254a2d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.21222222222222223"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y=f[!,\"City\"]\n",
    "o=[]\n",
    "for i in y\n",
    "    #println(i)\n",
    "    push!(o,i)\n",
    "end\n",
    "chcity=chance_homophily(o)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7083f139",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "observed_homophily (generic function with 1 method)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Computing the observed homophily for the specified attributes\n",
    "function observed_homophily(G::Graphs.SimpleGraph,characteristics::Dict{Int,Any})\n",
    "    num_ties=0\n",
    "    num_same_ties=0\n",
    "    for edge in Graphs.edges(G)\n",
    "        n1, n2 = Graphs.src(edge), Graphs.dst(edge)\n",
    "        if haskey(characteristics, n1) && haskey(characteristics, n2)\n",
    "            \n",
    "            num_ties+=1\n",
    "\n",
    "            if characteristics[n1] == characteristics[n2]\n",
    "                num_same_ties+=1\n",
    "\n",
    "                \n",
    "            end\n",
    "        end\n",
    "    end\n",
    "    return (num_same_ties / num_ties)\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f917c95e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "extract_characteristic_dict (generic function with 1 method)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "function extract_characteristic_dict(df::DataFrame, characteristic::String)::Dict{Int,Any}\n",
    "    Dict(x.Index => x[characteristic] for x in eachrow(df))\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "9d9a258d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "observed_homophily (generic function with 2 methods)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "function observed_homophily(G::Graphs.SimpleGraph,observed::DataFrame,characteristic::String)\n",
    "    y=extract_characteristic_dict(observed,characteristic)\n",
    "    #print(y)\n",
    "    observed_homophily(G,y)\n",
    "\n",
    "    # TODO: your code here\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "9d384f4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.02608695652173913"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ohc=observed_homophily(g,f,\"Company\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "9f70f3db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.02608695652173913"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ohp=observed_homophily(g,f,\"Position\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "686afb3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.11304347826086956"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ohu=observed_homophily(g,f,\"University\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "dd90543b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.09565217391304348"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ohs=observed_homophily(g,f,\"Skills\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3557108e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.20869565217391303"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ohcity=observed_homophily(g,f,\"City\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "0a54c766",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>3×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">1Col</th><th style = \"text-align: left;\">City</th><th style = \"text-align: left;\">Company</th><th style = \"text-align: left;\">Position</th><th style = \"text-align: left;\">Skills</th><th style = \"text-align: left;\">University</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Any\" style = \"text-align: left;\">Any</th><th title = \"Any\" style = \"text-align: left;\">Any</th><th title = \"Any\" style = \"text-align: left;\">Any</th><th title = \"Any\" style = \"text-align: left;\">Any</th><th title = \"Any\" style = \"text-align: left;\">Any</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Chance Homophily</td><td style = \"text-align: left;\">0.212222</td><td style = \"text-align: left;\">0.0229167</td><td style = \"text-align: left;\">0.0206944</td><td style = \"text-align: left;\">0.114861</td><td style = \"text-align: left;\">0.0786111</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Observed Homophily</td><td style = \"text-align: left;\">0.208696</td><td style = \"text-align: left;\">0.026087</td><td style = \"text-align: left;\">0.026087</td><td style = \"text-align: left;\">0.0956522</td><td style = \"text-align: left;\">0.113043</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Result</td><td style = \"text-align: left;\">No Homophily</td><td style = \"text-align: left;\">Inverse</td><td style = \"text-align: left;\">Inverse </td><td style = \"text-align: left;\">Homophily</td><td style = \"text-align: left;\">Inverse </td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|cccccc}\n",
       "\t& 1Col & City & Company & Position & Skills & University\\\\\n",
       "\t\\hline\n",
       "\t& String & Any & Any & Any & Any & Any\\\\\n",
       "\t\\hline\n",
       "\t1 & Chance Homophily & 0.212222 & 0.0229167 & 0.0206944 & 0.114861 & 0.0786111 \\\\\n",
       "\t2 & Observed Homophily & 0.208696 & 0.026087 & 0.026087 & 0.0956522 & 0.113043 \\\\\n",
       "\t3 & Result & No Homophily & Inverse & Inverse  & Homophily & Inverse  \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m3×6 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m 1Col               \u001b[0m\u001b[1m City         \u001b[0m\u001b[1m Company   \u001b[0m\u001b[1m Position  \u001b[0m\u001b[1m Skills    \u001b[0m\u001b[1m Univ\u001b[0m ⋯\n",
       "     │\u001b[90m String             \u001b[0m\u001b[90m Any          \u001b[0m\u001b[90m Any       \u001b[0m\u001b[90m Any       \u001b[0m\u001b[90m Any       \u001b[0m\u001b[90m Any \u001b[0m ⋯\n",
       "─────┼──────────────────────────────────────────────────────────────────────────\n",
       "   1 │ Chance Homophily    0.212222      0.0229167  0.0206944  0.114861   0.07 ⋯\n",
       "   2 │ Observed Homophily  0.208696      0.026087   0.026087   0.0956522  0.11\n",
       "   3 │ Result              No Homophily  Inverse    Inverse    Homophily  Inve\n",
       "\u001b[36m                                                                1 column omitted\u001b[0m"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using DataFrames\n",
    "df = DataFrame()\n",
    "data = Dict(\"1Col\" => [\"Chance Homophily\", \"Observed Homophily\",\"Result\"],\n",
    "            \"Company\" => [chc,ohc,\"Inverse\"],\n",
    "            \"University\" => [chu,ohu,\"Inverse \"],\n",
    "            \"Position\" => [chp,ohp,\"Inverse \"],\n",
    "            \"City\" => [chcity,ohcity,\"No Homophily\"],\n",
    "            \"Skills\" => [chs,ohs,\"Homophily\"])\n",
    "df = DataFrame(data)\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f8ae061",
   "metadata": {},
   "source": [
    "## Inferences: "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83fcfb70",
   "metadata": {},
   "source": [
    "The above code has been used to analyse the homophily for the following attributes:\n",
    "\n",
    "City - There exists no homophily since the chance homophily almost equals the observed homophily.\n",
    "\n",
    "Company - There exists an inverse homophily since the observed homophily is greater than the chance homophily.\n",
    "\n",
    "Position - There exists an inverse homophily since the observed homophily is greater than the chance homophily.\n",
    "\n",
    "Skills - There exists a homophily since the chance homophily is lower than the observed homophily.\n",
    "\n",
    "University - There exists an inverse homophily since the observed homophily is greater than the chance homophily.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a83c2380",
   "metadata": {},
   "source": [
    "## Network Structure "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f106cf5a",
   "metadata": {},
   "source": [
    "How does the overall network structure of LinkedIn connections exhibit characteristics of strong and weak ties?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "25c35775",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-799961c7-1\">\n",
       "  <g transform=\"translate(76.72,46.68)\">\n",
       "    <path fill=\"none\" d=\"M10.46,-4.23 L-10.46,4.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.15,32.57)\">\n",
       "    <path fill=\"none\" d=\"M0.53,7.95 L-0.53,-7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.31,33.23)\">\n",
       "    <path fill=\"none\" d=\"M14.99,7.81 L-14.99,-7.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.4,32.21)\">\n",
       "    <path fill=\"none\" d=\"M3.81,8.37 L-3.81,-8.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.75,44.61)\">\n",
       "    <path fill=\"none\" d=\"M2.71,-1.9 L-2.71,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.3,47.36)\">\n",
       "    <path fill=\"none\" d=\"M6.21,-4.62 L-6.21,4.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.35,43.82)\">\n",
       "    <path fill=\"none\" d=\"M10.63,-1.72 L-10.63,1.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.87,44.28)\">\n",
       "    <path fill=\"none\" d=\"M6.23,-1.95 L-6.23,1.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.47,35.63)\">\n",
       "    <path fill=\"none\" d=\"M-0.56,4.89 L0.56,-4.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.99,35.76)\">\n",
       "    <path fill=\"none\" d=\"M3.04,4.87 L-3.04,-4.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.5,30.13)\">\n",
       "    <path fill=\"none\" d=\"M5.62,10.47 L-5.62,-10.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.91,35.67)\">\n",
       "    <path fill=\"none\" d=\"M6.63,5.18 L-6.63,-5.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.44,35.81)\">\n",
       "    <path fill=\"none\" d=\"M10.82,5.27 L-10.82,-5.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.8,31.45)\">\n",
       "    <path fill=\"none\" d=\"M12.7,9.43 L-12.7,-9.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.38,30.17)\">\n",
       "    <path fill=\"none\" d=\"M9.41,10.54 L-9.41,-10.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.94,32.73)\">\n",
       "    <path fill=\"none\" d=\"M8.71,8.06 L-8.71,-8.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.21,36.84)\">\n",
       "    <path fill=\"none\" d=\"M14.88,4.46 L-14.88,-4.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.1,51.96)\">\n",
       "    <path fill=\"none\" d=\"M5,-8.95 L-5,8.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.56,40.9)\">\n",
       "    <path fill=\"none\" d=\"M15.38,0.82 L-15.38,-0.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.77,55.45)\">\n",
       "    <path fill=\"none\" d=\"M2.71,-12.36 L-2.71,12.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.22,53.36)\">\n",
       "    <path fill=\"none\" d=\"M-9.47,-10.47 L9.47,10.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.74,44.15)\">\n",
       "    <path fill=\"none\" d=\"M-4.38,-1.71 L4.38,1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.63,55.79)\">\n",
       "    <path fill=\"none\" d=\"M-0.79,-12.7 L0.79,12.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.34,51.26)\">\n",
       "    <path fill=\"none\" d=\"M-11.32,-8.51 L11.32,8.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.2,55.72)\">\n",
       "    <path fill=\"none\" d=\"M-4.03,-12.65 L4.03,12.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.18,42.55)\">\n",
       "    <path fill=\"none\" d=\"M-7.6,-0.6 L7.6,0.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101,48.17)\">\n",
       "    <path fill=\"none\" d=\"M-10.76,-5.6 L10.76,5.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.14,48.44)\">\n",
       "    <path fill=\"none\" d=\"M-2.76,-5.42 L2.76,5.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.63,55.05)\">\n",
       "    <path fill=\"none\" d=\"M-7.15,-12.05 L7.15,12.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.07,52.03)\">\n",
       "    <path fill=\"none\" d=\"M-1.14,-8.94 L1.14,8.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.6,46.95)\">\n",
       "    <path fill=\"none\" d=\"M-6.5,-4.27 L6.5,4.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.45,50.06)\">\n",
       "    <path fill=\"none\" d=\"M-7.59,-7.22 L7.59,7.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.47,52.1)\">\n",
       "    <path fill=\"none\" d=\"M-5.04,-9.08 L5.04,9.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.56,45.12)\">\n",
       "    <path fill=\"none\" d=\"M-10.1,-2.83 L10.1,2.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.26,27.36)\">\n",
       "    <path fill=\"none\" d=\"M-5.02,13.21 L5.02,-13.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.13,30.82)\">\n",
       "    <path fill=\"none\" d=\"M-13.12,10.04 L13.12,-10.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.2,37.33)\">\n",
       "    <path fill=\"none\" d=\"M-18.69,4.09 L18.69,-4.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.74,34.75)\">\n",
       "    <path fill=\"none\" d=\"M18.39,6.48 L-18.39,-6.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.58,33.74)\">\n",
       "    <path fill=\"none\" d=\"M-16.27,7.37 L16.27,-7.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.05,56.83)\">\n",
       "    <path fill=\"none\" d=\"M-5.19,-4.3 L5.19,4.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.52,45.77)\">\n",
       "    <path fill=\"none\" d=\"M4.18,4.69 L-4.18,-4.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.95,31.66)\">\n",
       "    <path fill=\"none\" d=\"M15.09,-7.58 L-15.09,7.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.1,32.32)\">\n",
       "    <path fill=\"none\" d=\"M0.62,-6.38 L-0.62,6.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.2,31.3)\">\n",
       "    <path fill=\"none\" d=\"M11.51,-7.79 L-11.51,7.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.09,54.77)\">\n",
       "    <path fill=\"none\" d=\"M1.37,-6.07 L-1.37,6.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.55,43.7)\">\n",
       "    <path fill=\"none\" d=\"M11.49,3.24 L-11.49,-3.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.63,57.51)\">\n",
       "    <path fill=\"none\" d=\"M-1.31,-3.36 L1.31,3.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.1,46.45)\">\n",
       "    <path fill=\"none\" d=\"M8.4,5.58 L-8.4,-5.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.69,53.97)\">\n",
       "    <path fill=\"none\" d=\"M-5.82,-7.03 L5.82,7.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.15,42.91)\">\n",
       "    <path fill=\"none\" d=\"M3.41,2.08 L-3.41,-2.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.2,54.44)\">\n",
       "    <path fill=\"none\" d=\"M-1.86,-6.41 L1.86,6.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.67,43.37)\">\n",
       "    <path fill=\"none\" d=\"M7.68,2.8 L-7.68,-2.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.36,62.99)\">\n",
       "    <path fill=\"none\" d=\"M-8.25,0.72 L8.25,-0.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.83,51.93)\">\n",
       "    <path fill=\"none\" d=\"M1.31,10.66 L-1.31,-10.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.41,52)\">\n",
       "    <path fill=\"none\" d=\"M-2.64,-8.85 L2.64,8.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.88,40.93)\">\n",
       "    <path fill=\"none\" d=\"M6.71,0.75 L-6.71,-0.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.14,63.56)\">\n",
       "    <path fill=\"none\" d=\"M-17.47,1.31 L17.47,-1.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.61,52.5)\">\n",
       "    <path fill=\"none\" d=\"M-7.02,11.33 L7.02,-11.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.63,60.75)\">\n",
       "    <path fill=\"none\" d=\"M-18.98,-1.24 L18.98,1.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.09,49.69)\">\n",
       "    <path fill=\"none\" d=\"M-8.25,8.63 L8.25,-8.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.48,65.44)\">\n",
       "    <path fill=\"none\" d=\"M-14.19,2.96 L14.19,-2.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.95,54.38)\">\n",
       "    <path fill=\"none\" d=\"M-4.03,13.13 L4.03,-13.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.6,62.82)\">\n",
       "    <path fill=\"none\" d=\"M-12.01,0.61 L12.01,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.07,51.75)\">\n",
       "    <path fill=\"none\" d=\"M-2.05,10.49 L2.05,-10.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.44,56.43)\">\n",
       "    <path fill=\"none\" d=\"M-13.38,-5.07 L13.38,5.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.91,45.37)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,4.21 L2.7,-4.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.51,61.47)\">\n",
       "    <path fill=\"none\" d=\"M-15.09,-0.57 L15.09,0.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.98,50.41)\">\n",
       "    <path fill=\"none\" d=\"M-4.76,9.21 L4.76,-9.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.65,58.14)\">\n",
       "    <path fill=\"none\" d=\"M-19.02,-3.64 L19.02,3.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.12,47.07)\">\n",
       "    <path fill=\"none\" d=\"M-8.01,6.14 L8.01,-6.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.22,59.04)\">\n",
       "    <path fill=\"none\" d=\"M-13.46,-2.72 L13.46,2.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.68,47.97)\">\n",
       "    <path fill=\"none\" d=\"M-3.11,6.76 L3.11,-6.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.14,65.86)\">\n",
       "    <path fill=\"none\" d=\"M-9.63,3.2 L9.63,-3.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.61,54.8)\">\n",
       "    <path fill=\"none\" d=\"M0.22,13.52 L-0.22,-13.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.46,55.62)\">\n",
       "    <path fill=\"none\" d=\"M-17.32,-5.93 L17.32,5.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.93,44.55)\">\n",
       "    <path fill=\"none\" d=\"M-6.05,3.72 L6.05,-3.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.06,60.71)\">\n",
       "    <path fill=\"none\" d=\"M-4.62,-1.02 L4.62,1.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.53,49.64)\">\n",
       "    <path fill=\"none\" d=\"M4.52,8.45 L-4.52,-8.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.7,30.93)\">\n",
       "    <path fill=\"none\" d=\"M-15.21,-8.27 L15.21,8.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.35,28.24)\">\n",
       "    <path fill=\"none\" d=\"M-11.89,-10.73 L11.89,10.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.7,36.88)\">\n",
       "    <path fill=\"none\" d=\"M-18.88,-2.84 L18.88,2.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.48,24.16)\">\n",
       "    <path fill=\"none\" d=\"M2.86,-14.55 L-2.86,14.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.07,40.48)\">\n",
       "    <path fill=\"none\" d=\"M-19.46,0.45 L19.46,-0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.24,33.77)\">\n",
       "    <path fill=\"none\" d=\"M-17.47,-5.68 L17.47,5.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.27,34.72)\">\n",
       "    <path fill=\"none\" d=\"M16.22,-4.77 L-16.22,4.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.78,34.85)\">\n",
       "    <path fill=\"none\" d=\"M11.81,-4.52 L-11.81,4.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.3,29.22)\">\n",
       "    <path fill=\"none\" d=\"M9.87,-9.72 L-9.87,9.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.71,34.76)\">\n",
       "    <path fill=\"none\" d=\"M7.91,-4.42 L-7.91,4.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.23,34.9)\">\n",
       "    <path fill=\"none\" d=\"M3.85,-4.02 L-3.85,4.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.6,30.53)\">\n",
       "    <path fill=\"none\" d=\"M2.81,-8.19 L-2.81,8.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.18,29.26)\">\n",
       "    <path fill=\"none\" d=\"M6.07,-9.55 L-6.07,9.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.74,31.81)\">\n",
       "    <path fill=\"none\" d=\"M6.4,-7.08 L-6.4,7.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.01,35.93)\">\n",
       "    <path fill=\"none\" d=\"M0.44,-2.77 L-0.44,2.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.9,51.05)\">\n",
       "    <path fill=\"none\" d=\"M10.45,10.03 L-10.45,-10.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.1,65.6)\">\n",
       "    <path fill=\"none\" d=\"M-1.8,-2.35 L1.8,2.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.55,63.52)\">\n",
       "    <path fill=\"none\" d=\"M-14.31,-1.25 L14.31,1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.07,54.3)\">\n",
       "    <path fill=\"none\" d=\"M-10.32,6.92 L10.32,-6.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.96,65.95)\">\n",
       "    <path fill=\"none\" d=\"M-5.13,-3.01 L5.13,3.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.03,75.42)\">\n",
       "    <path fill=\"none\" d=\"M8.58,-12.15 L-8.58,12.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.99,76.54)\">\n",
       "    <path fill=\"none\" d=\"M4.05,-13.16 L-4.05,13.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.76,76.89)\">\n",
       "    <path fill=\"none\" d=\"M-0.3,-13.48 L0.3,13.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.61,76.54)\">\n",
       "    <path fill=\"none\" d=\"M-4.73,-13.17 L4.73,13.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.95,75.43)\">\n",
       "    <path fill=\"none\" d=\"M-9.63,-12.19 L9.63,12.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.68,58.63)\">\n",
       "    <path fill=\"none\" d=\"M-21.46,3.22 L21.46,-3.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.67,61.41)\">\n",
       "    <path fill=\"none\" d=\"M-16.41,0.63 L16.41,-0.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,65.88)\">\n",
       "    <path fill=\"none\" d=\"M-8.49,-3.16 L8.49,3.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.51,52.71)\">\n",
       "    <path fill=\"none\" d=\"M-13.71,8.55 L13.71,-8.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.33,58.33)\">\n",
       "    <path fill=\"none\" d=\"M-16.15,3.42 L16.15,-3.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.47,58.59)\">\n",
       "    <path fill=\"none\" d=\"M-7.44,2.9 L7.44,-2.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.96,65.21)\">\n",
       "    <path fill=\"none\" d=\"M-11.79,-2.69 L11.79,2.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.4,62.19)\">\n",
       "    <path fill=\"none\" d=\"M-5.14,-0.05 L5.14,0.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.94,57.11)\">\n",
       "    <path fill=\"none\" d=\"M-11.89,4.41 L11.89,-4.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.78,60.21)\">\n",
       "    <path fill=\"none\" d=\"M-12.56,1.66 L12.56,-1.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.8,62.25)\">\n",
       "    <path fill=\"none\" d=\"M-9.54,-0.11 L9.54,0.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.89,55.27)\">\n",
       "    <path fill=\"none\" d=\"M-15.87,6.22 L15.87,-6.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-799961c7-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-799961c7-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-799961c7-4\">\n",
       "  <g transform=\"translate(88.77,41.81)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.67,51.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,23.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.85,24.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.03,22.61)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.74,47.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,52.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.94,45.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.97,46.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.3,63.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.4,41.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.85,65.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.83,59.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.54,68.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,63.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.45,50.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.59,60.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.87,54.16)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47,55.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.86,69.61)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.5,49.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.7,59.3)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.04,21.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.34,16.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.03,33.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.59,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,40.97)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.11,27.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.18,29.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.2,29.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.23,18.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.05,29.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.11,29.81)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.84,21.09)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.99,18.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.12,23.64)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.65,31.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.43,62.11)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.36,39.98)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,69.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.67,64.92)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.71,46.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.5,69.78)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.64,88.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.55,90.97)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.09,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.79,90.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.48,88.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.93,55.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.91,60.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.64,69.64)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.59,43.3)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.23,54.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.51,55.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.49,68.3)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.37,62.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.44,52.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.14,58.32)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.17,62.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.36,48.43)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.76,12.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.49,19.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,32.86)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.72,27.69)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.39,25.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-799961c7-5\">\n",
       "  <g transform=\"translate(88.77,41.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.67,51.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,23.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.85,24.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.03,22.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.74,47.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,52.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.94,45.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.97,46.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.3,63.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.4,41.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.85,65.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.83,59.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.54,68.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,63.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.45,50.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.59,60.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.87,54.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47,55.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.86,69.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.5,49.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.7,59.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.04,21.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.34,16.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.03,33.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.59,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,40.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.11,27.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.18,29.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.2,29.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.23,18.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.05,29.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.11,29.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.84,21.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.99,18.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.12,23.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.65,31.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.43,62.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.36,39.98)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,69.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.67,64.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.71,46.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.5,69.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.64,88.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.55,90.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.09,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.79,90.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.48,88.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.93,55.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.91,60.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.64,69.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.59,43.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.23,54.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.51,55.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.49,68.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.37,62.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.44,52.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.14,58.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.17,62.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.36,48.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.76,12.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.49,19.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,32.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.72,27.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.39,25.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-05e3d561\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-05e3d561-1\">\n",
       "  <g transform=\"translate(76.72,46.68)\">\n",
       "    <path fill=\"none\" d=\"M10.46,-4.23 L-10.46,4.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.15,32.57)\">\n",
       "    <path fill=\"none\" d=\"M0.53,7.95 L-0.53,-7.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.31,33.23)\">\n",
       "    <path fill=\"none\" d=\"M14.99,7.81 L-14.99,-7.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.4,32.21)\">\n",
       "    <path fill=\"none\" d=\"M3.81,8.37 L-3.81,-8.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.75,44.61)\">\n",
       "    <path fill=\"none\" d=\"M2.71,-1.9 L-2.71,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.3,47.36)\">\n",
       "    <path fill=\"none\" d=\"M6.21,-4.62 L-6.21,4.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.35,43.82)\">\n",
       "    <path fill=\"none\" d=\"M10.63,-1.72 L-10.63,1.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.87,44.28)\">\n",
       "    <path fill=\"none\" d=\"M6.23,-1.95 L-6.23,1.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.47,35.63)\">\n",
       "    <path fill=\"none\" d=\"M-0.56,4.89 L0.56,-4.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.99,35.76)\">\n",
       "    <path fill=\"none\" d=\"M3.04,4.87 L-3.04,-4.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.5,30.13)\">\n",
       "    <path fill=\"none\" d=\"M5.62,10.47 L-5.62,-10.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.91,35.67)\">\n",
       "    <path fill=\"none\" d=\"M6.63,5.18 L-6.63,-5.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.44,35.81)\">\n",
       "    <path fill=\"none\" d=\"M10.82,5.27 L-10.82,-5.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.8,31.45)\">\n",
       "    <path fill=\"none\" d=\"M12.7,9.43 L-12.7,-9.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.38,30.17)\">\n",
       "    <path fill=\"none\" d=\"M9.41,10.54 L-9.41,-10.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.94,32.73)\">\n",
       "    <path fill=\"none\" d=\"M8.71,8.06 L-8.71,-8.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.21,36.84)\">\n",
       "    <path fill=\"none\" d=\"M14.88,4.46 L-14.88,-4.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.1,51.96)\">\n",
       "    <path fill=\"none\" d=\"M5,-8.95 L-5,8.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.56,40.9)\">\n",
       "    <path fill=\"none\" d=\"M15.38,0.82 L-15.38,-0.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.77,55.45)\">\n",
       "    <path fill=\"none\" d=\"M2.71,-12.36 L-2.71,12.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.22,53.36)\">\n",
       "    <path fill=\"none\" d=\"M-9.47,-10.47 L9.47,10.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.74,44.15)\">\n",
       "    <path fill=\"none\" d=\"M-4.38,-1.71 L4.38,1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.63,55.79)\">\n",
       "    <path fill=\"none\" d=\"M-0.79,-12.7 L0.79,12.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.34,51.26)\">\n",
       "    <path fill=\"none\" d=\"M-11.32,-8.51 L11.32,8.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.2,55.72)\">\n",
       "    <path fill=\"none\" d=\"M-4.03,-12.65 L4.03,12.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.18,42.55)\">\n",
       "    <path fill=\"none\" d=\"M-7.6,-0.6 L7.6,0.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101,48.17)\">\n",
       "    <path fill=\"none\" d=\"M-10.76,-5.6 L10.76,5.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.14,48.44)\">\n",
       "    <path fill=\"none\" d=\"M-2.76,-5.42 L2.76,5.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.63,55.05)\">\n",
       "    <path fill=\"none\" d=\"M-7.15,-12.05 L7.15,12.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.07,52.03)\">\n",
       "    <path fill=\"none\" d=\"M-1.14,-8.94 L1.14,8.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.6,46.95)\">\n",
       "    <path fill=\"none\" d=\"M-6.5,-4.27 L6.5,4.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.45,50.06)\">\n",
       "    <path fill=\"none\" d=\"M-7.59,-7.22 L7.59,7.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.47,52.1)\">\n",
       "    <path fill=\"none\" d=\"M-5.04,-9.08 L5.04,9.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.56,45.12)\">\n",
       "    <path fill=\"none\" d=\"M-10.1,-2.83 L10.1,2.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.26,27.36)\">\n",
       "    <path fill=\"none\" d=\"M-5.02,13.21 L5.02,-13.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.13,30.82)\">\n",
       "    <path fill=\"none\" d=\"M-13.12,10.04 L13.12,-10.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.2,37.33)\">\n",
       "    <path fill=\"none\" d=\"M-18.69,4.09 L18.69,-4.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.74,34.75)\">\n",
       "    <path fill=\"none\" d=\"M18.39,6.48 L-18.39,-6.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.58,33.74)\">\n",
       "    <path fill=\"none\" d=\"M-16.27,7.37 L16.27,-7.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.05,56.83)\">\n",
       "    <path fill=\"none\" d=\"M-5.19,-4.3 L5.19,4.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.52,45.77)\">\n",
       "    <path fill=\"none\" d=\"M4.18,4.69 L-4.18,-4.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.95,31.66)\">\n",
       "    <path fill=\"none\" d=\"M15.09,-7.58 L-15.09,7.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.1,32.32)\">\n",
       "    <path fill=\"none\" d=\"M0.62,-6.38 L-0.62,6.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.2,31.3)\">\n",
       "    <path fill=\"none\" d=\"M11.51,-7.79 L-11.51,7.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.09,54.77)\">\n",
       "    <path fill=\"none\" d=\"M1.37,-6.07 L-1.37,6.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.55,43.7)\">\n",
       "    <path fill=\"none\" d=\"M11.49,3.24 L-11.49,-3.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.63,57.51)\">\n",
       "    <path fill=\"none\" d=\"M-1.31,-3.36 L1.31,3.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.1,46.45)\">\n",
       "    <path fill=\"none\" d=\"M8.4,5.58 L-8.4,-5.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.69,53.97)\">\n",
       "    <path fill=\"none\" d=\"M-5.82,-7.03 L5.82,7.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.15,42.91)\">\n",
       "    <path fill=\"none\" d=\"M3.41,2.08 L-3.41,-2.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.2,54.44)\">\n",
       "    <path fill=\"none\" d=\"M-1.86,-6.41 L1.86,6.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.67,43.37)\">\n",
       "    <path fill=\"none\" d=\"M7.68,2.8 L-7.68,-2.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.36,62.99)\">\n",
       "    <path fill=\"none\" d=\"M-8.25,0.72 L8.25,-0.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.83,51.93)\">\n",
       "    <path fill=\"none\" d=\"M1.31,10.66 L-1.31,-10.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.41,52)\">\n",
       "    <path fill=\"none\" d=\"M-2.64,-8.85 L2.64,8.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.88,40.93)\">\n",
       "    <path fill=\"none\" d=\"M6.71,0.75 L-6.71,-0.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.14,63.56)\">\n",
       "    <path fill=\"none\" d=\"M-17.47,1.31 L17.47,-1.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.61,52.5)\">\n",
       "    <path fill=\"none\" d=\"M-7.02,11.33 L7.02,-11.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.63,60.75)\">\n",
       "    <path fill=\"none\" d=\"M-18.98,-1.24 L18.98,1.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.09,49.69)\">\n",
       "    <path fill=\"none\" d=\"M-8.25,8.63 L8.25,-8.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.48,65.44)\">\n",
       "    <path fill=\"none\" d=\"M-14.19,2.96 L14.19,-2.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.95,54.38)\">\n",
       "    <path fill=\"none\" d=\"M-4.03,13.13 L4.03,-13.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.6,62.82)\">\n",
       "    <path fill=\"none\" d=\"M-12.01,0.61 L12.01,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.07,51.75)\">\n",
       "    <path fill=\"none\" d=\"M-2.05,10.49 L2.05,-10.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.44,56.43)\">\n",
       "    <path fill=\"none\" d=\"M-13.38,-5.07 L13.38,5.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.91,45.37)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,4.21 L2.7,-4.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.51,61.47)\">\n",
       "    <path fill=\"none\" d=\"M-15.09,-0.57 L15.09,0.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.98,50.41)\">\n",
       "    <path fill=\"none\" d=\"M-4.76,9.21 L4.76,-9.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.65,58.14)\">\n",
       "    <path fill=\"none\" d=\"M-19.02,-3.64 L19.02,3.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.12,47.07)\">\n",
       "    <path fill=\"none\" d=\"M-8.01,6.14 L8.01,-6.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.22,59.04)\">\n",
       "    <path fill=\"none\" d=\"M-13.46,-2.72 L13.46,2.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.68,47.97)\">\n",
       "    <path fill=\"none\" d=\"M-3.11,6.76 L3.11,-6.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.14,65.86)\">\n",
       "    <path fill=\"none\" d=\"M-9.63,3.2 L9.63,-3.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.61,54.8)\">\n",
       "    <path fill=\"none\" d=\"M0.22,13.52 L-0.22,-13.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.46,55.62)\">\n",
       "    <path fill=\"none\" d=\"M-17.32,-5.93 L17.32,5.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.93,44.55)\">\n",
       "    <path fill=\"none\" d=\"M-6.05,3.72 L6.05,-3.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.06,60.71)\">\n",
       "    <path fill=\"none\" d=\"M-4.62,-1.02 L4.62,1.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.53,49.64)\">\n",
       "    <path fill=\"none\" d=\"M4.52,8.45 L-4.52,-8.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.7,30.93)\">\n",
       "    <path fill=\"none\" d=\"M-15.21,-8.27 L15.21,8.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.35,28.24)\">\n",
       "    <path fill=\"none\" d=\"M-11.89,-10.73 L11.89,10.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.7,36.88)\">\n",
       "    <path fill=\"none\" d=\"M-18.88,-2.84 L18.88,2.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.48,24.16)\">\n",
       "    <path fill=\"none\" d=\"M2.86,-14.55 L-2.86,14.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.07,40.48)\">\n",
       "    <path fill=\"none\" d=\"M-19.46,0.45 L19.46,-0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.24,33.77)\">\n",
       "    <path fill=\"none\" d=\"M-17.47,-5.68 L17.47,5.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.27,34.72)\">\n",
       "    <path fill=\"none\" d=\"M16.22,-4.77 L-16.22,4.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.78,34.85)\">\n",
       "    <path fill=\"none\" d=\"M11.81,-4.52 L-11.81,4.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.3,29.22)\">\n",
       "    <path fill=\"none\" d=\"M9.87,-9.72 L-9.87,9.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.71,34.76)\">\n",
       "    <path fill=\"none\" d=\"M7.91,-4.42 L-7.91,4.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.23,34.9)\">\n",
       "    <path fill=\"none\" d=\"M3.85,-4.02 L-3.85,4.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.6,30.53)\">\n",
       "    <path fill=\"none\" d=\"M2.81,-8.19 L-2.81,8.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.18,29.26)\">\n",
       "    <path fill=\"none\" d=\"M6.07,-9.55 L-6.07,9.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.74,31.81)\">\n",
       "    <path fill=\"none\" d=\"M6.4,-7.08 L-6.4,7.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.01,35.93)\">\n",
       "    <path fill=\"none\" d=\"M0.44,-2.77 L-0.44,2.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.9,51.05)\">\n",
       "    <path fill=\"none\" d=\"M10.45,10.03 L-10.45,-10.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.1,65.6)\">\n",
       "    <path fill=\"none\" d=\"M-1.8,-2.35 L1.8,2.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.55,63.52)\">\n",
       "    <path fill=\"none\" d=\"M-14.31,-1.25 L14.31,1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.07,54.3)\">\n",
       "    <path fill=\"none\" d=\"M-10.32,6.92 L10.32,-6.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.96,65.95)\">\n",
       "    <path fill=\"none\" d=\"M-5.13,-3.01 L5.13,3.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.03,75.42)\">\n",
       "    <path fill=\"none\" d=\"M8.58,-12.15 L-8.58,12.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.99,76.54)\">\n",
       "    <path fill=\"none\" d=\"M4.05,-13.16 L-4.05,13.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.76,76.89)\">\n",
       "    <path fill=\"none\" d=\"M-0.3,-13.48 L0.3,13.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.61,76.54)\">\n",
       "    <path fill=\"none\" d=\"M-4.73,-13.17 L4.73,13.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.95,75.43)\">\n",
       "    <path fill=\"none\" d=\"M-9.63,-12.19 L9.63,12.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.68,58.63)\">\n",
       "    <path fill=\"none\" d=\"M-21.46,3.22 L21.46,-3.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.67,61.41)\">\n",
       "    <path fill=\"none\" d=\"M-16.41,0.63 L16.41,-0.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,65.88)\">\n",
       "    <path fill=\"none\" d=\"M-8.49,-3.16 L8.49,3.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.51,52.71)\">\n",
       "    <path fill=\"none\" d=\"M-13.71,8.55 L13.71,-8.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.33,58.33)\">\n",
       "    <path fill=\"none\" d=\"M-16.15,3.42 L16.15,-3.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.47,58.59)\">\n",
       "    <path fill=\"none\" d=\"M-7.44,2.9 L7.44,-2.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.96,65.21)\">\n",
       "    <path fill=\"none\" d=\"M-11.79,-2.69 L11.79,2.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.4,62.19)\">\n",
       "    <path fill=\"none\" d=\"M-5.14,-0.05 L5.14,0.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.94,57.11)\">\n",
       "    <path fill=\"none\" d=\"M-11.89,4.41 L11.89,-4.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.78,60.21)\">\n",
       "    <path fill=\"none\" d=\"M-12.56,1.66 L12.56,-1.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.8,62.25)\">\n",
       "    <path fill=\"none\" d=\"M-9.54,-0.11 L9.54,0.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.89,55.27)\">\n",
       "    <path fill=\"none\" d=\"M-15.87,6.22 L15.87,-6.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-05e3d561-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-05e3d561-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-05e3d561-4\">\n",
       "  <g transform=\"translate(88.77,41.81)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.67,51.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,23.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.85,24.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.03,22.61)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.74,47.42)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,52.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.94,45.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.97,46.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.3,63.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.4,41.88)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.85,65.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.83,59.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.54,68.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,63.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.45,50.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.59,60.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.87,54.16)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47,55.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.86,69.61)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.5,49.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.7,59.3)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.04,21.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.34,16.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.03,33.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.59,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,40.97)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.11,27.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.18,29.46)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.2,29.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.23,18.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.05,29.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.11,29.81)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.84,21.09)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.99,18.53)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.12,23.64)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.65,31.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.43,62.11)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.36,39.98)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,69.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.67,64.92)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.71,46.49)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.5,69.78)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.64,88.72)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.55,90.97)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.09,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.79,90.96)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.48,88.75)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.93,55.15)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.91,60.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.64,69.64)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.59,43.3)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.23,54.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.51,55.07)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.49,68.3)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.37,62.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.44,52.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.14,58.32)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.17,62.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.36,48.43)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.76,12.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.49,19.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,32.86)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.72,27.69)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.39,25.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-05e3d561-5\">\n",
       "  <g transform=\"translate(88.77,41.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.67,51.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,23.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.85,24.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.03,22.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.74,47.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,52.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.94,45.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.97,46.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.3,63.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.4,41.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.85,65.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.83,59.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.54,68.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.77,63.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.45,50.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.59,60.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.87,54.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47,55.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.86,69.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.5,49.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.7,59.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(21.04,21.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.34,16.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.03,33.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.59,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,40.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.11,27.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.18,29.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.2,29.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.23,18.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.05,29.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.11,29.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.84,21.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.99,18.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.12,23.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.65,31.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.43,62.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.36,39.98)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,69.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.67,64.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.71,46.49)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.5,69.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.64,88.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.55,90.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.09,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.79,90.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.48,88.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.93,55.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.91,60.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.64,69.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.59,43.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.23,54.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.51,55.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.49,68.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.37,62.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.44,52.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.14,58.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.17,62.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.36,48.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.76,12.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.49,19.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,32.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.72,27.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.39,25.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.27948357549796565cx, -0.18122136116499907cy), (-0.07563037374682988cx, 0.021763503186065306cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.30493885428845313cx, -0.227583576196982cy), (0.286889565409025cx, -0.608997725225746cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2814443186077951cx, -0.21500853348808405cy), (-0.22730395997831582cx, -0.5900221779846205cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.29690497538058636cx, -0.22612726850847403cy), (0.16762412928883655cx, -0.6278349298938521cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2843505425138146cx, -0.1748114656180669cy), (0.19226739289519196cx, -0.08379710361438966cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.28503832688504577cx, -0.17413689301134333cy), (0.07438265342531605cx, 0.0474268721174958cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.27617922498297953cx, -0.18968389882019926cy), (-0.08461893413936383cx, -0.10701286043002707cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.27805585147165973cx, -0.18404426546109987cy), (0.06668550115084076cx, -0.09035657415973009cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3089148548159554cx, -0.22751646492662203cy), (0.32796571012005893cx, -0.4620762672731248cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2938720666697759cx, -0.22497280308843653cy), (0.19062370584758365cx, -0.45864121440348765cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.14145966388113385cx, 0.30519325737428826cy), (0.42954468399409995cx, 0.45685310937544144cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.13727241900008258cx, 0.2702323608362431cy), (0.6026229590329574cx, -0.14037105684742096cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.1437273999143496cx, 0.2818565630154138cy), (0.6918368910609971cx, 0.1177950550014974cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.14118396032558223cx, 0.275791489803402cy), (0.3937713506403182cx, 0.1367082724493513cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.14352738737191892cx, 0.3002829287882017cy), (0.5436807089787701cx, 0.42958625746030504cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.14502614549332735cx, 0.2912124151236225cy), (0.3196193964757061cx, 0.2938254579927969cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.1414819924526617cx, 0.2763459903092365cy), (0.5449739440287621cx, 0.06472825146850739cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.14450043072118163cx, 0.28504410210076736cy), (0.570730418886879cx, 0.20527464251033012cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.14502531819278286cx, 0.29126474115359646cy), (0.4689667714208442cx, 0.29665984252305866cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.14114202606649162cx, 0.2757155848806779cy), (0.6796197499758504cx, -0.02275409488056194cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.30640460764155897cx, -0.19660955436180017cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.10255140589042322cx, 0.03715169638286642cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.28542381205591916cx, -0.6399717470609279cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.25226424901207967cx, -0.6084211571109044cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.1581244970278639cx, -0.657352644040526cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.17021332776744758cx, -0.0619990148706564cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.05301637266880288cx, 0.06989953346795263cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.11484431679794327cx, -0.10008720488842615cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.03833674498094153cx, -0.07779128525902979cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.22763920539678795cx, 0.33298570113181003cy), 0.012403473458920847w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.3506246078125501cx, 0.2942894962413267cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5724350023249405cx, 0.05032586490265123cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6012099154515773cx, 0.19957036773600478cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.49997115545714377cx, 0.2971762068015624cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7067408418858587cx, -0.03778688687497678cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.49294899528049174cx, -0.8903451048080053cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7938371150905688cx, -0.7239092111410008cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, -0.4114571850685276cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3731957944166693cx, -0.5354248280936795cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9109754831309946cx, -0.583783517435221cy), 0.012403473458920847w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.30640460764155897cx, -0.19660955436180017cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.10255140589042322cx, 0.03715169638286642cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.28542381205591916cx, -0.6399717470609279cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.25226424901207967cx, -0.6084211571109044cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.1581244970278639cx, -0.657352644040526cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.17021332776744758cx, -0.0619990148706564cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.05301637266880288cx, 0.06989953346795263cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.11484431679794327cx, -0.10008720488842615cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.03833674498094153cx, -0.07779128525902979cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.22763920539678795cx, 0.33298570113181003cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.3506246078125501cx, 0.2942894962413267cy), \"56\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5724350023249405cx, 0.05032586490265123cy), \"57\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6012099154515773cx, 0.19957036773600478cy), \"58\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.49997115545714377cx, 0.2971762068015624cy), \"59\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7067408418858587cx, -0.03778688687497678cy), \"60\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.49294899528049174cx, -0.8903451048080053cy), \"61\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7938371150905688cx, -0.7239092111410008cy), \"62\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, -0.4114571850685276cy), \"63\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3731957944166693cx, -0.5354248280936795cy), \"64\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9109754831309946cx, -0.583783517435221cy), \"65\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using CSV\n",
    "using DataFrames\n",
    "\n",
    "\n",
    "f=CSV.read(\"dataset_updated.csv\",DataFrame)\n",
    "\n",
    "\n",
    "f.Index = 1:nrow(f)\n",
    "\n",
    "f[!,2]\n",
    "\n",
    "\n",
    "h=unique(f[!,2])\n",
    "\n",
    "ed = Dict()\n",
    "\n",
    "\n",
    "count=0\n",
    "for i in h\n",
    "    count+=1\n",
    "    ed[i]=count\n",
    "end\n",
    "\n",
    "\n",
    "tu=()\n",
    "\n",
    "l=[]\n",
    "\n",
    "for i in eachrow(f)\n",
    "    #println((ed[i[:1]],ed[i[:2]]))\n",
    "    #println(i[:1])\n",
    "    push!(l, (ed[i[:1]],ed[i[:2]]))\n",
    "end\n",
    "\n",
    "\n",
    "\n",
    "using Graphs, GraphPlot\n",
    "\n",
    "g = let \n",
    "    edges = Edge.(l)\n",
    "    Graph(edges)\n",
    "end\n",
    "\n",
    "gplot(g, nodelabel=1:count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "541f759e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "strongweak (generic function with 1 method)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sw=Dict()\n",
    "str=[]\n",
    "function strongweak(df)\n",
    "    for i in eachrow(df)\n",
    "        name1=i[:1]\n",
    "        company=\"s\"\n",
    "        university=\"s\"\n",
    "        for i in eachrow(df)\n",
    "            if name1==i[:2]\n",
    "                company=i[:3]\n",
    "                university=i[:6]\n",
    "            end\n",
    "        end\n",
    "     \n",
    "        if (i[:3]==company)|(i[:6]==university)\n",
    "            println(i[:1],\"-\",i[:2])\n",
    "            println(ed[name1],\"-\",ed[i[:2]])\n",
    "            sw[( ed[name1] , ed[i[:2]]    )]=2\n",
    "            sw[( ed[i[:2]] , ed[name1]    )]=2\n",
    "            push!(str,(ed[name1] , ed[i[:2]]))\n",
    "        else\n",
    "            sw[(ed[name1],ed[i[:2]])]=1\n",
    "            sw[( ed[i[:2]] , ed[name1] )]=1\n",
    "            \n",
    "        end   \n",
    "        \n",
    "    end\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "40680d64",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Gowtham-Snega\n",
      "39-1\n",
      "Gowtham-Maria\n",
      "39-3\n",
      "Gowtham-Tamilmani\n",
      "39-10\n",
      "Gowtham-Meril\n",
      "39-11\n",
      "Gowtham-Kiran\n",
      "39-15\n",
      "Gowtham-Subhendra Kr.\n",
      "39-18\n",
      "Gowtham-Prakash\n",
      "39-28\n",
      "Gowtham-Selventhiran\n",
      "39-33\n",
      "Gowtham-Aashika\n",
      "39-36\n",
      "Sahaanah-Gowtham\n",
      "38-39\n",
      "Sahaanah-Tamilmani\n",
      "38-10\n",
      "Sahaanah-Meril\n",
      "38-11\n",
      "Sahaanah-Kiran\n",
      "38-15\n",
      "Sahaanah-Subhendra Kr.\n",
      "38-18\n",
      "Sahaanah-Bharani\n",
      "38-60\n",
      "Snega-Sahaanah\n",
      "1-38\n",
      "Snega-Selventhiran\n",
      "1-33\n",
      "Snega-Aashika\n",
      "1-36\n",
      "Snega-Bharani\n",
      "1-60\n",
      "Snega-Maria\n",
      "1-3\n"
     ]
    }
   ],
   "source": [
    "strongweak(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "aaecac2a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Dict{Any, Any} with 230 entries:\n",
       "  (1, 65)  => 1\n",
       "  (39, 26) => 1\n",
       "  (39, 17) => 1\n",
       "  (38, 49) => 1\n",
       "  (34, 1)  => 1\n",
       "  (50, 1)  => 1\n",
       "  (1, 9)   => 1\n",
       "  (42, 1)  => 1\n",
       "  (38, 13) => 1\n",
       "  (12, 38) => 1\n",
       "  (12, 39) => 1\n",
       "  (23, 39) => 1\n",
       "  (39, 32) => 1\n",
       "  (41, 38) => 1\n",
       "  (1, 3)   => 2\n",
       "  (38, 22) => 1\n",
       "  (38, 42) => 1\n",
       "  (38, 1)  => 2\n",
       "  (59, 38) => 1\n",
       "  (26, 39) => 1\n",
       "  (1, 53)  => 1\n",
       "  (38, 50) => 1\n",
       "  (53, 1)  => 1\n",
       "  (1, 2)   => 1\n",
       "  (3, 1)   => 2\n",
       "  ⋮        => ⋮"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cda47f29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "65×65 SparseArrays.SparseMatrixCSC{Int64, Int64} with 230 stored entries:\n",
       "⎡⡎⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠙⡏⠉⠁⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠁⎤\n",
       "⎢⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⡷⠤⠴⠶⠶⠶⠶⠶⠶⠶⠶⠤⠤⠤⠤⠤⠤⠤⢤⠓⠒⠒⠒⠒⠒⠒⠒⠒⠒⠒⠀⠀⠀⎥\n",
       "⎢⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎢⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎥\n",
       "⎣⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⎦"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adj_matrix = adjacency_matrix(g)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "84ba1418",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "2\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "2\n",
      "2\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n"
     ]
    }
   ],
   "source": [
    "for (i, edge) in enumerate(edges(g))\n",
    "    src_node, dst_node = src(edge), dst(edge)\n",
    "    #println(src_node)\n",
    "    adj_matrix[src_node, dst_node]=sw[(src_node,dst_node)]\n",
    "    println(sw[(src_node,dst_node)])\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "82f41adf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#If the above code snippet throws an error, please restart the kernel and re-run the code from Network Structure "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7d56f5c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "2\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "2\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "2\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "2\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "2\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "1\n",
      "2\n",
      "1\n",
      "2\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "2\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "2\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "1\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n",
      "0\n"
     ]
    }
   ],
   "source": [
    "for i in adj_matrix\n",
    "    println(i)\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "1b2e5c36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-50ae6412-1\">\n",
       "  <g transform=\"translate(83.68,58.32)\">\n",
       "    <path fill=\"none\" d=\"M2.97,3.2 L-2.97,-3.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.95,56.37)\">\n",
       "    <path fill=\"none\" d=\"M-4.35,5.12 L4.35,-5.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.95,48.02)\">\n",
       "    <path fill=\"none\" d=\"M-4.84,13.32 L4.84,-13.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.92,58.1)\">\n",
       "    <path fill=\"none\" d=\"M-6.81,3.71 L6.81,-3.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,58.72)\">\n",
       "    <path fill=\"none\" d=\"M9.86,3.32 L-9.86,-3.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.99,59.59)\">\n",
       "    <path fill=\"none\" d=\"M6.08,2.38 L-6.08,-2.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.22,56.32)\">\n",
       "    <path fill=\"none\" d=\"M5.37,5.23 L-5.37,-5.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.52,56.14)\">\n",
       "    <path fill=\"none\" d=\"M8.79,5.59 L-8.79,-5.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.56,49.48)\">\n",
       "    <path fill=\"none\" d=\"M-8.11,11.95 L8.11,-11.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.28,47.75)\">\n",
       "    <path fill=\"none\" d=\"M-0.56,13.55 L0.56,-13.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.21,51.54)\">\n",
       "    <path fill=\"none\" d=\"M-5.84,9.87 L5.84,-9.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.67,53.96)\">\n",
       "    <path fill=\"none\" d=\"M-7.93,7.59 L7.93,-7.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.9,53.82)\">\n",
       "    <path fill=\"none\" d=\"M-2.78,7.53 L2.78,-7.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.22,52.36)\">\n",
       "    <path fill=\"none\" d=\"M2.14,8.96 L-2.14,-8.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,55.89)\">\n",
       "    <path fill=\"none\" d=\"M-9.92,5.88 L9.92,-5.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.83,50.42)\">\n",
       "    <path fill=\"none\" d=\"M-1.94,10.89 L1.94,-10.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,51.97)\">\n",
       "    <path fill=\"none\" d=\"M-10.22,9.59 L10.22,-9.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.57,62.3)\">\n",
       "    <path fill=\"none\" d=\"M15.26,0.27 L-15.26,-0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.27,50.18)\">\n",
       "    <path fill=\"none\" d=\"M7.61,11.25 L-7.61,-11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.45,72.97)\">\n",
       "    <path fill=\"none\" d=\"M4.6,-9.16 L-4.6,9.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.12,69.49)\">\n",
       "    <path fill=\"none\" d=\"M11.09,-6.1 L-11.09,6.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.69,66.47)\">\n",
       "    <path fill=\"none\" d=\"M2.1,-2.73 L-2.1,2.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.9,73.06)\">\n",
       "    <path fill=\"none\" d=\"M10.62,-9.45 L-10.62,9.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75,66.21)\">\n",
       "    <path fill=\"none\" d=\"M10.97,-3.13 L-10.97,3.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.04,69.54)\">\n",
       "    <path fill=\"none\" d=\"M3.84,-5.77 L-3.84,5.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.21,73.91)\">\n",
       "    <path fill=\"none\" d=\"M7.6,-10.17 L-7.6,10.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.81,66.81)\">\n",
       "    <path fill=\"none\" d=\"M16.12,-3.8 L-16.12,3.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.73,66.4)\">\n",
       "    <path fill=\"none\" d=\"M6.41,-3.08 L-6.41,3.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.6,66.76)\">\n",
       "    <path fill=\"none\" d=\"M-1.37,-2.94 L1.37,2.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.14,69.6)\">\n",
       "    <path fill=\"none\" d=\"M-0.39,-5.71 L0.39,5.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.84,71.96)\">\n",
       "    <path fill=\"none\" d=\"M1.57,-8.09 L-1.57,8.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.59,71.98)\">\n",
       "    <path fill=\"none\" d=\"M13.7,-8.53 L-13.7,8.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.24,69.63)\">\n",
       "    <path fill=\"none\" d=\"M15.83,-6.4 L-15.83,6.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.04,70.46)\">\n",
       "    <path fill=\"none\" d=\"M7.5,-6.84 L-7.5,6.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.08,70.9)\">\n",
       "    <path fill=\"none\" d=\"M-15.91,-7.58 L15.91,7.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.81,77.13)\">\n",
       "    <path fill=\"none\" d=\"M-6.55,-13.31 L6.55,13.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.65,63.84)\">\n",
       "    <path fill=\"none\" d=\"M-19.17,-1.13 L19.17,1.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.42,74.71)\">\n",
       "    <path fill=\"none\" d=\"M-11.66,-11.07 L11.66,11.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.36,67.57)\">\n",
       "    <path fill=\"none\" d=\"M-17.98,-4.54 L17.98,4.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.68,58.32)\">\n",
       "    <path fill=\"none\" d=\"M-2.97,-3.2 L2.97,3.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.59,58.02)\">\n",
       "    <path fill=\"none\" d=\"M11.43,-3.47 L-11.43,3.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.29,45.91)\">\n",
       "    <path fill=\"none\" d=\"M3.76,6.93 L-3.76,-6.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.95,56.37)\">\n",
       "    <path fill=\"none\" d=\"M4.35,-5.12 L-4.35,5.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.55,43.95)\">\n",
       "    <path fill=\"none\" d=\"M12.14,5.49 L-12.14,-5.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.95,48.02)\">\n",
       "    <path fill=\"none\" d=\"M4.84,-13.32 L-4.84,13.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.56,35.61)\">\n",
       "    <path fill=\"none\" d=\"M11.9,-1.88 L-11.9,1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.92,58.1)\">\n",
       "    <path fill=\"none\" d=\"M6.81,-3.71 L-6.81,3.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,45.69)\">\n",
       "    <path fill=\"none\" d=\"M15.14,7.19 L-15.14,-7.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,58.72)\">\n",
       "    <path fill=\"none\" d=\"M-9.86,-3.32 L9.86,3.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.06,58.42)\">\n",
       "    <path fill=\"none\" d=\"M4.23,-2.71 L-4.23,2.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.76,46.31)\">\n",
       "    <path fill=\"none\" d=\"M-2.66,7.29 L2.66,-7.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.99,59.59)\">\n",
       "    <path fill=\"none\" d=\"M-6.08,-2.38 L6.08,2.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.9,59.29)\">\n",
       "    <path fill=\"none\" d=\"M7.72,-2.22 L-7.72,2.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.59,47.18)\">\n",
       "    <path fill=\"none\" d=\"M0.62,8.12 L-0.62,-8.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.22,56.32)\">\n",
       "    <path fill=\"none\" d=\"M-5.37,-5.23 L5.37,5.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.13,56.02)\">\n",
       "    <path fill=\"none\" d=\"M9.22,-5.17 L-9.22,5.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.82,43.91)\">\n",
       "    <path fill=\"none\" d=\"M1.55,4.88 L-1.55,-4.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.52,56.14)\">\n",
       "    <path fill=\"none\" d=\"M-8.79,-5.59 L8.79,5.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.43,55.84)\">\n",
       "    <path fill=\"none\" d=\"M5.8,-5.15 L-5.8,5.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.12,43.73)\">\n",
       "    <path fill=\"none\" d=\"M-1.38,4.69 L1.38,-4.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.19,52.38)\">\n",
       "    <path fill=\"none\" d=\"M-1.12,-8.33 L1.12,8.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.89,40.26)\">\n",
       "    <path fill=\"none\" d=\"M-8.26,2.06 L8.26,-2.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.1,51)\">\n",
       "    <path fill=\"none\" d=\"M-5.69,-9.81 L5.69,9.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.79,38.88)\">\n",
       "    <path fill=\"none\" d=\"M-13.26,0.98 L13.26,-0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.83,50.4)\">\n",
       "    <path fill=\"none\" d=\"M2.09,-10.32 L-2.09,10.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.53,38.29)\">\n",
       "    <path fill=\"none\" d=\"M-4.53,0.37 L4.53,-0.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.36,53.85)\">\n",
       "    <path fill=\"none\" d=\"M-5.27,-7 L5.27,7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.05,41.74)\">\n",
       "    <path fill=\"none\" d=\"M-13.11,3.51 L13.11,-3.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.7,46.88)\">\n",
       "    <path fill=\"none\" d=\"M-3.47,-13.85 L3.47,13.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.39,34.77)\">\n",
       "    <path fill=\"none\" d=\"M-10.75,-2.59 L10.75,2.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.01,56.26)\">\n",
       "    <path fill=\"none\" d=\"M-8.09,-4.9 L8.09,4.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.7,44.14)\">\n",
       "    <path fill=\"none\" d=\"M-16.53,5.8 L16.53,-5.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.45,55.54)\">\n",
       "    <path fill=\"none\" d=\"M-1.63,-5.2 L1.63,5.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.15,43.42)\">\n",
       "    <path fill=\"none\" d=\"M-9.26,4.88 L9.26,-4.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.48,57.64)\">\n",
       "    <path fill=\"none\" d=\"M-4.72,-3.43 L4.72,3.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.18,45.53)\">\n",
       "    <path fill=\"none\" d=\"M-13.23,6.99 L13.23,-6.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.71,47.22)\">\n",
       "    <path fill=\"none\" d=\"M1.12,-13.48 L-1.12,13.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.41,35.11)\">\n",
       "    <path fill=\"none\" d=\"M-5.83,-2.08 L5.83,2.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.99,49.42)\">\n",
       "    <path fill=\"none\" d=\"M-2.24,-11.3 L2.24,11.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.69,37.31)\">\n",
       "    <path fill=\"none\" d=\"M-9.36,-0.39 L9.36,0.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.99,53.52)\">\n",
       "    <path fill=\"none\" d=\"M-9.29,-7.51 L9.29,7.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.68,41.41)\">\n",
       "    <path fill=\"none\" d=\"M-17.42,3.3 L17.42,-3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.81,48.34)\">\n",
       "    <path fill=\"none\" d=\"M-7,-12.46 L7,12.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.5,36.22)\">\n",
       "    <path fill=\"none\" d=\"M-14.56,-1.38 L14.56,1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.12,50.83)\">\n",
       "    <path fill=\"none\" d=\"M-9.36,-10.09 L9.36,10.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.82,38.71)\">\n",
       "    <path fill=\"none\" d=\"M-17.23,0.85 L17.23,-0.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.56,23.05)\">\n",
       "    <path fill=\"none\" d=\"M-1.2,-13.43 L1.2,13.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.15,23.89)\">\n",
       "    <path fill=\"none\" d=\"M6.65,-12.67 L-6.65,12.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.21,23.56)\">\n",
       "    <path fill=\"none\" d=\"M-5.17,-12.97 L5.17,12.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.53,24.76)\">\n",
       "    <path fill=\"none\" d=\"M-9.44,-11.89 L9.44,11.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.68,25.35)\">\n",
       "    <path fill=\"none\" d=\"M10.79,-11.35 L-10.79,11.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,23.26)\">\n",
       "    <path fill=\"none\" d=\"M2.7,-13.23 L-2.7,13.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.56,49.48)\">\n",
       "    <path fill=\"none\" d=\"M8.11,-11.95 L-8.11,11.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.17,37.07)\">\n",
       "    <path fill=\"none\" d=\"M15.47,-0.63 L-15.47,0.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.28,47.75)\">\n",
       "    <path fill=\"none\" d=\"M0.56,-13.55 L-0.56,13.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.88,35.34)\">\n",
       "    <path fill=\"none\" d=\"M7.3,-1.97 L-7.3,1.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.21,51.54)\">\n",
       "    <path fill=\"none\" d=\"M5.84,-9.87 L-5.84,9.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.81,39.13)\">\n",
       "    <path fill=\"none\" d=\"M13.13,1.19 L-13.13,-1.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.67,53.96)\">\n",
       "    <path fill=\"none\" d=\"M7.93,-7.59 L-7.93,7.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.28,41.55)\">\n",
       "    <path fill=\"none\" d=\"M15.66,3.4 L-15.66,-3.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.9,53.82)\">\n",
       "    <path fill=\"none\" d=\"M2.78,-7.53 L-2.78,7.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.51,41.41)\">\n",
       "    <path fill=\"none\" d=\"M9.97,3.11 L-9.97,-3.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.22,52.36)\">\n",
       "    <path fill=\"none\" d=\"M-2.14,-8.96 L2.14,8.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.83,39.95)\">\n",
       "    <path fill=\"none\" d=\"M4.33,1.58 L-4.33,-1.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,55.89)\">\n",
       "    <path fill=\"none\" d=\"M9.92,-5.88 L-9.92,5.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.58,43.47)\">\n",
       "    <path fill=\"none\" d=\"M18.02,5.21 L-18.02,-5.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.83,50.42)\">\n",
       "    <path fill=\"none\" d=\"M1.94,-10.89 L-1.94,10.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.43,38.01)\">\n",
       "    <path fill=\"none\" d=\"M8.74,0.2 L-8.74,-0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,51.97)\">\n",
       "    <path fill=\"none\" d=\"M10.22,-9.59 L-10.22,9.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.59,39.56)\">\n",
       "    <path fill=\"none\" d=\"M17.91,1.62 L-17.91,-1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.57,62.3)\">\n",
       "    <path fill=\"none\" d=\"M-15.26,-0.27 L15.26,0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.59,58.02)\">\n",
       "    <path fill=\"none\" d=\"M-11.43,3.47 L11.43,-3.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.06,58.42)\">\n",
       "    <path fill=\"none\" d=\"M-4.23,2.71 L4.23,-2.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.9,59.29)\">\n",
       "    <path fill=\"none\" d=\"M-7.72,2.22 L7.72,-2.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.13,56.02)\">\n",
       "    <path fill=\"none\" d=\"M-9.22,5.17 L9.22,-5.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.43,55.84)\">\n",
       "    <path fill=\"none\" d=\"M-5.8,5.15 L5.8,-5.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.19,52.38)\">\n",
       "    <path fill=\"none\" d=\"M1.12,8.33 L-1.12,-8.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.1,51)\">\n",
       "    <path fill=\"none\" d=\"M5.69,9.81 L-5.69,-9.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.83,50.4)\">\n",
       "    <path fill=\"none\" d=\"M-2.09,10.32 L2.09,-10.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.36,53.85)\">\n",
       "    <path fill=\"none\" d=\"M5.27,7 L-5.27,-7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.7,46.88)\">\n",
       "    <path fill=\"none\" d=\"M3.47,13.85 L-3.47,-13.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.01,56.26)\">\n",
       "    <path fill=\"none\" d=\"M8.09,4.9 L-8.09,-4.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.45,55.54)\">\n",
       "    <path fill=\"none\" d=\"M1.63,5.2 L-1.63,-5.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.48,57.64)\">\n",
       "    <path fill=\"none\" d=\"M4.72,3.43 L-4.72,-3.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.71,47.22)\">\n",
       "    <path fill=\"none\" d=\"M-1.12,13.48 L1.12,-13.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.99,49.42)\">\n",
       "    <path fill=\"none\" d=\"M2.24,11.3 L-2.24,-11.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.99,53.52)\">\n",
       "    <path fill=\"none\" d=\"M9.29,7.51 L-9.29,-7.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.81,48.34)\">\n",
       "    <path fill=\"none\" d=\"M7,12.46 L-7,-12.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.12,50.83)\">\n",
       "    <path fill=\"none\" d=\"M9.36,10.09 L-9.36,-10.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.18,49.88)\">\n",
       "    <path fill=\"none\" d=\"M-7.87,10.96 L7.87,-10.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.36,72.67)\">\n",
       "    <path fill=\"none\" d=\"M-10.75,-9.66 L10.75,9.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.04,69.19)\">\n",
       "    <path fill=\"none\" d=\"M-3.81,-6.01 L3.81,6.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.61,66.17)\">\n",
       "    <path fill=\"none\" d=\"M-12.44,-3.67 L12.44,3.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.81,72.76)\">\n",
       "    <path fill=\"none\" d=\"M-4.73,-9.54 L4.73,9.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.46,73.03)\">\n",
       "    <path fill=\"none\" d=\"M12.8,-10.07 L-12.8,10.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.31,70.27)\">\n",
       "    <path fill=\"none\" d=\"M15.67,-7.55 L-15.67,7.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.14,67.33)\">\n",
       "    <path fill=\"none\" d=\"M17.64,-4.87 L-17.64,4.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.87,76.64)\">\n",
       "    <path fill=\"none\" d=\"M6.06,-13.41 L-6.06,13.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.63,64.05)\">\n",
       "    <path fill=\"none\" d=\"M19.04,-1.87 L-19.04,1.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.86,58.69)\">\n",
       "    <path fill=\"none\" d=\"M18.84,3.02 L-18.84,-3.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.91,65.92)\">\n",
       "    <path fill=\"none\" d=\"M-3.29,-2.91 L3.29,2.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.95,69.24)\">\n",
       "    <path fill=\"none\" d=\"M-11.06,-6.42 L11.06,6.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.12,73.61)\">\n",
       "    <path fill=\"none\" d=\"M-7.79,-10.46 L7.79,10.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.72,66.51)\">\n",
       "    <path fill=\"none\" d=\"M0.55,-3.23 L-0.55,3.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.65,66.1)\">\n",
       "    <path fill=\"none\" d=\"M-7.62,-3.41 L7.62,3.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.52,66.46)\">\n",
       "    <path fill=\"none\" d=\"M-17.3,-4.06 L17.3,4.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.05,69.3)\">\n",
       "    <path fill=\"none\" d=\"M-16,-6.65 L16,6.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.75,71.66)\">\n",
       "    <path fill=\"none\" d=\"M-13.91,-8.81 L13.91,8.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.5,71.68)\">\n",
       "    <path fill=\"none\" d=\"M-1.75,-8.4 L1.75,8.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.15,69.33)\">\n",
       "    <path fill=\"none\" d=\"M0.27,-6.04 L-0.27,6.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.95,70.16)\">\n",
       "    <path fill=\"none\" d=\"M-7.39,-7.12 L7.39,7.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.27,50.18)\">\n",
       "    <path fill=\"none\" d=\"M-7.61,-11.25 L7.61,11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.29,45.91)\">\n",
       "    <path fill=\"none\" d=\"M-3.76,-6.93 L3.76,6.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.55,43.95)\">\n",
       "    <path fill=\"none\" d=\"M-12.14,-5.49 L12.14,5.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.56,35.61)\">\n",
       "    <path fill=\"none\" d=\"M-11.9,1.88 L11.9,-1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,45.69)\">\n",
       "    <path fill=\"none\" d=\"M-15.14,-7.19 L15.14,7.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.76,46.31)\">\n",
       "    <path fill=\"none\" d=\"M2.66,-7.29 L-2.66,7.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.59,47.18)\">\n",
       "    <path fill=\"none\" d=\"M-0.62,-8.12 L0.62,8.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.82,43.91)\">\n",
       "    <path fill=\"none\" d=\"M-1.55,-4.88 L1.55,4.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.12,43.73)\">\n",
       "    <path fill=\"none\" d=\"M1.38,-4.69 L-1.38,4.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.89,40.26)\">\n",
       "    <path fill=\"none\" d=\"M8.26,-2.06 L-8.26,2.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.79,38.88)\">\n",
       "    <path fill=\"none\" d=\"M13.26,-0.98 L-13.26,0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.53,38.29)\">\n",
       "    <path fill=\"none\" d=\"M4.53,-0.37 L-4.53,0.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.05,41.74)\">\n",
       "    <path fill=\"none\" d=\"M13.11,-3.51 L-13.11,3.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.39,34.77)\">\n",
       "    <path fill=\"none\" d=\"M10.75,2.59 L-10.75,-2.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.7,44.14)\">\n",
       "    <path fill=\"none\" d=\"M16.53,-5.8 L-16.53,5.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.15,43.42)\">\n",
       "    <path fill=\"none\" d=\"M9.26,-4.88 L-9.26,4.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.18,45.53)\">\n",
       "    <path fill=\"none\" d=\"M13.23,-6.99 L-13.23,6.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.41,35.11)\">\n",
       "    <path fill=\"none\" d=\"M5.83,2.08 L-5.83,-2.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.69,37.31)\">\n",
       "    <path fill=\"none\" d=\"M9.36,0.39 L-9.36,-0.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.68,41.41)\">\n",
       "    <path fill=\"none\" d=\"M17.42,-3.3 L-17.42,3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.5,36.22)\">\n",
       "    <path fill=\"none\" d=\"M14.56,1.38 L-14.56,-1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.82,38.71)\">\n",
       "    <path fill=\"none\" d=\"M17.23,-0.85 L-17.23,0.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.56,23.05)\">\n",
       "    <path fill=\"none\" d=\"M1.2,13.43 L-1.2,-13.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.15,23.89)\">\n",
       "    <path fill=\"none\" d=\"M-6.65,12.67 L6.65,-12.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.21,23.56)\">\n",
       "    <path fill=\"none\" d=\"M5.17,12.97 L-5.17,-12.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.53,24.76)\">\n",
       "    <path fill=\"none\" d=\"M9.44,11.89 L-9.44,-11.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.68,25.35)\">\n",
       "    <path fill=\"none\" d=\"M-10.79,11.35 L10.79,-11.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,23.26)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,13.23 L2.7,-13.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.17,37.07)\">\n",
       "    <path fill=\"none\" d=\"M-15.47,0.63 L15.47,-0.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.88,35.34)\">\n",
       "    <path fill=\"none\" d=\"M-7.3,1.97 L7.3,-1.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.81,39.13)\">\n",
       "    <path fill=\"none\" d=\"M-13.13,-1.19 L13.13,1.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.28,41.55)\">\n",
       "    <path fill=\"none\" d=\"M-15.66,-3.4 L15.66,3.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.51,41.41)\">\n",
       "    <path fill=\"none\" d=\"M-9.97,-3.11 L9.97,3.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.83,39.95)\">\n",
       "    <path fill=\"none\" d=\"M-4.33,-1.58 L4.33,1.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.58,43.47)\">\n",
       "    <path fill=\"none\" d=\"M-18.02,-5.21 L18.02,5.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.43,38.01)\">\n",
       "    <path fill=\"none\" d=\"M-8.74,-0.2 L8.74,0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.59,39.56)\">\n",
       "    <path fill=\"none\" d=\"M-17.91,-1.62 L17.91,1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.18,49.88)\">\n",
       "    <path fill=\"none\" d=\"M7.87,-10.96 L-7.87,10.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.45,72.97)\">\n",
       "    <path fill=\"none\" d=\"M-4.6,9.16 L4.6,-9.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.36,72.67)\">\n",
       "    <path fill=\"none\" d=\"M10.75,9.66 L-10.75,-9.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.12,69.49)\">\n",
       "    <path fill=\"none\" d=\"M-11.09,6.1 L11.09,-6.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.04,69.19)\">\n",
       "    <path fill=\"none\" d=\"M3.81,6.01 L-3.81,-6.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.69,66.47)\">\n",
       "    <path fill=\"none\" d=\"M-2.1,2.73 L2.1,-2.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.61,66.17)\">\n",
       "    <path fill=\"none\" d=\"M12.44,3.67 L-12.44,-3.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.9,73.06)\">\n",
       "    <path fill=\"none\" d=\"M-10.62,9.45 L10.62,-9.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.81,72.76)\">\n",
       "    <path fill=\"none\" d=\"M4.73,9.54 L-4.73,-9.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.46,73.03)\">\n",
       "    <path fill=\"none\" d=\"M-12.8,10.07 L12.8,-10.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.31,70.27)\">\n",
       "    <path fill=\"none\" d=\"M-15.67,7.55 L15.67,-7.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.14,67.33)\">\n",
       "    <path fill=\"none\" d=\"M-17.64,4.87 L17.64,-4.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.87,76.64)\">\n",
       "    <path fill=\"none\" d=\"M-6.06,13.41 L6.06,-13.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.63,64.05)\">\n",
       "    <path fill=\"none\" d=\"M-19.04,1.87 L19.04,-1.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.86,58.69)\">\n",
       "    <path fill=\"none\" d=\"M-18.84,-3.02 L18.84,3.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75,66.21)\">\n",
       "    <path fill=\"none\" d=\"M-10.97,3.13 L10.97,-3.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.91,65.92)\">\n",
       "    <path fill=\"none\" d=\"M3.29,2.91 L-3.29,-2.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.04,69.54)\">\n",
       "    <path fill=\"none\" d=\"M-3.84,5.77 L3.84,-5.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.95,69.24)\">\n",
       "    <path fill=\"none\" d=\"M11.06,6.42 L-11.06,-6.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.21,73.91)\">\n",
       "    <path fill=\"none\" d=\"M-7.6,10.17 L7.6,-10.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.12,73.61)\">\n",
       "    <path fill=\"none\" d=\"M7.79,10.46 L-7.79,-10.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.81,66.81)\">\n",
       "    <path fill=\"none\" d=\"M-16.12,3.8 L16.12,-3.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.72,66.51)\">\n",
       "    <path fill=\"none\" d=\"M-0.55,3.23 L0.55,-3.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.73,66.4)\">\n",
       "    <path fill=\"none\" d=\"M-6.41,3.08 L6.41,-3.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.65,66.1)\">\n",
       "    <path fill=\"none\" d=\"M7.62,3.41 L-7.62,-3.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.6,66.76)\">\n",
       "    <path fill=\"none\" d=\"M1.37,2.94 L-1.37,-2.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.52,66.46)\">\n",
       "    <path fill=\"none\" d=\"M17.3,4.06 L-17.3,-4.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.14,69.6)\">\n",
       "    <path fill=\"none\" d=\"M0.39,5.71 L-0.39,-5.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.05,69.3)\">\n",
       "    <path fill=\"none\" d=\"M16,6.65 L-16,-6.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.84,71.96)\">\n",
       "    <path fill=\"none\" d=\"M-1.57,8.09 L1.57,-8.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.75,71.66)\">\n",
       "    <path fill=\"none\" d=\"M13.91,8.81 L-13.91,-8.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.59,71.98)\">\n",
       "    <path fill=\"none\" d=\"M-13.7,8.53 L13.7,-8.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.5,71.68)\">\n",
       "    <path fill=\"none\" d=\"M1.75,8.4 L-1.75,-8.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.24,69.63)\">\n",
       "    <path fill=\"none\" d=\"M-15.83,6.4 L15.83,-6.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.15,69.33)\">\n",
       "    <path fill=\"none\" d=\"M-0.27,6.04 L0.27,-6.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.04,70.46)\">\n",
       "    <path fill=\"none\" d=\"M-7.5,6.84 L7.5,-6.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.95,70.16)\">\n",
       "    <path fill=\"none\" d=\"M7.39,7.12 L-7.39,-7.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.08,70.9)\">\n",
       "    <path fill=\"none\" d=\"M15.91,7.58 L-15.91,-7.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.81,77.13)\">\n",
       "    <path fill=\"none\" d=\"M6.55,13.31 L-6.55,-13.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.65,63.84)\">\n",
       "    <path fill=\"none\" d=\"M19.17,1.13 L-19.17,-1.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.42,74.71)\">\n",
       "    <path fill=\"none\" d=\"M11.66,11.07 L-11.66,-11.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.36,67.57)\">\n",
       "    <path fill=\"none\" d=\"M17.98,4.54 L-17.98,-4.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-50ae6412-2\">\n",
       "  <g transform=\"translate(82.74,57.3)\">\n",
       "    <path fill=\"none\" d=\"M-0.67,1.87 L-2.03,-2.18 2.7,0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.39,53.48)\">\n",
       "    <path fill=\"none\" d=\"M-2.68,0.39 L1.9,-2.24 0.78,1.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.87,37.23)\">\n",
       "    <path fill=\"none\" d=\"M-2.41,0.91 L0.92,-2.53 1.49,1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.81,55.98)\">\n",
       "    <path fill=\"none\" d=\"M-2.69,-0.33 L2.92,-1.59 -0.23,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.63,56.52)\">\n",
       "    <path fill=\"none\" d=\"M0.8,1.85 L-3.33,-1.12 2.53,-0.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.14,58.47)\">\n",
       "    <path fill=\"none\" d=\"M0.64,1.88 L-3.23,-1.27 2.59,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.02,53.2)\">\n",
       "    <path fill=\"none\" d=\"M-0.55,1.89 L-2.17,-2.11 2.72,0.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.47,52.29)\">\n",
       "    <path fill=\"none\" d=\"M0.02,1.93 L-2.74,-1.75 2.72,-0.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.07,39.89)\">\n",
       "    <path fill=\"none\" d=\"M-2.62,0.56 L1.6,-2.35 1.02,1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.73,36.8)\">\n",
       "    <path fill=\"none\" d=\"M-2.07,1.26 L0.11,-2.61 1.96,1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.63,44.08)\">\n",
       "    <path fill=\"none\" d=\"M-2.57,0.65 L1.43,-2.41 1.15,1.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.41,48.47)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,0.2 L2.19,-2.1 0.53,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.75,48.82)\">\n",
       "    <path fill=\"none\" d=\"M-2.42,0.9 L0.93,-2.53 1.48,1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.7,45.97)\">\n",
       "    <path fill=\"none\" d=\"M-1.68,1.52 L-0.61,-2.57 2.29,1.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.06,51.68)\">\n",
       "    <path fill=\"none\" d=\"M-2.71,-0.25 L2.83,-1.68 -0.12,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.31,42.12)\">\n",
       "    <path fill=\"none\" d=\"M-2.23,1.12 L0.46,-2.59 1.77,1.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.99,44.46)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,0.18 L2.22,-2.08 0.5,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59,62.09)\">\n",
       "    <path fill=\"none\" d=\"M1.8,1.46 L-3.69,-0.06 1.9,-1.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.25,41.29)\">\n",
       "    <path fill=\"none\" d=\"M-1.02,1.79 L-1.59,-2.35 2.61,0.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.09,79.67)\">\n",
       "    <path fill=\"none\" d=\"M2.52,-0.75 L-1.24,2.46 -1.28,-1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.94,73.99)\">\n",
       "    <path fill=\"none\" d=\"M2.69,0.32 L-2.91,1.6 0.22,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.36,66.9)\">\n",
       "    <path fill=\"none\" d=\"M2.65,-0.47 L-1.76,2.29 -0.89,-1.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.58,80.46)\">\n",
       "    <path fill=\"none\" d=\"M2.73,-0.13 L-2.3,2.04 -0.43,-1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.46,68.37)\">\n",
       "    <path fill=\"none\" d=\"M2.47,0.83 L-3.42,0.98 0.96,-1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.77,72.95)\">\n",
       "    <path fill=\"none\" d=\"M2.61,-0.57 L-1.57,2.36 -1.04,-1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.34,81.76)\">\n",
       "    <path fill=\"none\" d=\"M2.64,-0.49 L-1.72,2.31 -0.92,-1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.19,69.79)\">\n",
       "    <path fill=\"none\" d=\"M2.39,0.94 L-3.5,0.83 1.11,-1.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.37,68.01)\">\n",
       "    <path fill=\"none\" d=\"M2.66,0.45 L-3.06,1.46 0.4,-1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.82,67.22)\">\n",
       "    <path fill=\"none\" d=\"M1.34,-1.69 L1.16,2.48 -2.49,-0.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.36,72.7)\">\n",
       "    <path fill=\"none\" d=\"M1.92,-1.37 L0.18,2.61 -2.1,-1.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.78,77.47)\">\n",
       "    <path fill=\"none\" d=\"M2.25,-1.1 L-0.5,2.59 -1.75,-1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.65,78.78)\">\n",
       "    <path fill=\"none\" d=\"M2.72,0.21 L-2.77,1.72 0.05,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.61,74.73)\">\n",
       "    <path fill=\"none\" d=\"M2.6,0.59 L-3.21,1.29 0.6,-1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.81,75.23)\">\n",
       "    <path fill=\"none\" d=\"M2.72,-0.16 L-2.26,2.06 -0.46,-1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.93,77.03)\">\n",
       "    <path fill=\"none\" d=\"M-0.4,-1.91 L3.06,1.46 -2.66,0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.14,87.98)\">\n",
       "    <path fill=\"none\" d=\"M1.3,-1.7 L1.21,2.47 -2.51,-0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.14,64.75)\">\n",
       "    <path fill=\"none\" d=\"M-1.67,-1.53 L3.68,0.22 -2.01,1.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.87,83.69)\">\n",
       "    <path fill=\"none\" d=\"M0.51,-1.9 L2.2,2.09 -2.72,-0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(121.86,71.23)\">\n",
       "    <path fill=\"none\" d=\"M-1.06,-1.78 L3.48,0.88 -2.42,0.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.63,59.34)\">\n",
       "    <path fill=\"none\" d=\"M0.67,-1.87 L2.03,2.18 -2.7,-0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.56,60.46)\">\n",
       "    <path fill=\"none\" d=\"M2.49,0.8 L-3.39,1.03 0.9,-1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.85,41.41)\">\n",
       "    <path fill=\"none\" d=\"M-1.22,1.73 L-1.32,-2.44 2.54,0.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.5,59.25)\">\n",
       "    <path fill=\"none\" d=\"M2.68,-0.39 L-1.9,2.24 -0.78,-1.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.52,39.87)\">\n",
       "    <path fill=\"none\" d=\"M0.47,1.9 L-3.11,-1.41 2.64,-0.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.03,58.82)\">\n",
       "    <path fill=\"none\" d=\"M2.41,-0.91 L-0.92,2.53 -1.49,-1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.26,36.92)\">\n",
       "    <path fill=\"none\" d=\"M2.24,1.11 L-3.6,0.57 1.36,-1.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.03,60.22)\">\n",
       "    <path fill=\"none\" d=\"M2.69,0.33 L-2.92,1.59 0.23,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.45,39.95)\">\n",
       "    <path fill=\"none\" d=\"M0.41,1.91 L-3.06,-1.46 2.66,-0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.68,60.92)\">\n",
       "    <path fill=\"none\" d=\"M-0.8,-1.85 L3.33,1.12 -2.53,0.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.57,59.38)\">\n",
       "    <path fill=\"none\" d=\"M2.72,0.18 L-2.74,1.75 0.01,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.49,41.55)\">\n",
       "    <path fill=\"none\" d=\"M-2.41,0.91 L0.92,-2.53 1.49,1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.83,60.71)\">\n",
       "    <path fill=\"none\" d=\"M-0.64,-1.88 L3.23,1.27 -2.59,0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.6,60.53)\">\n",
       "    <path fill=\"none\" d=\"M2.47,0.83 L-3.42,0.98 0.95,-1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.17,41.67)\">\n",
       "    <path fill=\"none\" d=\"M-1.91,1.38 L-0.2,-2.61 2.11,1.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.42,59.44)\">\n",
       "    <path fill=\"none\" d=\"M0.55,-1.89 L2.17,2.11 -2.72,-0.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.81,59.57)\">\n",
       "    <path fill=\"none\" d=\"M2.7,0.3 L-2.89,1.62 0.19,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.08,41.58)\">\n",
       "    <path fill=\"none\" d=\"M-1.56,1.59 L-0.81,-2.55 2.37,0.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.56,59.99)\">\n",
       "    <path fill=\"none\" d=\"M-0.02,-1.93 L2.74,1.75 -2.72,0.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.92,58.95)\">\n",
       "    <path fill=\"none\" d=\"M2.73,-0.13 L-2.3,2.04 -0.42,-1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.75,41.59)\">\n",
       "    <path fill=\"none\" d=\"M-2.35,0.99 L0.75,-2.56 1.6,1.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.96,58.11)\">\n",
       "    <path fill=\"none\" d=\"M1.83,-1.43 L0.35,2.6 -2.18,-1.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.67,39.07)\">\n",
       "    <path fill=\"none\" d=\"M-2.41,-0.91 L3.48,-0.87 -1.07,1.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.39,58.39)\">\n",
       "    <path fill=\"none\" d=\"M1.16,-1.75 L1.4,2.41 -2.57,-0.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.38,38.18)\">\n",
       "    <path fill=\"none\" d=\"M-2.04,-1.28 L3.67,-0.27 -1.63,1.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.27,58.13)\">\n",
       "    <path fill=\"none\" d=\"M2.26,-1.09 L-0.52,2.58 -1.73,-1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.39,38.22)\">\n",
       "    <path fill=\"none\" d=\"M-2.06,-1.27 L3.67,-0.3 -1.6,1.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.89,58.55)\">\n",
       "    <path fill=\"none\" d=\"M0.91,-1.82 L1.73,2.3 -2.65,-0.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.71,39.15)\">\n",
       "    <path fill=\"none\" d=\"M-2.44,-0.87 L3.45,-0.92 -1.01,1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.52,58.16)\">\n",
       "    <path fill=\"none\" d=\"M1.66,-1.53 L0.64,2.57 -2.31,-1.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.65,36.51)\">\n",
       "    <path fill=\"none\" d=\"M-1.1,-1.77 L3.49,0.84 -2.4,0.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.29,59.46)\">\n",
       "    <path fill=\"none\" d=\"M-0.09,-1.93 L2.8,1.7 -2.71,0.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.93,39.51)\">\n",
       "    <path fill=\"none\" d=\"M-2.55,-0.7 L3.31,-1.16 -0.76,1.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.29,58.19)\">\n",
       "    <path fill=\"none\" d=\"M1.57,-1.58 L0.8,2.55 -2.37,-0.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.45,40.1)\">\n",
       "    <path fill=\"none\" d=\"M-2.68,-0.36 L2.96,-1.56 -0.28,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.63,59.2)\">\n",
       "    <path fill=\"none\" d=\"M0.16,-1.93 L2.58,1.87 -2.73,0.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.45,40.11)\">\n",
       "    <path fill=\"none\" d=\"M-2.68,-0.36 L2.96,-1.56 -0.27,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.81,58.1)\">\n",
       "    <path fill=\"none\" d=\"M2.12,-1.22 L-0.22,2.61 -1.9,-1.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.94,36.01)\">\n",
       "    <path fill=\"none\" d=\"M-0.74,-1.86 L3.3,1.18 -2.56,0.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.72,58.13)\">\n",
       "    <path fill=\"none\" d=\"M1.74,-1.49 L0.51,2.59 -2.25,-1.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.36,37.54)\">\n",
       "    <path fill=\"none\" d=\"M-1.72,-1.5 L3.69,0.15 -1.96,1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.85,59.06)\">\n",
       "    <path fill=\"none\" d=\"M0.3,-1.92 L2.43,1.96 -2.73,-0.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.54,38.78)\">\n",
       "    <path fill=\"none\" d=\"M-2.3,-1.04 L3.57,-0.68 -1.26,1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.45,58.37)\">\n",
       "    <path fill=\"none\" d=\"M1.19,-1.74 L1.36,2.43 -2.55,-0.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.4,37.25)\">\n",
       "    <path fill=\"none\" d=\"M-1.56,-1.59 L3.66,0.35 -2.1,1.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.46,58.73)\">\n",
       "    <path fill=\"none\" d=\"M0.67,-1.87 L2.02,2.18 -2.7,-0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.37,38.04)\">\n",
       "    <path fill=\"none\" d=\"M-1.98,-1.33 L3.68,-0.18 -1.7,1.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.52,33.88)\">\n",
       "    <path fill=\"none\" d=\"M1.9,-1.39 L0.23,2.61 -2.13,-1.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.79,34.11)\">\n",
       "    <path fill=\"none\" d=\"M2.53,-0.73 L-1.28,2.45 -1.25,-1.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.37,34.02)\">\n",
       "    <path fill=\"none\" d=\"M1.44,-1.64 L1,2.51 -2.44,-0.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.17,34.37)\">\n",
       "    <path fill=\"none\" d=\"M0.85,-1.84 L1.81,2.28 -2.66,-0.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.95,34.53)\">\n",
       "    <path fill=\"none\" d=\"M2.7,-0.29 L-2.06,2.17 -0.64,-1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.66,33.91)\">\n",
       "    <path fill=\"none\" d=\"M2.26,-1.09 L-0.53,2.58 -1.73,-1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.05,59.08)\">\n",
       "    <path fill=\"none\" d=\"M2.62,-0.56 L-1.6,2.35 -1.02,-1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.38,37.55)\">\n",
       "    <path fill=\"none\" d=\"M1.96,1.35 L-3.69,0.15 1.73,-1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.82,58.7)\">\n",
       "    <path fill=\"none\" d=\"M2.07,-1.26 L-0.11,2.61 -1.96,-1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.03,36.38)\">\n",
       "    <path fill=\"none\" d=\"M2.44,0.87 L-3.45,0.93 1.01,-1.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.79,59)\">\n",
       "    <path fill=\"none\" d=\"M2.57,-0.65 L-1.43,2.41 -1.15,-1.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.34,38.27)\">\n",
       "    <path fill=\"none\" d=\"M1.57,1.58 L-3.66,-0.33 2.09,-1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.94,59.46)\">\n",
       "    <path fill=\"none\" d=\"M2.72,-0.2 L-2.19,2.1 -0.53,-1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,38.92)\">\n",
       "    <path fill=\"none\" d=\"M1.17,1.75 L-3.53,-0.77 2.36,-0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.06,58.82)\">\n",
       "    <path fill=\"none\" d=\"M2.42,-0.9 L-0.93,2.53 -1.48,-1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.92,39.35)\">\n",
       "    <path fill=\"none\" d=\"M0.87,1.83 L-3.38,-1.06 2.5,-0.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.74,58.75)\">\n",
       "    <path fill=\"none\" d=\"M1.68,-1.52 L0.61,2.57 -2.29,-1.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.77,39.56)\">\n",
       "    <path fill=\"none\" d=\"M0.71,1.87 L-3.28,-1.2 2.56,-0.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.89,60.09)\">\n",
       "    <path fill=\"none\" d=\"M2.71,0.25 L-2.83,1.68 0.12,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.98,39.25)\">\n",
       "    <path fill=\"none\" d=\"M0.95,1.81 L-3.42,-0.99 2.47,-0.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.35,58.73)\">\n",
       "    <path fill=\"none\" d=\"M2.23,-1.12 L-0.46,2.59 -1.77,-1.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.39,37.9)\">\n",
       "    <path fill=\"none\" d=\"M1.78,1.47 L-3.69,-0.08 1.91,-1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.98,59.48)\">\n",
       "    <path fill=\"none\" d=\"M2.72,-0.18 L-2.22,2.08 -0.5,-1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.34,38.27)\">\n",
       "    <path fill=\"none\" d=\"M1.57,1.58 L-3.66,-0.33 2.09,-1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.14,62.5)\">\n",
       "    <path fill=\"none\" d=\"M-1.8,-1.46 L3.69,0.06 -1.9,1.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.63,55.58)\">\n",
       "    <path fill=\"none\" d=\"M-2.49,-0.8 L3.39,-1.03 -0.9,1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.55,57.47)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,-0.18 L2.74,-1.75 -0.01,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.2,58.05)\">\n",
       "    <path fill=\"none\" d=\"M-2.47,-0.83 L3.42,-0.98 -0.95,1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.46,52.47)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,-0.3 L2.89,-1.62 -0.19,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.93,52.73)\">\n",
       "    <path fill=\"none\" d=\"M-2.73,0.13 L2.3,-2.04 0.42,1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.43,46.64)\">\n",
       "    <path fill=\"none\" d=\"M-1.83,1.43 L-0.35,-2.6 2.18,1.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.81,43.61)\">\n",
       "    <path fill=\"none\" d=\"M-1.16,1.75 L-1.4,-2.41 2.57,0.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.4,42.66)\">\n",
       "    <path fill=\"none\" d=\"M-2.26,1.09 L0.52,-2.58 1.73,1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.83,49.15)\">\n",
       "    <path fill=\"none\" d=\"M-0.91,1.82 L-1.73,-2.3 2.65,0.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.88,35.6)\">\n",
       "    <path fill=\"none\" d=\"M-1.66,1.53 L-0.64,-2.57 2.31,1.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.73,53.06)\">\n",
       "    <path fill=\"none\" d=\"M0.09,1.93 L-2.8,-1.7 2.71,-0.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.62,52.89)\">\n",
       "    <path fill=\"none\" d=\"M-1.57,1.58 L-0.8,-2.55 2.37,0.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.33,56.08)\">\n",
       "    <path fill=\"none\" d=\"M-0.16,1.93 L-2.58,-1.87 2.73,-0.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.62,36.34)\">\n",
       "    <path fill=\"none\" d=\"M-2.12,1.22 L0.22,-2.61 1.9,1.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.27,40.71)\">\n",
       "    <path fill=\"none\" d=\"M-1.74,1.49 L-0.51,-2.59 2.25,1.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.13,47.98)\">\n",
       "    <path fill=\"none\" d=\"M-0.3,1.92 L-2.43,-1.96 2.73,0.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.17,38.3)\">\n",
       "    <path fill=\"none\" d=\"M-1.19,1.74 L-1.36,-2.43 2.55,0.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.79,42.92)\">\n",
       "    <path fill=\"none\" d=\"M-0.67,1.87 L-2.02,-2.18 2.7,0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.37,41.25)\">\n",
       "    <path fill=\"none\" d=\"M-2.63,0.52 L1.67,-2.33 0.96,1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,80.28)\">\n",
       "    <path fill=\"none\" d=\"M0.44,-1.91 L2.28,2.05 -2.73,-0.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.33,72.82)\">\n",
       "    <path fill=\"none\" d=\"M1.09,-1.77 L1.51,2.38 -2.59,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.63,68.83)\">\n",
       "    <path fill=\"none\" d=\"M-0.93,-1.82 L3.41,1.01 -2.48,0.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.32,79.84)\">\n",
       "    <path fill=\"none\" d=\"M1.29,-1.7 L1.22,2.46 -2.51,-0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(29.13,81.15)\">\n",
       "    <path fill=\"none\" d=\"M2.73,-0.02 L-2.47,1.94 -0.27,-1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(23.69,76.35)\">\n",
       "    <path fill=\"none\" d=\"M2.66,0.44 L-3.05,1.47 0.39,-1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.93,71.25)\">\n",
       "    <path fill=\"none\" d=\"M2.45,0.85 L-3.44,0.95 0.99,-1.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.93,87.56)\">\n",
       "    <path fill=\"none\" d=\"M2.48,-0.81 L-1.12,2.49 -1.36,-1.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(17.25,65.56)\">\n",
       "    <path fill=\"none\" d=\"M2.11,1.23 L-3.66,0.36 1.55,-1.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(17.62,56.24)\">\n",
       "    <path fill=\"none\" d=\"M1.35,1.68 L-3.6,-0.58 2.25,-1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.9,66.78)\">\n",
       "    <path fill=\"none\" d=\"M0.42,-1.91 L2.31,2.04 -2.73,-0.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.16,74.01)\">\n",
       "    <path fill=\"none\" d=\"M-0.15,-1.93 L2.85,1.66 -2.71,0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.19,81.76)\">\n",
       "    <path fill=\"none\" d=\"M0.92,-1.82 L1.72,2.31 -2.64,-0.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.61,67.15)\">\n",
       "    <path fill=\"none\" d=\"M2.22,-1.13 L-0.44,2.59 -1.78,-1.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.14,68.11)\">\n",
       "    <path fill=\"none\" d=\"M-0.48,-1.9 L3.12,1.4 -2.64,0.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.31,69.7)\">\n",
       "    <path fill=\"none\" d=\"M-1.12,-1.76 L3.5,0.82 -2.39,0.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.87,74.62)\">\n",
       "    <path fill=\"none\" d=\"M-0.57,-1.89 L3.18,1.32 -2.61,0.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.91,78.73)\">\n",
       "    <path fill=\"none\" d=\"M-0.03,-1.93 L2.75,1.74 -2.72,0.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.71,77.49)\">\n",
       "    <path fill=\"none\" d=\"M1.73,-1.5 L0.54,2.58 -2.26,-1.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53,72.77)\">\n",
       "    <path fill=\"none\" d=\"M2.07,-1.26 L-0.12,2.61 -1.96,-1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.16,75.17)\">\n",
       "    <path fill=\"none\" d=\"M0.53,-1.9 L2.18,2.1 -2.72,-0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.28,59.08)\">\n",
       "    <path fill=\"none\" d=\"M1.02,-1.79 L1.59,2.35 -2.61,-0.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.73,50.4)\">\n",
       "    <path fill=\"none\" d=\"M1.22,-1.73 L1.32,2.44 -2.54,-0.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.58,48.03)\">\n",
       "    <path fill=\"none\" d=\"M-0.47,-1.9 L3.11,1.41 -2.64,0.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.85,34.3)\">\n",
       "    <path fill=\"none\" d=\"M-2.24,-1.11 L3.6,-0.57 -1.36,1.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.6,51.42)\">\n",
       "    <path fill=\"none\" d=\"M-0.41,-1.91 L3.06,1.46 -2.66,0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.02,51.07)\">\n",
       "    <path fill=\"none\" d=\"M2.41,-0.91 L-0.92,2.53 -1.49,-1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.01,52.69)\">\n",
       "    <path fill=\"none\" d=\"M1.91,-1.38 L0.2,2.61 -2.11,-1.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.57,46.24)\">\n",
       "    <path fill=\"none\" d=\"M1.56,-1.59 L0.81,2.55 -2.37,-0.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.49,45.86)\">\n",
       "    <path fill=\"none\" d=\"M2.35,-0.99 L-0.75,2.56 -1.6,-1.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.11,41.46)\">\n",
       "    <path fill=\"none\" d=\"M2.41,0.91 L-3.48,0.87 1.07,-1.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.21,39.59)\">\n",
       "    <path fill=\"none\" d=\"M2.04,1.28 L-3.67,0.27 1.63,-1.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.67,38.35)\">\n",
       "    <path fill=\"none\" d=\"M2.06,1.27 L-3.67,0.3 1.6,-1.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.4,44.33)\">\n",
       "    <path fill=\"none\" d=\"M2.44,0.87 L-3.45,0.92 1.01,-1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.14,33.02)\">\n",
       "    <path fill=\"none\" d=\"M1.1,1.77 L-3.49,-0.84 2.4,-0.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.48,48.78)\">\n",
       "    <path fill=\"none\" d=\"M2.55,0.7 L-3.31,1.16 0.76,-1.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.85,46.74)\">\n",
       "    <path fill=\"none\" d=\"M2.68,0.36 L-2.96,1.56 0.28,-1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.91,50.95)\">\n",
       "    <path fill=\"none\" d=\"M2.68,0.36 L-2.96,1.56 0.27,-1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.87,34.21)\">\n",
       "    <path fill=\"none\" d=\"M0.74,1.86 L-3.3,-1.18 2.56,-0.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.01,37.07)\">\n",
       "    <path fill=\"none\" d=\"M1.72,1.5 L-3.69,-0.15 1.96,-1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.82,44.03)\">\n",
       "    <path fill=\"none\" d=\"M2.3,1.04 L-3.57,0.68 1.26,-1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.6,35.19)\">\n",
       "    <path fill=\"none\" d=\"M1.56,1.59 L-3.66,-0.35 2.1,-1.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.27,39.38)\">\n",
       "    <path fill=\"none\" d=\"M1.98,1.33 L-3.68,0.18 1.7,-1.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.6,12.23)\">\n",
       "    <path fill=\"none\" d=\"M-1.9,1.39 L-0.23,-2.61 2.13,1.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.52,13.66)\">\n",
       "    <path fill=\"none\" d=\"M-2.53,0.73 L1.28,-2.45 1.25,1.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.04,13.11)\">\n",
       "    <path fill=\"none\" d=\"M-1.44,1.64 L-1,-2.51 2.44,0.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.9,15.15)\">\n",
       "    <path fill=\"none\" d=\"M-0.85,1.84 L-1.81,-2.28 2.66,0.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.41,16.16)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,0.29 L2.06,-2.17 0.64,1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76,12.62)\">\n",
       "    <path fill=\"none\" d=\"M-2.26,1.09 L0.53,-2.58 1.73,1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.95,36.59)\">\n",
       "    <path fill=\"none\" d=\"M-1.96,-1.35 L3.69,-0.15 -1.73,1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.74,34.3)\">\n",
       "    <path fill=\"none\" d=\"M-2.44,-0.87 L3.45,-0.93 -1.01,1.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.28,39.98)\">\n",
       "    <path fill=\"none\" d=\"M-1.57,-1.58 L3.66,0.33 -2.09,1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.41,44.18)\">\n",
       "    <path fill=\"none\" d=\"M-1.17,-1.75 L3.53,0.77 -2.36,0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.1,43.47)\">\n",
       "    <path fill=\"none\" d=\"M-0.87,-1.83 L3.38,1.06 -2.5,0.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.88,40.33)\">\n",
       "    <path fill=\"none\" d=\"M-0.71,-1.87 L3.28,1.2 -2.56,0.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.18,47.7)\">\n",
       "    <path fill=\"none\" d=\"M-0.95,-1.81 L3.42,0.99 -2.47,0.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.48,38.13)\">\n",
       "    <path fill=\"none\" d=\"M-1.78,-1.47 L3.69,0.08 -1.91,1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.83,40.85)\">\n",
       "    <path fill=\"none\" d=\"M-1.57,-1.58 L3.66,0.33 -2.09,1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.98,58.52)\">\n",
       "    <path fill=\"none\" d=\"M2.63,-0.52 L-1.67,2.33 -0.96,-1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.81,66.27)\">\n",
       "    <path fill=\"none\" d=\"M-2.52,0.75 L1.24,-2.46 1.28,1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.9,65.06)\">\n",
       "    <path fill=\"none\" d=\"M-0.44,1.91 L-2.28,-2.05 2.73,0.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.3,64.99)\">\n",
       "    <path fill=\"none\" d=\"M-2.69,-0.32 L2.91,-1.6 -0.22,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.74,65.56)\">\n",
       "    <path fill=\"none\" d=\"M-1.09,1.77 L-1.51,-2.38 2.59,0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.03,66.03)\">\n",
       "    <path fill=\"none\" d=\"M-2.65,0.47 L1.76,-2.29 0.89,1.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.58,63.5)\">\n",
       "    <path fill=\"none\" d=\"M0.93,1.82 L-3.41,-1.01 2.48,-0.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.23,65.65)\">\n",
       "    <path fill=\"none\" d=\"M-2.73,0.13 L2.3,-2.04 0.43,1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.31,65.68)\">\n",
       "    <path fill=\"none\" d=\"M-1.29,1.7 L-1.22,-2.46 2.51,0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.79,64.9)\">\n",
       "    <path fill=\"none\" d=\"M-2.73,0.02 L2.47,-1.94 0.27,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.92,64.19)\">\n",
       "    <path fill=\"none\" d=\"M-2.66,-0.44 L3.05,-1.47 -0.39,1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.34,63.42)\">\n",
       "    <path fill=\"none\" d=\"M-2.45,-0.85 L3.44,-0.95 -0.99,1.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.8,65.71)\">\n",
       "    <path fill=\"none\" d=\"M-2.48,0.81 L1.12,-2.49 1.36,1.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.02,62.54)\">\n",
       "    <path fill=\"none\" d=\"M-2.11,-1.23 L3.66,-0.36 -1.55,1.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.1,61.13)\">\n",
       "    <path fill=\"none\" d=\"M-1.35,-1.68 L3.6,0.58 -2.25,1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.54,64.06)\">\n",
       "    <path fill=\"none\" d=\"M-2.47,-0.83 L3.42,-0.98 -0.96,1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.93,65.05)\">\n",
       "    <path fill=\"none\" d=\"M-0.42,1.91 L-2.31,-2.04 2.73,0.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.31,66.13)\">\n",
       "    <path fill=\"none\" d=\"M-2.61,0.57 L1.57,-2.36 1.04,1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.75,64.47)\">\n",
       "    <path fill=\"none\" d=\"M0.15,1.93 L-2.85,-1.66 2.71,-0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.08,66.05)\">\n",
       "    <path fill=\"none\" d=\"M-2.64,0.49 L1.72,-2.31 0.92,1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.05,65.45)\">\n",
       "    <path fill=\"none\" d=\"M-0.92,1.82 L-1.72,-2.31 2.64,0.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.43,63.83)\">\n",
       "    <path fill=\"none\" d=\"M-2.39,-0.94 L3.5,-0.83 -1.11,1.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.83,65.87)\">\n",
       "    <path fill=\"none\" d=\"M-2.22,1.13 L0.44,-2.59 1.78,1.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.09,64.79)\">\n",
       "    <path fill=\"none\" d=\"M-2.66,-0.45 L3.06,-1.46 -0.4,1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.15,64.08)\">\n",
       "    <path fill=\"none\" d=\"M0.48,1.9 L-3.12,-1.4 2.64,-0.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.39,66.3)\">\n",
       "    <path fill=\"none\" d=\"M-1.34,1.69 L-1.16,-2.48 2.49,0.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.72,63.23)\">\n",
       "    <path fill=\"none\" d=\"M1.12,1.76 L-3.5,-0.82 2.39,-0.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.93,66.49)\">\n",
       "    <path fill=\"none\" d=\"M-1.92,1.37 L-0.18,-2.61 2.1,1.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.24,63.97)\">\n",
       "    <path fill=\"none\" d=\"M0.57,1.89 L-3.18,-1.32 2.61,-0.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.91,66.46)\">\n",
       "    <path fill=\"none\" d=\"M-2.25,1.1 L0.5,-2.59 1.75,1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.6,64.6)\">\n",
       "    <path fill=\"none\" d=\"M0.03,1.93 L-2.75,-1.74 2.72,-0.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.52,65.17)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,-0.21 L2.77,-1.72 -0.05,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.29,65.86)\">\n",
       "    <path fill=\"none\" d=\"M-1.73,1.5 L-0.54,-2.58 2.26,1.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.87,64.53)\">\n",
       "    <path fill=\"none\" d=\"M-2.6,-0.59 L3.21,-1.29 -0.6,1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.31,65.9)\">\n",
       "    <path fill=\"none\" d=\"M-2.07,1.26 L0.12,-2.61 1.96,1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.28,65.68)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,0.16 L2.26,-2.06 0.46,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.75,65.14)\">\n",
       "    <path fill=\"none\" d=\"M-0.53,1.9 L-2.18,-2.1 2.72,0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.24,64.78)\">\n",
       "    <path fill=\"none\" d=\"M0.4,1.91 L-3.06,-1.46 2.66,-0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.47,66.28)\">\n",
       "    <path fill=\"none\" d=\"M-1.3,1.7 L-1.21,-2.47 2.51,0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.16,62.92)\">\n",
       "    <path fill=\"none\" d=\"M1.67,1.53 L-3.68,-0.22 2.01,-1.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.96,65.73)\">\n",
       "    <path fill=\"none\" d=\"M-0.51,1.9 L-2.2,-2.09 2.72,0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.86,63.91)\">\n",
       "    <path fill=\"none\" d=\"M1.06,1.78 L-3.48,-0.88 2.42,-0.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-50ae6412-3\">\n",
       "  <g transform=\"translate(81.69,56.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.59,53.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.6,40.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.05,55.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.4,56.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,58.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78,53.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.44,52.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.01,42.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.59,40.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.48,46.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.18,49.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.52,49.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84,47.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.63,52.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.91,44.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.65,46.66)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.03,62.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.07,43.98)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.84,78.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.86,72.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.21,68.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.02,78.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.67,68.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.73,73.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.99,79.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.88,68.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.77,68.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.58,68.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.38,73.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.93,76.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.05,76.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.53,73.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.73,74.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.8,75.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.38,84.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.14,64.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.79,80.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.21,70.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.67,60.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.04,60.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.08,41.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.3,59.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.71,40.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.31,55.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.71,36.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.79,60.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.2,41.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.91,60.66)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.27,60.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.31,42.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.82,61.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.19,60.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.23,42.47)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.44,59.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.81,59.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.85,40.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.59,59.37)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.96,58.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70,40.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.84,57.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.88,39.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.29,56.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.33,38.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.66,56.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.7,38.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.42,57.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.46,39.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.59,54.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.63,36.27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.75,59.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.79,40.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.47,58.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.51,40.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.48,59.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.52,41.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.1,54.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.14,36.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.24,55.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.28,37.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.24,57.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.28,39.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.65,55.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.69,37)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.3,56.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.34,38.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.22,30.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.51,30.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.04,30.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.7,31.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.78,31.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.35,30.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.11,56.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.52,37.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.97,55.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.38,36.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.93,57.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.34,38.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.17,58.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.58,39.66)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.28,58.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.69,39.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.44,57.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.85,38.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.32,59.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.73,40.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.75,56.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,37.89)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.32,57.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.73,38.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.12,62.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.15,56.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.85,56.63)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.61,57.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.45,53.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.9,52.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.55,47.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.91,45.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.01,44.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.3,49.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.81,39.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.27,53.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.44,52.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.48,55.47)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.33,39.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.75,43.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.74,49.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.97,41.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.94,45.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.52,43.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.3,78.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.31,72.79)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.67,68.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.48,78.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.45,78.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.72,74.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.47,70)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.56,83.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.21,65.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.55,57.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.13,67.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.19,72.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.44,79.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.34,68.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.23,68.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.03,68.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.84,72.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.39,76.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.5,76.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.99,73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.19,74.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.46,56.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.5,49.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.39,47.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.4,34.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.85,49.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.2,50.58)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.95,51.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.8,46.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.25,46.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.9,41.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.26,39.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.36,38.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.65,43.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.15,33.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.62,47.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.78,46.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.83,49.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.68,33.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.09,37.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.09,43.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.32,35.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.29,39.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.9,15.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.79,16.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.37,16.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.37,18.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.58,19.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.31,16.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.81,36.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.39,34.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.29,39.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.98,43.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.33,43.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.81,41.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.44,46.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.72,38.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.45,40.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.83,55.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.06,67.79)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.42,67.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.39,66.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.76,65.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.18,64.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.54,64.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.78,67.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.15,67.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.47,67.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.9,66.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.81,64.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.18,69.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.06,63.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.17,60.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.33,64.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.7,63.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.35,66.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.72,65.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.44,68.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.8,67.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.73,64.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.1,64.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.7,64.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.06,64.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.63,64.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63,64.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.9,66.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.27,65.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.75,67.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.12,66.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.12,67.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.49,66.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.95,66.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.32,65.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.35,66.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.72,66.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.37,66.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.23,69.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.15,63.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.04,68.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.51,65.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-50ae6412-4\">\n",
       "  <g transform=\"translate(87.66,62.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.71,54.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.23,50.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.24,33.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.18,53.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.64,54.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.31,56.58)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.78,50.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.37,49.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.9,42.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.72,40)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.19,38.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.24,45.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.91,31.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.54,50.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.42,49.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.48,53.29)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.95,32.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.5,36.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.49,45.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.13,34.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.76,39.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.25,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.44,10)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.54,9.35)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.2,11.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.49,12.92)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.79,8.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,36.37)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.89,32.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.76,40.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.69,45.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.14,45.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,42.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.29,49.18)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92,38.25)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.31,41.35)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.48,62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.87,37.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.24,83.35)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.59,76.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.73,70.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.14,83.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(25.44,84.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.13,78.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.79,72.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.25,91.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,66.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.24,55.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.34,69.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.42,76.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.76,85.21)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.96,71.02)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.81,70.2)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.55,70.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.63,76.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.03,81.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.51,81.36)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.82,76.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.42,78.32)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.51,79.21)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.95,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,65.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.17,86.82)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.06,72.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-50ae6412-5\">\n",
       "  <g transform=\"translate(87.66,62.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.71,54.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.23,50.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.24,33.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.18,53.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.64,54.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.31,56.58)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.78,50.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.37,49.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.9,42.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.72,40)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.19,38.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.24,45.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.91,31.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.54,50.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.42,49.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.48,53.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.95,32.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.5,36.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.49,45.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.13,34.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.76,39.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.25,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.44,10)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.54,9.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.2,11.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.49,12.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.79,8.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,36.37)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.89,32.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.76,40.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.69,45.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.14,45.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,42.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.29,49.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92,38.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.31,41.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.48,62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.87,37.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.24,83.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.59,76.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.73,70.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.14,83.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(25.44,84.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.13,78.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.79,72.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.25,91.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,66.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.24,55.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.34,69.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.42,76.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.76,85.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.96,71.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.81,70.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.55,70.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.63,76.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.03,81.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.51,81.36)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.82,76.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.42,78.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.51,79.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.95,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,65.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.17,86.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.06,72.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-3a04f4b0\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-3a04f4b0-1\">\n",
       "  <g transform=\"translate(83.68,58.32)\">\n",
       "    <path fill=\"none\" d=\"M2.97,3.2 L-2.97,-3.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.95,56.37)\">\n",
       "    <path fill=\"none\" d=\"M-4.35,5.12 L4.35,-5.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.95,48.02)\">\n",
       "    <path fill=\"none\" d=\"M-4.84,13.32 L4.84,-13.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.92,58.1)\">\n",
       "    <path fill=\"none\" d=\"M-6.81,3.71 L6.81,-3.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,58.72)\">\n",
       "    <path fill=\"none\" d=\"M9.86,3.32 L-9.86,-3.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.99,59.59)\">\n",
       "    <path fill=\"none\" d=\"M6.08,2.38 L-6.08,-2.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.22,56.32)\">\n",
       "    <path fill=\"none\" d=\"M5.37,5.23 L-5.37,-5.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.52,56.14)\">\n",
       "    <path fill=\"none\" d=\"M8.79,5.59 L-8.79,-5.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.56,49.48)\">\n",
       "    <path fill=\"none\" d=\"M-8.11,11.95 L8.11,-11.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.28,47.75)\">\n",
       "    <path fill=\"none\" d=\"M-0.56,13.55 L0.56,-13.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.21,51.54)\">\n",
       "    <path fill=\"none\" d=\"M-5.84,9.87 L5.84,-9.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.67,53.96)\">\n",
       "    <path fill=\"none\" d=\"M-7.93,7.59 L7.93,-7.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.9,53.82)\">\n",
       "    <path fill=\"none\" d=\"M-2.78,7.53 L2.78,-7.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.22,52.36)\">\n",
       "    <path fill=\"none\" d=\"M2.14,8.96 L-2.14,-8.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,55.89)\">\n",
       "    <path fill=\"none\" d=\"M-9.92,5.88 L9.92,-5.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.83,50.42)\">\n",
       "    <path fill=\"none\" d=\"M-1.94,10.89 L1.94,-10.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,51.97)\">\n",
       "    <path fill=\"none\" d=\"M-10.22,9.59 L10.22,-9.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.57,62.3)\">\n",
       "    <path fill=\"none\" d=\"M15.26,0.27 L-15.26,-0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.27,50.18)\">\n",
       "    <path fill=\"none\" d=\"M7.61,11.25 L-7.61,-11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.45,72.97)\">\n",
       "    <path fill=\"none\" d=\"M4.6,-9.16 L-4.6,9.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.12,69.49)\">\n",
       "    <path fill=\"none\" d=\"M11.09,-6.1 L-11.09,6.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.69,66.47)\">\n",
       "    <path fill=\"none\" d=\"M2.1,-2.73 L-2.1,2.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.9,73.06)\">\n",
       "    <path fill=\"none\" d=\"M10.62,-9.45 L-10.62,9.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75,66.21)\">\n",
       "    <path fill=\"none\" d=\"M10.97,-3.13 L-10.97,3.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.04,69.54)\">\n",
       "    <path fill=\"none\" d=\"M3.84,-5.77 L-3.84,5.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.21,73.91)\">\n",
       "    <path fill=\"none\" d=\"M7.6,-10.17 L-7.6,10.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.81,66.81)\">\n",
       "    <path fill=\"none\" d=\"M16.12,-3.8 L-16.12,3.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.73,66.4)\">\n",
       "    <path fill=\"none\" d=\"M6.41,-3.08 L-6.41,3.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.6,66.76)\">\n",
       "    <path fill=\"none\" d=\"M-1.37,-2.94 L1.37,2.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.14,69.6)\">\n",
       "    <path fill=\"none\" d=\"M-0.39,-5.71 L0.39,5.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.84,71.96)\">\n",
       "    <path fill=\"none\" d=\"M1.57,-8.09 L-1.57,8.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.59,71.98)\">\n",
       "    <path fill=\"none\" d=\"M13.7,-8.53 L-13.7,8.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.24,69.63)\">\n",
       "    <path fill=\"none\" d=\"M15.83,-6.4 L-15.83,6.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.04,70.46)\">\n",
       "    <path fill=\"none\" d=\"M7.5,-6.84 L-7.5,6.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.08,70.9)\">\n",
       "    <path fill=\"none\" d=\"M-15.91,-7.58 L15.91,7.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.81,77.13)\">\n",
       "    <path fill=\"none\" d=\"M-6.55,-13.31 L6.55,13.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.65,63.84)\">\n",
       "    <path fill=\"none\" d=\"M-19.17,-1.13 L19.17,1.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.42,74.71)\">\n",
       "    <path fill=\"none\" d=\"M-11.66,-11.07 L11.66,11.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.36,67.57)\">\n",
       "    <path fill=\"none\" d=\"M-17.98,-4.54 L17.98,4.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.68,58.32)\">\n",
       "    <path fill=\"none\" d=\"M-2.97,-3.2 L2.97,3.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.59,58.02)\">\n",
       "    <path fill=\"none\" d=\"M11.43,-3.47 L-11.43,3.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.29,45.91)\">\n",
       "    <path fill=\"none\" d=\"M3.76,6.93 L-3.76,-6.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.95,56.37)\">\n",
       "    <path fill=\"none\" d=\"M4.35,-5.12 L-4.35,5.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.55,43.95)\">\n",
       "    <path fill=\"none\" d=\"M12.14,5.49 L-12.14,-5.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.95,48.02)\">\n",
       "    <path fill=\"none\" d=\"M4.84,-13.32 L-4.84,13.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.56,35.61)\">\n",
       "    <path fill=\"none\" d=\"M11.9,-1.88 L-11.9,1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.92,58.1)\">\n",
       "    <path fill=\"none\" d=\"M6.81,-3.71 L-6.81,3.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,45.69)\">\n",
       "    <path fill=\"none\" d=\"M15.14,7.19 L-15.14,-7.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,58.72)\">\n",
       "    <path fill=\"none\" d=\"M-9.86,-3.32 L9.86,3.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.06,58.42)\">\n",
       "    <path fill=\"none\" d=\"M4.23,-2.71 L-4.23,2.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.76,46.31)\">\n",
       "    <path fill=\"none\" d=\"M-2.66,7.29 L2.66,-7.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.99,59.59)\">\n",
       "    <path fill=\"none\" d=\"M-6.08,-2.38 L6.08,2.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.9,59.29)\">\n",
       "    <path fill=\"none\" d=\"M7.72,-2.22 L-7.72,2.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.59,47.18)\">\n",
       "    <path fill=\"none\" d=\"M0.62,8.12 L-0.62,-8.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.22,56.32)\">\n",
       "    <path fill=\"none\" d=\"M-5.37,-5.23 L5.37,5.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.13,56.02)\">\n",
       "    <path fill=\"none\" d=\"M9.22,-5.17 L-9.22,5.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.82,43.91)\">\n",
       "    <path fill=\"none\" d=\"M1.55,4.88 L-1.55,-4.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.52,56.14)\">\n",
       "    <path fill=\"none\" d=\"M-8.79,-5.59 L8.79,5.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.43,55.84)\">\n",
       "    <path fill=\"none\" d=\"M5.8,-5.15 L-5.8,5.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.12,43.73)\">\n",
       "    <path fill=\"none\" d=\"M-1.38,4.69 L1.38,-4.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.19,52.38)\">\n",
       "    <path fill=\"none\" d=\"M-1.12,-8.33 L1.12,8.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.89,40.26)\">\n",
       "    <path fill=\"none\" d=\"M-8.26,2.06 L8.26,-2.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.1,51)\">\n",
       "    <path fill=\"none\" d=\"M-5.69,-9.81 L5.69,9.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.79,38.88)\">\n",
       "    <path fill=\"none\" d=\"M-13.26,0.98 L13.26,-0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.83,50.4)\">\n",
       "    <path fill=\"none\" d=\"M2.09,-10.32 L-2.09,10.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.53,38.29)\">\n",
       "    <path fill=\"none\" d=\"M-4.53,0.37 L4.53,-0.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.36,53.85)\">\n",
       "    <path fill=\"none\" d=\"M-5.27,-7 L5.27,7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.05,41.74)\">\n",
       "    <path fill=\"none\" d=\"M-13.11,3.51 L13.11,-3.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.7,46.88)\">\n",
       "    <path fill=\"none\" d=\"M-3.47,-13.85 L3.47,13.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.39,34.77)\">\n",
       "    <path fill=\"none\" d=\"M-10.75,-2.59 L10.75,2.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.01,56.26)\">\n",
       "    <path fill=\"none\" d=\"M-8.09,-4.9 L8.09,4.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.7,44.14)\">\n",
       "    <path fill=\"none\" d=\"M-16.53,5.8 L16.53,-5.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.45,55.54)\">\n",
       "    <path fill=\"none\" d=\"M-1.63,-5.2 L1.63,5.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.15,43.42)\">\n",
       "    <path fill=\"none\" d=\"M-9.26,4.88 L9.26,-4.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.48,57.64)\">\n",
       "    <path fill=\"none\" d=\"M-4.72,-3.43 L4.72,3.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.18,45.53)\">\n",
       "    <path fill=\"none\" d=\"M-13.23,6.99 L13.23,-6.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.71,47.22)\">\n",
       "    <path fill=\"none\" d=\"M1.12,-13.48 L-1.12,13.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.41,35.11)\">\n",
       "    <path fill=\"none\" d=\"M-5.83,-2.08 L5.83,2.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.99,49.42)\">\n",
       "    <path fill=\"none\" d=\"M-2.24,-11.3 L2.24,11.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.69,37.31)\">\n",
       "    <path fill=\"none\" d=\"M-9.36,-0.39 L9.36,0.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.99,53.52)\">\n",
       "    <path fill=\"none\" d=\"M-9.29,-7.51 L9.29,7.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.68,41.41)\">\n",
       "    <path fill=\"none\" d=\"M-17.42,3.3 L17.42,-3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.81,48.34)\">\n",
       "    <path fill=\"none\" d=\"M-7,-12.46 L7,12.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.5,36.22)\">\n",
       "    <path fill=\"none\" d=\"M-14.56,-1.38 L14.56,1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.12,50.83)\">\n",
       "    <path fill=\"none\" d=\"M-9.36,-10.09 L9.36,10.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.82,38.71)\">\n",
       "    <path fill=\"none\" d=\"M-17.23,0.85 L17.23,-0.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.56,23.05)\">\n",
       "    <path fill=\"none\" d=\"M-1.2,-13.43 L1.2,13.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.15,23.89)\">\n",
       "    <path fill=\"none\" d=\"M6.65,-12.67 L-6.65,12.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.21,23.56)\">\n",
       "    <path fill=\"none\" d=\"M-5.17,-12.97 L5.17,12.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.53,24.76)\">\n",
       "    <path fill=\"none\" d=\"M-9.44,-11.89 L9.44,11.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.68,25.35)\">\n",
       "    <path fill=\"none\" d=\"M10.79,-11.35 L-10.79,11.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,23.26)\">\n",
       "    <path fill=\"none\" d=\"M2.7,-13.23 L-2.7,13.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.56,49.48)\">\n",
       "    <path fill=\"none\" d=\"M8.11,-11.95 L-8.11,11.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.17,37.07)\">\n",
       "    <path fill=\"none\" d=\"M15.47,-0.63 L-15.47,0.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.28,47.75)\">\n",
       "    <path fill=\"none\" d=\"M0.56,-13.55 L-0.56,13.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.88,35.34)\">\n",
       "    <path fill=\"none\" d=\"M7.3,-1.97 L-7.3,1.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.21,51.54)\">\n",
       "    <path fill=\"none\" d=\"M5.84,-9.87 L-5.84,9.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.81,39.13)\">\n",
       "    <path fill=\"none\" d=\"M13.13,1.19 L-13.13,-1.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.67,53.96)\">\n",
       "    <path fill=\"none\" d=\"M7.93,-7.59 L-7.93,7.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.28,41.55)\">\n",
       "    <path fill=\"none\" d=\"M15.66,3.4 L-15.66,-3.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.9,53.82)\">\n",
       "    <path fill=\"none\" d=\"M2.78,-7.53 L-2.78,7.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.51,41.41)\">\n",
       "    <path fill=\"none\" d=\"M9.97,3.11 L-9.97,-3.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.22,52.36)\">\n",
       "    <path fill=\"none\" d=\"M-2.14,-8.96 L2.14,8.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.83,39.95)\">\n",
       "    <path fill=\"none\" d=\"M4.33,1.58 L-4.33,-1.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,55.89)\">\n",
       "    <path fill=\"none\" d=\"M9.92,-5.88 L-9.92,5.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.58,43.47)\">\n",
       "    <path fill=\"none\" d=\"M18.02,5.21 L-18.02,-5.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.83,50.42)\">\n",
       "    <path fill=\"none\" d=\"M1.94,-10.89 L-1.94,10.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.43,38.01)\">\n",
       "    <path fill=\"none\" d=\"M8.74,0.2 L-8.74,-0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,51.97)\">\n",
       "    <path fill=\"none\" d=\"M10.22,-9.59 L-10.22,9.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.59,39.56)\">\n",
       "    <path fill=\"none\" d=\"M17.91,1.62 L-17.91,-1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.57,62.3)\">\n",
       "    <path fill=\"none\" d=\"M-15.26,-0.27 L15.26,0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.59,58.02)\">\n",
       "    <path fill=\"none\" d=\"M-11.43,3.47 L11.43,-3.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.06,58.42)\">\n",
       "    <path fill=\"none\" d=\"M-4.23,2.71 L4.23,-2.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.9,59.29)\">\n",
       "    <path fill=\"none\" d=\"M-7.72,2.22 L7.72,-2.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.13,56.02)\">\n",
       "    <path fill=\"none\" d=\"M-9.22,5.17 L9.22,-5.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.43,55.84)\">\n",
       "    <path fill=\"none\" d=\"M-5.8,5.15 L5.8,-5.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.19,52.38)\">\n",
       "    <path fill=\"none\" d=\"M1.12,8.33 L-1.12,-8.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.1,51)\">\n",
       "    <path fill=\"none\" d=\"M5.69,9.81 L-5.69,-9.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.83,50.4)\">\n",
       "    <path fill=\"none\" d=\"M-2.09,10.32 L2.09,-10.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.36,53.85)\">\n",
       "    <path fill=\"none\" d=\"M5.27,7 L-5.27,-7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.7,46.88)\">\n",
       "    <path fill=\"none\" d=\"M3.47,13.85 L-3.47,-13.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.01,56.26)\">\n",
       "    <path fill=\"none\" d=\"M8.09,4.9 L-8.09,-4.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.45,55.54)\">\n",
       "    <path fill=\"none\" d=\"M1.63,5.2 L-1.63,-5.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.48,57.64)\">\n",
       "    <path fill=\"none\" d=\"M4.72,3.43 L-4.72,-3.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.71,47.22)\">\n",
       "    <path fill=\"none\" d=\"M-1.12,13.48 L1.12,-13.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.99,49.42)\">\n",
       "    <path fill=\"none\" d=\"M2.24,11.3 L-2.24,-11.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.99,53.52)\">\n",
       "    <path fill=\"none\" d=\"M9.29,7.51 L-9.29,-7.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.81,48.34)\">\n",
       "    <path fill=\"none\" d=\"M7,12.46 L-7,-12.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.12,50.83)\">\n",
       "    <path fill=\"none\" d=\"M9.36,10.09 L-9.36,-10.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.18,49.88)\">\n",
       "    <path fill=\"none\" d=\"M-7.87,10.96 L7.87,-10.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.36,72.67)\">\n",
       "    <path fill=\"none\" d=\"M-10.75,-9.66 L10.75,9.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.04,69.19)\">\n",
       "    <path fill=\"none\" d=\"M-3.81,-6.01 L3.81,6.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.61,66.17)\">\n",
       "    <path fill=\"none\" d=\"M-12.44,-3.67 L12.44,3.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.81,72.76)\">\n",
       "    <path fill=\"none\" d=\"M-4.73,-9.54 L4.73,9.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.46,73.03)\">\n",
       "    <path fill=\"none\" d=\"M12.8,-10.07 L-12.8,10.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.31,70.27)\">\n",
       "    <path fill=\"none\" d=\"M15.67,-7.55 L-15.67,7.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.14,67.33)\">\n",
       "    <path fill=\"none\" d=\"M17.64,-4.87 L-17.64,4.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.87,76.64)\">\n",
       "    <path fill=\"none\" d=\"M6.06,-13.41 L-6.06,13.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.63,64.05)\">\n",
       "    <path fill=\"none\" d=\"M19.04,-1.87 L-19.04,1.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.86,58.69)\">\n",
       "    <path fill=\"none\" d=\"M18.84,3.02 L-18.84,-3.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.91,65.92)\">\n",
       "    <path fill=\"none\" d=\"M-3.29,-2.91 L3.29,2.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.95,69.24)\">\n",
       "    <path fill=\"none\" d=\"M-11.06,-6.42 L11.06,6.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.12,73.61)\">\n",
       "    <path fill=\"none\" d=\"M-7.79,-10.46 L7.79,10.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.72,66.51)\">\n",
       "    <path fill=\"none\" d=\"M0.55,-3.23 L-0.55,3.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.65,66.1)\">\n",
       "    <path fill=\"none\" d=\"M-7.62,-3.41 L7.62,3.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.52,66.46)\">\n",
       "    <path fill=\"none\" d=\"M-17.3,-4.06 L17.3,4.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.05,69.3)\">\n",
       "    <path fill=\"none\" d=\"M-16,-6.65 L16,6.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.75,71.66)\">\n",
       "    <path fill=\"none\" d=\"M-13.91,-8.81 L13.91,8.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.5,71.68)\">\n",
       "    <path fill=\"none\" d=\"M-1.75,-8.4 L1.75,8.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.15,69.33)\">\n",
       "    <path fill=\"none\" d=\"M0.27,-6.04 L-0.27,6.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.95,70.16)\">\n",
       "    <path fill=\"none\" d=\"M-7.39,-7.12 L7.39,7.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.27,50.18)\">\n",
       "    <path fill=\"none\" d=\"M-7.61,-11.25 L7.61,11.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.29,45.91)\">\n",
       "    <path fill=\"none\" d=\"M-3.76,-6.93 L3.76,6.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.55,43.95)\">\n",
       "    <path fill=\"none\" d=\"M-12.14,-5.49 L12.14,5.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.56,35.61)\">\n",
       "    <path fill=\"none\" d=\"M-11.9,1.88 L11.9,-1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.53,45.69)\">\n",
       "    <path fill=\"none\" d=\"M-15.14,-7.19 L15.14,7.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.76,46.31)\">\n",
       "    <path fill=\"none\" d=\"M2.66,-7.29 L-2.66,7.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.59,47.18)\">\n",
       "    <path fill=\"none\" d=\"M-0.62,-8.12 L0.62,8.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.82,43.91)\">\n",
       "    <path fill=\"none\" d=\"M-1.55,-4.88 L1.55,4.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.12,43.73)\">\n",
       "    <path fill=\"none\" d=\"M1.38,-4.69 L-1.38,4.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.89,40.26)\">\n",
       "    <path fill=\"none\" d=\"M8.26,-2.06 L-8.26,2.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.79,38.88)\">\n",
       "    <path fill=\"none\" d=\"M13.26,-0.98 L-13.26,0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.53,38.29)\">\n",
       "    <path fill=\"none\" d=\"M4.53,-0.37 L-4.53,0.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.05,41.74)\">\n",
       "    <path fill=\"none\" d=\"M13.11,-3.51 L-13.11,3.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.39,34.77)\">\n",
       "    <path fill=\"none\" d=\"M10.75,2.59 L-10.75,-2.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.7,44.14)\">\n",
       "    <path fill=\"none\" d=\"M16.53,-5.8 L-16.53,5.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.15,43.42)\">\n",
       "    <path fill=\"none\" d=\"M9.26,-4.88 L-9.26,4.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.18,45.53)\">\n",
       "    <path fill=\"none\" d=\"M13.23,-6.99 L-13.23,6.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.41,35.11)\">\n",
       "    <path fill=\"none\" d=\"M5.83,2.08 L-5.83,-2.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.69,37.31)\">\n",
       "    <path fill=\"none\" d=\"M9.36,0.39 L-9.36,-0.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.68,41.41)\">\n",
       "    <path fill=\"none\" d=\"M17.42,-3.3 L-17.42,3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.5,36.22)\">\n",
       "    <path fill=\"none\" d=\"M14.56,1.38 L-14.56,-1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.82,38.71)\">\n",
       "    <path fill=\"none\" d=\"M17.23,-0.85 L-17.23,0.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.56,23.05)\">\n",
       "    <path fill=\"none\" d=\"M1.2,13.43 L-1.2,-13.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.15,23.89)\">\n",
       "    <path fill=\"none\" d=\"M-6.65,12.67 L6.65,-12.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.21,23.56)\">\n",
       "    <path fill=\"none\" d=\"M5.17,12.97 L-5.17,-12.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.53,24.76)\">\n",
       "    <path fill=\"none\" d=\"M9.44,11.89 L-9.44,-11.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.68,25.35)\">\n",
       "    <path fill=\"none\" d=\"M-10.79,11.35 L10.79,-11.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,23.26)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,13.23 L2.7,-13.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.17,37.07)\">\n",
       "    <path fill=\"none\" d=\"M-15.47,0.63 L15.47,-0.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.88,35.34)\">\n",
       "    <path fill=\"none\" d=\"M-7.3,1.97 L7.3,-1.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.81,39.13)\">\n",
       "    <path fill=\"none\" d=\"M-13.13,-1.19 L13.13,1.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.28,41.55)\">\n",
       "    <path fill=\"none\" d=\"M-15.66,-3.4 L15.66,3.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.51,41.41)\">\n",
       "    <path fill=\"none\" d=\"M-9.97,-3.11 L9.97,3.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.83,39.95)\">\n",
       "    <path fill=\"none\" d=\"M-4.33,-1.58 L4.33,1.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.58,43.47)\">\n",
       "    <path fill=\"none\" d=\"M-18.02,-5.21 L18.02,5.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.43,38.01)\">\n",
       "    <path fill=\"none\" d=\"M-8.74,-0.2 L8.74,0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.59,39.56)\">\n",
       "    <path fill=\"none\" d=\"M-17.91,-1.62 L17.91,1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.18,49.88)\">\n",
       "    <path fill=\"none\" d=\"M7.87,-10.96 L-7.87,10.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.45,72.97)\">\n",
       "    <path fill=\"none\" d=\"M-4.6,9.16 L4.6,-9.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.36,72.67)\">\n",
       "    <path fill=\"none\" d=\"M10.75,9.66 L-10.75,-9.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.12,69.49)\">\n",
       "    <path fill=\"none\" d=\"M-11.09,6.1 L11.09,-6.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.04,69.19)\">\n",
       "    <path fill=\"none\" d=\"M3.81,6.01 L-3.81,-6.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.69,66.47)\">\n",
       "    <path fill=\"none\" d=\"M-2.1,2.73 L2.1,-2.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.61,66.17)\">\n",
       "    <path fill=\"none\" d=\"M12.44,3.67 L-12.44,-3.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.9,73.06)\">\n",
       "    <path fill=\"none\" d=\"M-10.62,9.45 L10.62,-9.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.81,72.76)\">\n",
       "    <path fill=\"none\" d=\"M4.73,9.54 L-4.73,-9.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.46,73.03)\">\n",
       "    <path fill=\"none\" d=\"M-12.8,10.07 L12.8,-10.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.31,70.27)\">\n",
       "    <path fill=\"none\" d=\"M-15.67,7.55 L15.67,-7.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.14,67.33)\">\n",
       "    <path fill=\"none\" d=\"M-17.64,4.87 L17.64,-4.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.87,76.64)\">\n",
       "    <path fill=\"none\" d=\"M-6.06,13.41 L6.06,-13.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.63,64.05)\">\n",
       "    <path fill=\"none\" d=\"M-19.04,1.87 L19.04,-1.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.86,58.69)\">\n",
       "    <path fill=\"none\" d=\"M-18.84,-3.02 L18.84,3.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75,66.21)\">\n",
       "    <path fill=\"none\" d=\"M-10.97,3.13 L10.97,-3.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.91,65.92)\">\n",
       "    <path fill=\"none\" d=\"M3.29,2.91 L-3.29,-2.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.04,69.54)\">\n",
       "    <path fill=\"none\" d=\"M-3.84,5.77 L3.84,-5.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.95,69.24)\">\n",
       "    <path fill=\"none\" d=\"M11.06,6.42 L-11.06,-6.42 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.21,73.91)\">\n",
       "    <path fill=\"none\" d=\"M-7.6,10.17 L7.6,-10.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.12,73.61)\">\n",
       "    <path fill=\"none\" d=\"M7.79,10.46 L-7.79,-10.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.81,66.81)\">\n",
       "    <path fill=\"none\" d=\"M-16.12,3.8 L16.12,-3.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.72,66.51)\">\n",
       "    <path fill=\"none\" d=\"M-0.55,3.23 L0.55,-3.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.73,66.4)\">\n",
       "    <path fill=\"none\" d=\"M-6.41,3.08 L6.41,-3.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.65,66.1)\">\n",
       "    <path fill=\"none\" d=\"M7.62,3.41 L-7.62,-3.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.6,66.76)\">\n",
       "    <path fill=\"none\" d=\"M1.37,2.94 L-1.37,-2.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.52,66.46)\">\n",
       "    <path fill=\"none\" d=\"M17.3,4.06 L-17.3,-4.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.14,69.6)\">\n",
       "    <path fill=\"none\" d=\"M0.39,5.71 L-0.39,-5.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.05,69.3)\">\n",
       "    <path fill=\"none\" d=\"M16,6.65 L-16,-6.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.84,71.96)\">\n",
       "    <path fill=\"none\" d=\"M-1.57,8.09 L1.57,-8.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.75,71.66)\">\n",
       "    <path fill=\"none\" d=\"M13.91,8.81 L-13.91,-8.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.59,71.98)\">\n",
       "    <path fill=\"none\" d=\"M-13.7,8.53 L13.7,-8.53 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.5,71.68)\">\n",
       "    <path fill=\"none\" d=\"M1.75,8.4 L-1.75,-8.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.24,69.63)\">\n",
       "    <path fill=\"none\" d=\"M-15.83,6.4 L15.83,-6.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.15,69.33)\">\n",
       "    <path fill=\"none\" d=\"M-0.27,6.04 L0.27,-6.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.04,70.46)\">\n",
       "    <path fill=\"none\" d=\"M-7.5,6.84 L7.5,-6.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.95,70.16)\">\n",
       "    <path fill=\"none\" d=\"M7.39,7.12 L-7.39,-7.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.08,70.9)\">\n",
       "    <path fill=\"none\" d=\"M15.91,7.58 L-15.91,-7.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.81,77.13)\">\n",
       "    <path fill=\"none\" d=\"M6.55,13.31 L-6.55,-13.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.65,63.84)\">\n",
       "    <path fill=\"none\" d=\"M19.17,1.13 L-19.17,-1.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.42,74.71)\">\n",
       "    <path fill=\"none\" d=\"M11.66,11.07 L-11.66,-11.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.36,67.57)\">\n",
       "    <path fill=\"none\" d=\"M17.98,4.54 L-17.98,-4.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-3a04f4b0-2\">\n",
       "  <g transform=\"translate(82.74,57.3)\">\n",
       "    <path fill=\"none\" d=\"M-0.67,1.87 L-2.03,-2.18 2.7,0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.39,53.48)\">\n",
       "    <path fill=\"none\" d=\"M-2.68,0.39 L1.9,-2.24 0.78,1.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.87,37.23)\">\n",
       "    <path fill=\"none\" d=\"M-2.41,0.91 L0.92,-2.53 1.49,1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.81,55.98)\">\n",
       "    <path fill=\"none\" d=\"M-2.69,-0.33 L2.92,-1.59 -0.23,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.63,56.52)\">\n",
       "    <path fill=\"none\" d=\"M0.8,1.85 L-3.33,-1.12 2.53,-0.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.14,58.47)\">\n",
       "    <path fill=\"none\" d=\"M0.64,1.88 L-3.23,-1.27 2.59,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.02,53.2)\">\n",
       "    <path fill=\"none\" d=\"M-0.55,1.89 L-2.17,-2.11 2.72,0.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.47,52.29)\">\n",
       "    <path fill=\"none\" d=\"M0.02,1.93 L-2.74,-1.75 2.72,-0.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.07,39.89)\">\n",
       "    <path fill=\"none\" d=\"M-2.62,0.56 L1.6,-2.35 1.02,1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.73,36.8)\">\n",
       "    <path fill=\"none\" d=\"M-2.07,1.26 L0.11,-2.61 1.96,1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.63,44.08)\">\n",
       "    <path fill=\"none\" d=\"M-2.57,0.65 L1.43,-2.41 1.15,1.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.41,48.47)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,0.2 L2.19,-2.1 0.53,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.75,48.82)\">\n",
       "    <path fill=\"none\" d=\"M-2.42,0.9 L0.93,-2.53 1.48,1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.7,45.97)\">\n",
       "    <path fill=\"none\" d=\"M-1.68,1.52 L-0.61,-2.57 2.29,1.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.06,51.68)\">\n",
       "    <path fill=\"none\" d=\"M-2.71,-0.25 L2.83,-1.68 -0.12,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.31,42.12)\">\n",
       "    <path fill=\"none\" d=\"M-2.23,1.12 L0.46,-2.59 1.77,1.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.99,44.46)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,0.18 L2.22,-2.08 0.5,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59,62.09)\">\n",
       "    <path fill=\"none\" d=\"M1.8,1.46 L-3.69,-0.06 1.9,-1.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.25,41.29)\">\n",
       "    <path fill=\"none\" d=\"M-1.02,1.79 L-1.59,-2.35 2.61,0.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.09,79.67)\">\n",
       "    <path fill=\"none\" d=\"M2.52,-0.75 L-1.24,2.46 -1.28,-1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.94,73.99)\">\n",
       "    <path fill=\"none\" d=\"M2.69,0.32 L-2.91,1.6 0.22,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.36,66.9)\">\n",
       "    <path fill=\"none\" d=\"M2.65,-0.47 L-1.76,2.29 -0.89,-1.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.58,80.46)\">\n",
       "    <path fill=\"none\" d=\"M2.73,-0.13 L-2.3,2.04 -0.43,-1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.46,68.37)\">\n",
       "    <path fill=\"none\" d=\"M2.47,0.83 L-3.42,0.98 0.96,-1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.77,72.95)\">\n",
       "    <path fill=\"none\" d=\"M2.61,-0.57 L-1.57,2.36 -1.04,-1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.34,81.76)\">\n",
       "    <path fill=\"none\" d=\"M2.64,-0.49 L-1.72,2.31 -0.92,-1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.19,69.79)\">\n",
       "    <path fill=\"none\" d=\"M2.39,0.94 L-3.5,0.83 1.11,-1.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.37,68.01)\">\n",
       "    <path fill=\"none\" d=\"M2.66,0.45 L-3.06,1.46 0.4,-1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.82,67.22)\">\n",
       "    <path fill=\"none\" d=\"M1.34,-1.69 L1.16,2.48 -2.49,-0.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.36,72.7)\">\n",
       "    <path fill=\"none\" d=\"M1.92,-1.37 L0.18,2.61 -2.1,-1.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.78,77.47)\">\n",
       "    <path fill=\"none\" d=\"M2.25,-1.1 L-0.5,2.59 -1.75,-1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.65,78.78)\">\n",
       "    <path fill=\"none\" d=\"M2.72,0.21 L-2.77,1.72 0.05,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.61,74.73)\">\n",
       "    <path fill=\"none\" d=\"M2.6,0.59 L-3.21,1.29 0.6,-1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.81,75.23)\">\n",
       "    <path fill=\"none\" d=\"M2.72,-0.16 L-2.26,2.06 -0.46,-1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.93,77.03)\">\n",
       "    <path fill=\"none\" d=\"M-0.4,-1.91 L3.06,1.46 -2.66,0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.14,87.98)\">\n",
       "    <path fill=\"none\" d=\"M1.3,-1.7 L1.21,2.47 -2.51,-0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.14,64.75)\">\n",
       "    <path fill=\"none\" d=\"M-1.67,-1.53 L3.68,0.22 -2.01,1.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.87,83.69)\">\n",
       "    <path fill=\"none\" d=\"M0.51,-1.9 L2.2,2.09 -2.72,-0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(121.86,71.23)\">\n",
       "    <path fill=\"none\" d=\"M-1.06,-1.78 L3.48,0.88 -2.42,0.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.63,59.34)\">\n",
       "    <path fill=\"none\" d=\"M0.67,-1.87 L2.03,2.18 -2.7,-0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.56,60.46)\">\n",
       "    <path fill=\"none\" d=\"M2.49,0.8 L-3.39,1.03 0.9,-1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.85,41.41)\">\n",
       "    <path fill=\"none\" d=\"M-1.22,1.73 L-1.32,-2.44 2.54,0.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.5,59.25)\">\n",
       "    <path fill=\"none\" d=\"M2.68,-0.39 L-1.9,2.24 -0.78,-1.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.52,39.87)\">\n",
       "    <path fill=\"none\" d=\"M0.47,1.9 L-3.11,-1.41 2.64,-0.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.03,58.82)\">\n",
       "    <path fill=\"none\" d=\"M2.41,-0.91 L-0.92,2.53 -1.49,-1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.26,36.92)\">\n",
       "    <path fill=\"none\" d=\"M2.24,1.11 L-3.6,0.57 1.36,-1.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.03,60.22)\">\n",
       "    <path fill=\"none\" d=\"M2.69,0.33 L-2.92,1.59 0.23,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.45,39.95)\">\n",
       "    <path fill=\"none\" d=\"M0.41,1.91 L-3.06,-1.46 2.66,-0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.68,60.92)\">\n",
       "    <path fill=\"none\" d=\"M-0.8,-1.85 L3.33,1.12 -2.53,0.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.57,59.38)\">\n",
       "    <path fill=\"none\" d=\"M2.72,0.18 L-2.74,1.75 0.01,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.49,41.55)\">\n",
       "    <path fill=\"none\" d=\"M-2.41,0.91 L0.92,-2.53 1.49,1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.83,60.71)\">\n",
       "    <path fill=\"none\" d=\"M-0.64,-1.88 L3.23,1.27 -2.59,0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.6,60.53)\">\n",
       "    <path fill=\"none\" d=\"M2.47,0.83 L-3.42,0.98 0.95,-1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.17,41.67)\">\n",
       "    <path fill=\"none\" d=\"M-1.91,1.38 L-0.2,-2.61 2.11,1.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.42,59.44)\">\n",
       "    <path fill=\"none\" d=\"M0.55,-1.89 L2.17,2.11 -2.72,-0.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.81,59.57)\">\n",
       "    <path fill=\"none\" d=\"M2.7,0.3 L-2.89,1.62 0.19,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.08,41.58)\">\n",
       "    <path fill=\"none\" d=\"M-1.56,1.59 L-0.81,-2.55 2.37,0.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.56,59.99)\">\n",
       "    <path fill=\"none\" d=\"M-0.02,-1.93 L2.74,1.75 -2.72,0.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.92,58.95)\">\n",
       "    <path fill=\"none\" d=\"M2.73,-0.13 L-2.3,2.04 -0.42,-1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.75,41.59)\">\n",
       "    <path fill=\"none\" d=\"M-2.35,0.99 L0.75,-2.56 1.6,1.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.96,58.11)\">\n",
       "    <path fill=\"none\" d=\"M1.83,-1.43 L0.35,2.6 -2.18,-1.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.67,39.07)\">\n",
       "    <path fill=\"none\" d=\"M-2.41,-0.91 L3.48,-0.87 -1.07,1.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.39,58.39)\">\n",
       "    <path fill=\"none\" d=\"M1.16,-1.75 L1.4,2.41 -2.57,-0.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.38,38.18)\">\n",
       "    <path fill=\"none\" d=\"M-2.04,-1.28 L3.67,-0.27 -1.63,1.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.27,58.13)\">\n",
       "    <path fill=\"none\" d=\"M2.26,-1.09 L-0.52,2.58 -1.73,-1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.39,38.22)\">\n",
       "    <path fill=\"none\" d=\"M-2.06,-1.27 L3.67,-0.3 -1.6,1.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.89,58.55)\">\n",
       "    <path fill=\"none\" d=\"M0.91,-1.82 L1.73,2.3 -2.65,-0.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.71,39.15)\">\n",
       "    <path fill=\"none\" d=\"M-2.44,-0.87 L3.45,-0.92 -1.01,1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.52,58.16)\">\n",
       "    <path fill=\"none\" d=\"M1.66,-1.53 L0.64,2.57 -2.31,-1.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.65,36.51)\">\n",
       "    <path fill=\"none\" d=\"M-1.1,-1.77 L3.49,0.84 -2.4,0.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.29,59.46)\">\n",
       "    <path fill=\"none\" d=\"M-0.09,-1.93 L2.8,1.7 -2.71,0.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.93,39.51)\">\n",
       "    <path fill=\"none\" d=\"M-2.55,-0.7 L3.31,-1.16 -0.76,1.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.29,58.19)\">\n",
       "    <path fill=\"none\" d=\"M1.57,-1.58 L0.8,2.55 -2.37,-0.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.45,40.1)\">\n",
       "    <path fill=\"none\" d=\"M-2.68,-0.36 L2.96,-1.56 -0.28,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.63,59.2)\">\n",
       "    <path fill=\"none\" d=\"M0.16,-1.93 L2.58,1.87 -2.73,0.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.45,40.11)\">\n",
       "    <path fill=\"none\" d=\"M-2.68,-0.36 L2.96,-1.56 -0.27,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.81,58.1)\">\n",
       "    <path fill=\"none\" d=\"M2.12,-1.22 L-0.22,2.61 -1.9,-1.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.94,36.01)\">\n",
       "    <path fill=\"none\" d=\"M-0.74,-1.86 L3.3,1.18 -2.56,0.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.72,58.13)\">\n",
       "    <path fill=\"none\" d=\"M1.74,-1.49 L0.51,2.59 -2.25,-1.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.36,37.54)\">\n",
       "    <path fill=\"none\" d=\"M-1.72,-1.5 L3.69,0.15 -1.96,1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.85,59.06)\">\n",
       "    <path fill=\"none\" d=\"M0.3,-1.92 L2.43,1.96 -2.73,-0.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.54,38.78)\">\n",
       "    <path fill=\"none\" d=\"M-2.3,-1.04 L3.57,-0.68 -1.26,1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.45,58.37)\">\n",
       "    <path fill=\"none\" d=\"M1.19,-1.74 L1.36,2.43 -2.55,-0.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.4,37.25)\">\n",
       "    <path fill=\"none\" d=\"M-1.56,-1.59 L3.66,0.35 -2.1,1.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.46,58.73)\">\n",
       "    <path fill=\"none\" d=\"M0.67,-1.87 L2.02,2.18 -2.7,-0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.37,38.04)\">\n",
       "    <path fill=\"none\" d=\"M-1.98,-1.33 L3.68,-0.18 -1.7,1.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.52,33.88)\">\n",
       "    <path fill=\"none\" d=\"M1.9,-1.39 L0.23,2.61 -2.13,-1.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.79,34.11)\">\n",
       "    <path fill=\"none\" d=\"M2.53,-0.73 L-1.28,2.45 -1.25,-1.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.37,34.02)\">\n",
       "    <path fill=\"none\" d=\"M1.44,-1.64 L1,2.51 -2.44,-0.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.17,34.37)\">\n",
       "    <path fill=\"none\" d=\"M0.85,-1.84 L1.81,2.28 -2.66,-0.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.95,34.53)\">\n",
       "    <path fill=\"none\" d=\"M2.7,-0.29 L-2.06,2.17 -0.64,-1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.66,33.91)\">\n",
       "    <path fill=\"none\" d=\"M2.26,-1.09 L-0.53,2.58 -1.73,-1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.05,59.08)\">\n",
       "    <path fill=\"none\" d=\"M2.62,-0.56 L-1.6,2.35 -1.02,-1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.38,37.55)\">\n",
       "    <path fill=\"none\" d=\"M1.96,1.35 L-3.69,0.15 1.73,-1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.82,58.7)\">\n",
       "    <path fill=\"none\" d=\"M2.07,-1.26 L-0.11,2.61 -1.96,-1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.03,36.38)\">\n",
       "    <path fill=\"none\" d=\"M2.44,0.87 L-3.45,0.93 1.01,-1.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.79,59)\">\n",
       "    <path fill=\"none\" d=\"M2.57,-0.65 L-1.43,2.41 -1.15,-1.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.34,38.27)\">\n",
       "    <path fill=\"none\" d=\"M1.57,1.58 L-3.66,-0.33 2.09,-1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.94,59.46)\">\n",
       "    <path fill=\"none\" d=\"M2.72,-0.2 L-2.19,2.1 -0.53,-1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,38.92)\">\n",
       "    <path fill=\"none\" d=\"M1.17,1.75 L-3.53,-0.77 2.36,-0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.06,58.82)\">\n",
       "    <path fill=\"none\" d=\"M2.42,-0.9 L-0.93,2.53 -1.48,-1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.92,39.35)\">\n",
       "    <path fill=\"none\" d=\"M0.87,1.83 L-3.38,-1.06 2.5,-0.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.74,58.75)\">\n",
       "    <path fill=\"none\" d=\"M1.68,-1.52 L0.61,2.57 -2.29,-1.05 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.77,39.56)\">\n",
       "    <path fill=\"none\" d=\"M0.71,1.87 L-3.28,-1.2 2.56,-0.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.89,60.09)\">\n",
       "    <path fill=\"none\" d=\"M2.71,0.25 L-2.83,1.68 0.12,-1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.98,39.25)\">\n",
       "    <path fill=\"none\" d=\"M0.95,1.81 L-3.42,-0.99 2.47,-0.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.35,58.73)\">\n",
       "    <path fill=\"none\" d=\"M2.23,-1.12 L-0.46,2.59 -1.77,-1.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.39,37.9)\">\n",
       "    <path fill=\"none\" d=\"M1.78,1.47 L-3.69,-0.08 1.91,-1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.98,59.48)\">\n",
       "    <path fill=\"none\" d=\"M2.72,-0.18 L-2.22,2.08 -0.5,-1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.34,38.27)\">\n",
       "    <path fill=\"none\" d=\"M1.57,1.58 L-3.66,-0.33 2.09,-1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.14,62.5)\">\n",
       "    <path fill=\"none\" d=\"M-1.8,-1.46 L3.69,0.06 -1.9,1.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.63,55.58)\">\n",
       "    <path fill=\"none\" d=\"M-2.49,-0.8 L3.39,-1.03 -0.9,1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.55,57.47)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,-0.18 L2.74,-1.75 -0.01,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.2,58.05)\">\n",
       "    <path fill=\"none\" d=\"M-2.47,-0.83 L3.42,-0.98 -0.95,1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.46,52.47)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,-0.3 L2.89,-1.62 -0.19,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.93,52.73)\">\n",
       "    <path fill=\"none\" d=\"M-2.73,0.13 L2.3,-2.04 0.42,1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.43,46.64)\">\n",
       "    <path fill=\"none\" d=\"M-1.83,1.43 L-0.35,-2.6 2.18,1.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.81,43.61)\">\n",
       "    <path fill=\"none\" d=\"M-1.16,1.75 L-1.4,-2.41 2.57,0.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.4,42.66)\">\n",
       "    <path fill=\"none\" d=\"M-2.26,1.09 L0.52,-2.58 1.73,1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.83,49.15)\">\n",
       "    <path fill=\"none\" d=\"M-0.91,1.82 L-1.73,-2.3 2.65,0.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.88,35.6)\">\n",
       "    <path fill=\"none\" d=\"M-1.66,1.53 L-0.64,-2.57 2.31,1.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.73,53.06)\">\n",
       "    <path fill=\"none\" d=\"M0.09,1.93 L-2.8,-1.7 2.71,-0.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.62,52.89)\">\n",
       "    <path fill=\"none\" d=\"M-1.57,1.58 L-0.8,-2.55 2.37,0.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.33,56.08)\">\n",
       "    <path fill=\"none\" d=\"M-0.16,1.93 L-2.58,-1.87 2.73,-0.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.62,36.34)\">\n",
       "    <path fill=\"none\" d=\"M-2.12,1.22 L0.22,-2.61 1.9,1.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.27,40.71)\">\n",
       "    <path fill=\"none\" d=\"M-1.74,1.49 L-0.51,-2.59 2.25,1.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.13,47.98)\">\n",
       "    <path fill=\"none\" d=\"M-0.3,1.92 L-2.43,-1.96 2.73,0.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.17,38.3)\">\n",
       "    <path fill=\"none\" d=\"M-1.19,1.74 L-1.36,-2.43 2.55,0.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.79,42.92)\">\n",
       "    <path fill=\"none\" d=\"M-0.67,1.87 L-2.02,-2.18 2.7,0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.37,41.25)\">\n",
       "    <path fill=\"none\" d=\"M-2.63,0.52 L1.67,-2.33 0.96,1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.83,80.28)\">\n",
       "    <path fill=\"none\" d=\"M0.44,-1.91 L2.28,2.05 -2.73,-0.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.33,72.82)\">\n",
       "    <path fill=\"none\" d=\"M1.09,-1.77 L1.51,2.38 -2.59,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.63,68.83)\">\n",
       "    <path fill=\"none\" d=\"M-0.93,-1.82 L3.41,1.01 -2.48,0.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.32,79.84)\">\n",
       "    <path fill=\"none\" d=\"M1.29,-1.7 L1.22,2.46 -2.51,-0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(29.13,81.15)\">\n",
       "    <path fill=\"none\" d=\"M2.73,-0.02 L-2.47,1.94 -0.27,-1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(23.69,76.35)\">\n",
       "    <path fill=\"none\" d=\"M2.66,0.44 L-3.05,1.47 0.39,-1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.93,71.25)\">\n",
       "    <path fill=\"none\" d=\"M2.45,0.85 L-3.44,0.95 0.99,-1.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.93,87.56)\">\n",
       "    <path fill=\"none\" d=\"M2.48,-0.81 L-1.12,2.49 -1.36,-1.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(17.25,65.56)\">\n",
       "    <path fill=\"none\" d=\"M2.11,1.23 L-3.66,0.36 1.55,-1.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(17.62,56.24)\">\n",
       "    <path fill=\"none\" d=\"M1.35,1.68 L-3.6,-0.58 2.25,-1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.9,66.78)\">\n",
       "    <path fill=\"none\" d=\"M0.42,-1.91 L2.31,2.04 -2.73,-0.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.16,74.01)\">\n",
       "    <path fill=\"none\" d=\"M-0.15,-1.93 L2.85,1.66 -2.71,0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.19,81.76)\">\n",
       "    <path fill=\"none\" d=\"M0.92,-1.82 L1.72,2.31 -2.64,-0.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.61,67.15)\">\n",
       "    <path fill=\"none\" d=\"M2.22,-1.13 L-0.44,2.59 -1.78,-1.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.14,68.11)\">\n",
       "    <path fill=\"none\" d=\"M-0.48,-1.9 L3.12,1.4 -2.64,0.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.31,69.7)\">\n",
       "    <path fill=\"none\" d=\"M-1.12,-1.76 L3.5,0.82 -2.39,0.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.87,74.62)\">\n",
       "    <path fill=\"none\" d=\"M-0.57,-1.89 L3.18,1.32 -2.61,0.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.91,78.73)\">\n",
       "    <path fill=\"none\" d=\"M-0.03,-1.93 L2.75,1.74 -2.72,0.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.71,77.49)\">\n",
       "    <path fill=\"none\" d=\"M1.73,-1.5 L0.54,2.58 -2.26,-1.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53,72.77)\">\n",
       "    <path fill=\"none\" d=\"M2.07,-1.26 L-0.12,2.61 -1.96,-1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.16,75.17)\">\n",
       "    <path fill=\"none\" d=\"M0.53,-1.9 L2.18,2.1 -2.72,-0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.28,59.08)\">\n",
       "    <path fill=\"none\" d=\"M1.02,-1.79 L1.59,2.35 -2.61,-0.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.73,50.4)\">\n",
       "    <path fill=\"none\" d=\"M1.22,-1.73 L1.32,2.44 -2.54,-0.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.58,48.03)\">\n",
       "    <path fill=\"none\" d=\"M-0.47,-1.9 L3.11,1.41 -2.64,0.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.85,34.3)\">\n",
       "    <path fill=\"none\" d=\"M-2.24,-1.11 L3.6,-0.57 -1.36,1.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.6,51.42)\">\n",
       "    <path fill=\"none\" d=\"M-0.41,-1.91 L3.06,1.46 -2.66,0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.02,51.07)\">\n",
       "    <path fill=\"none\" d=\"M2.41,-0.91 L-0.92,2.53 -1.49,-1.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.01,52.69)\">\n",
       "    <path fill=\"none\" d=\"M1.91,-1.38 L0.2,2.61 -2.11,-1.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.57,46.24)\">\n",
       "    <path fill=\"none\" d=\"M1.56,-1.59 L0.81,2.55 -2.37,-0.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.49,45.86)\">\n",
       "    <path fill=\"none\" d=\"M2.35,-0.99 L-0.75,2.56 -1.6,-1.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.11,41.46)\">\n",
       "    <path fill=\"none\" d=\"M2.41,0.91 L-3.48,0.87 1.07,-1.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.21,39.59)\">\n",
       "    <path fill=\"none\" d=\"M2.04,1.28 L-3.67,0.27 1.63,-1.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.67,38.35)\">\n",
       "    <path fill=\"none\" d=\"M2.06,1.27 L-3.67,0.3 1.6,-1.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.4,44.33)\">\n",
       "    <path fill=\"none\" d=\"M2.44,0.87 L-3.45,0.92 1.01,-1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.14,33.02)\">\n",
       "    <path fill=\"none\" d=\"M1.1,1.77 L-3.49,-0.84 2.4,-0.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.48,48.78)\">\n",
       "    <path fill=\"none\" d=\"M2.55,0.7 L-3.31,1.16 0.76,-1.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.85,46.74)\">\n",
       "    <path fill=\"none\" d=\"M2.68,0.36 L-2.96,1.56 0.28,-1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.91,50.95)\">\n",
       "    <path fill=\"none\" d=\"M2.68,0.36 L-2.96,1.56 0.27,-1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.87,34.21)\">\n",
       "    <path fill=\"none\" d=\"M0.74,1.86 L-3.3,-1.18 2.56,-0.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.01,37.07)\">\n",
       "    <path fill=\"none\" d=\"M1.72,1.5 L-3.69,-0.15 1.96,-1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.82,44.03)\">\n",
       "    <path fill=\"none\" d=\"M2.3,1.04 L-3.57,0.68 1.26,-1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.6,35.19)\">\n",
       "    <path fill=\"none\" d=\"M1.56,1.59 L-3.66,-0.35 2.1,-1.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.27,39.38)\">\n",
       "    <path fill=\"none\" d=\"M1.98,1.33 L-3.68,0.18 1.7,-1.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.6,12.23)\">\n",
       "    <path fill=\"none\" d=\"M-1.9,1.39 L-0.23,-2.61 2.13,1.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.52,13.66)\">\n",
       "    <path fill=\"none\" d=\"M-2.53,0.73 L1.28,-2.45 1.25,1.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.04,13.11)\">\n",
       "    <path fill=\"none\" d=\"M-1.44,1.64 L-1,-2.51 2.44,0.87 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.9,15.15)\">\n",
       "    <path fill=\"none\" d=\"M-0.85,1.84 L-1.81,-2.28 2.66,0.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.41,16.16)\">\n",
       "    <path fill=\"none\" d=\"M-2.7,0.29 L2.06,-2.17 0.64,1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76,12.62)\">\n",
       "    <path fill=\"none\" d=\"M-2.26,1.09 L0.53,-2.58 1.73,1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.95,36.59)\">\n",
       "    <path fill=\"none\" d=\"M-1.96,-1.35 L3.69,-0.15 -1.73,1.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.74,34.3)\">\n",
       "    <path fill=\"none\" d=\"M-2.44,-0.87 L3.45,-0.93 -1.01,1.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.28,39.98)\">\n",
       "    <path fill=\"none\" d=\"M-1.57,-1.58 L3.66,0.33 -2.09,1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.41,44.18)\">\n",
       "    <path fill=\"none\" d=\"M-1.17,-1.75 L3.53,0.77 -2.36,0.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.1,43.47)\">\n",
       "    <path fill=\"none\" d=\"M-0.87,-1.83 L3.38,1.06 -2.5,0.78 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.88,40.33)\">\n",
       "    <path fill=\"none\" d=\"M-0.71,-1.87 L3.28,1.2 -2.56,0.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.18,47.7)\">\n",
       "    <path fill=\"none\" d=\"M-0.95,-1.81 L3.42,0.99 -2.47,0.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.48,38.13)\">\n",
       "    <path fill=\"none\" d=\"M-1.78,-1.47 L3.69,0.08 -1.91,1.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.83,40.85)\">\n",
       "    <path fill=\"none\" d=\"M-1.57,-1.58 L3.66,0.33 -2.09,1.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.98,58.52)\">\n",
       "    <path fill=\"none\" d=\"M2.63,-0.52 L-1.67,2.33 -0.96,-1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.81,66.27)\">\n",
       "    <path fill=\"none\" d=\"M-2.52,0.75 L1.24,-2.46 1.28,1.71 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.9,65.06)\">\n",
       "    <path fill=\"none\" d=\"M-0.44,1.91 L-2.28,-2.05 2.73,0.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.3,64.99)\">\n",
       "    <path fill=\"none\" d=\"M-2.69,-0.32 L2.91,-1.6 -0.22,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.74,65.56)\">\n",
       "    <path fill=\"none\" d=\"M-1.09,1.77 L-1.51,-2.38 2.59,0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.03,66.03)\">\n",
       "    <path fill=\"none\" d=\"M-2.65,0.47 L1.76,-2.29 0.89,1.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.58,63.5)\">\n",
       "    <path fill=\"none\" d=\"M0.93,1.82 L-3.41,-1.01 2.48,-0.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.23,65.65)\">\n",
       "    <path fill=\"none\" d=\"M-2.73,0.13 L2.3,-2.04 0.43,1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.31,65.68)\">\n",
       "    <path fill=\"none\" d=\"M-1.29,1.7 L-1.22,-2.46 2.51,0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.79,64.9)\">\n",
       "    <path fill=\"none\" d=\"M-2.73,0.02 L2.47,-1.94 0.27,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.92,64.19)\">\n",
       "    <path fill=\"none\" d=\"M-2.66,-0.44 L3.05,-1.47 -0.39,1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.34,63.42)\">\n",
       "    <path fill=\"none\" d=\"M-2.45,-0.85 L3.44,-0.95 -0.99,1.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.8,65.71)\">\n",
       "    <path fill=\"none\" d=\"M-2.48,0.81 L1.12,-2.49 1.36,1.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.02,62.54)\">\n",
       "    <path fill=\"none\" d=\"M-2.11,-1.23 L3.66,-0.36 -1.55,1.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.1,61.13)\">\n",
       "    <path fill=\"none\" d=\"M-1.35,-1.68 L3.6,0.58 -2.25,1.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.54,64.06)\">\n",
       "    <path fill=\"none\" d=\"M-2.47,-0.83 L3.42,-0.98 -0.96,1.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.93,65.05)\">\n",
       "    <path fill=\"none\" d=\"M-0.42,1.91 L-2.31,-2.04 2.73,0.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.31,66.13)\">\n",
       "    <path fill=\"none\" d=\"M-2.61,0.57 L1.57,-2.36 1.04,1.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.75,64.47)\">\n",
       "    <path fill=\"none\" d=\"M0.15,1.93 L-2.85,-1.66 2.71,-0.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.08,66.05)\">\n",
       "    <path fill=\"none\" d=\"M-2.64,0.49 L1.72,-2.31 0.92,1.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.05,65.45)\">\n",
       "    <path fill=\"none\" d=\"M-0.92,1.82 L-1.72,-2.31 2.64,0.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.43,63.83)\">\n",
       "    <path fill=\"none\" d=\"M-2.39,-0.94 L3.5,-0.83 -1.11,1.77 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.83,65.87)\">\n",
       "    <path fill=\"none\" d=\"M-2.22,1.13 L0.44,-2.59 1.78,1.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.09,64.79)\">\n",
       "    <path fill=\"none\" d=\"M-2.66,-0.45 L3.06,-1.46 -0.4,1.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.15,64.08)\">\n",
       "    <path fill=\"none\" d=\"M0.48,1.9 L-3.12,-1.4 2.64,-0.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.39,66.3)\">\n",
       "    <path fill=\"none\" d=\"M-1.34,1.69 L-1.16,-2.48 2.49,0.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.72,63.23)\">\n",
       "    <path fill=\"none\" d=\"M1.12,1.76 L-3.5,-0.82 2.39,-0.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.93,66.49)\">\n",
       "    <path fill=\"none\" d=\"M-1.92,1.37 L-0.18,-2.61 2.1,1.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.24,63.97)\">\n",
       "    <path fill=\"none\" d=\"M0.57,1.89 L-3.18,-1.32 2.61,-0.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.91,66.46)\">\n",
       "    <path fill=\"none\" d=\"M-2.25,1.1 L0.5,-2.59 1.75,1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.6,64.6)\">\n",
       "    <path fill=\"none\" d=\"M0.03,1.93 L-2.75,-1.74 2.72,-0.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.52,65.17)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,-0.21 L2.77,-1.72 -0.05,1.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.29,65.86)\">\n",
       "    <path fill=\"none\" d=\"M-1.73,1.5 L-0.54,-2.58 2.26,1.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.87,64.53)\">\n",
       "    <path fill=\"none\" d=\"M-2.6,-0.59 L3.21,-1.29 -0.6,1.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.31,65.9)\">\n",
       "    <path fill=\"none\" d=\"M-2.07,1.26 L0.12,-2.61 1.96,1.35 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.28,65.68)\">\n",
       "    <path fill=\"none\" d=\"M-2.72,0.16 L2.26,-2.06 0.46,1.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.75,65.14)\">\n",
       "    <path fill=\"none\" d=\"M-0.53,1.9 L-2.18,-2.1 2.72,0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.24,64.78)\">\n",
       "    <path fill=\"none\" d=\"M0.4,1.91 L-3.06,-1.46 2.66,-0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.47,66.28)\">\n",
       "    <path fill=\"none\" d=\"M-1.3,1.7 L-1.21,-2.47 2.51,0.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.16,62.92)\">\n",
       "    <path fill=\"none\" d=\"M1.67,1.53 L-3.68,-0.22 2.01,-1.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.96,65.73)\">\n",
       "    <path fill=\"none\" d=\"M-0.51,1.9 L-2.2,-2.09 2.72,0.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.86,63.91)\">\n",
       "    <path fill=\"none\" d=\"M1.06,1.78 L-3.48,-0.88 2.42,-0.9 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-3a04f4b0-3\">\n",
       "  <g transform=\"translate(81.69,56.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.59,53.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.6,40.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.05,55.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.4,56.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,58.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78,53.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.44,52.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.01,42.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.59,40.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.48,46.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.18,49.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.52,49.43)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84,47.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.63,52.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.91,44.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.65,46.66)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.03,62.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.07,43.98)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.84,78.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.86,72.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.21,68.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.02,78.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.67,68.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.73,73.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.99,79.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.88,68.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.77,68.3)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.58,68.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.38,73.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.93,76.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.05,76.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.53,73.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.73,74.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.8,75.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.38,84.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.14,64.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.79,80.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(117.21,70.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.67,60.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.04,60.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.08,41.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.3,59.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.71,40.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.31,55.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.71,36.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.79,60.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.2,41.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.91,60.66)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.27,60.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.31,42.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.82,61.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.19,60.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.23,42.47)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.44,59.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.81,59.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.85,40.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.59,59.37)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.96,58.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70,40.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.84,57.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.88,39.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.29,56.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.33,38.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.66,56.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.7,38.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.42,57.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.46,39.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.59,54.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.63,36.27)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.75,59.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.79,40.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.47,58.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.51,40.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.48,59.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.52,41.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.1,54.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.14,36.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.24,55.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.28,37.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.24,57.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.28,39.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.65,55.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.69,37)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.3,56.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.34,38.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.22,30.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.51,30.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.04,30.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.7,31.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.78,31.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.35,30.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.11,56.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.52,37.42)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.97,55.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.38,36.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.93,57.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.34,38.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.17,58.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.58,39.66)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.28,58.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.69,39.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.44,57.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.85,38.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.32,59.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.73,40.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.75,56.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.15,37.89)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.32,57.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.73,38.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.12,62.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.15,56.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.85,56.63)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.61,57.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.45,53.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.9,52.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.55,47.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.91,45.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.01,44.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.3,49.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.81,39.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(39.27,53.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.44,52.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.48,55.47)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.33,39.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.75,43.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.74,49.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.97,41.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.94,45.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.52,43.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.3,78.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.31,72.79)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.67,68.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.48,78.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.45,78.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(27.72,74.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(24.47,70)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.56,83.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.21,65.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(22.55,57.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.13,67.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.19,72.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.44,79.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.34,68.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.23,68.15)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.03,68.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.84,72.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.39,76.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.5,76.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.99,73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.19,74.24)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.46,56.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.5,49.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.39,47.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.4,34.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.85,49.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.2,50.58)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.95,51.88)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.8,46.97)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.25,46.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.9,41.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.26,39.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.36,38.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.65,43.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.15,33.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.62,47.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.78,46.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.83,49.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.68,33.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.09,37.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.09,43.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.32,35.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.29,39.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.9,15.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.79,16.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.37,16.46)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.37,18.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.58,19.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.31,16.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.81,36.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.39,34.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.29,39.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.98,43.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.33,43.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.81,41.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.44,46.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.72,38.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.45,40.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.83,55.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.06,67.79)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.42,67.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.39,66.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.76,65.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.18,64.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.54,64.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.78,67.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.15,67.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.47,67.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.9,66.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.81,64.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.18,69.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.06,63.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.17,60.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.33,64.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.7,63.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.35,66.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.72,65.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.44,68.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.8,67.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.73,64.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.1,64.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.7,64.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.06,64.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.63,64.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63,64.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.9,66.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.27,65.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.75,67.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.12,66.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.12,67.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.49,66.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.95,66.11)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.32,65.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.35,66.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.72,66.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.37,66.75)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.23,69.86)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.15,63.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.04,68.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.51,65.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-3a04f4b0-4\">\n",
       "  <g transform=\"translate(87.66,62.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.71,54.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.23,50.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.24,33.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.18,53.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.64,54.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.31,56.58)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.78,50.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.37,49.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.9,42.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.72,40)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.19,38.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.24,45.71)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.91,31.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.54,50.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.42,49.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.48,53.29)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.95,32.45)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.5,36.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.49,45.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.13,34.68)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.76,39.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.25,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.44,10)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.54,9.35)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.2,11.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.49,12.92)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.79,8.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,36.37)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.89,32.9)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.76,40.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.69,45.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.14,45.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,42.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.29,49.18)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92,38.25)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.31,41.35)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.48,62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.87,37.77)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.24,83.35)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.59,76.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.73,70.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.14,83.52)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(25.44,84.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.13,78.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.79,72.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.25,91.28)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,66.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.24,55.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.34,69.83)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.42,76.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.76,85.21)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.96,71.02)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.81,70.2)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.55,70.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.63,76.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.03,81.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.51,81.36)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.82,76.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.42,78.32)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.51,79.21)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.95,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,65.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.17,86.82)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.06,72.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-3a04f4b0-5\">\n",
       "  <g transform=\"translate(87.66,62.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.71,54.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.23,50.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.24,33.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.18,53.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.64,54.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.31,56.58)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.78,50.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.37,49.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.9,42.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.72,40)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.19,38.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.24,45.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.91,31.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.54,50.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.42,49.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(41.48,53.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.95,32.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.5,36.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.49,45.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.13,34.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.76,39.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.25,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.44,10)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.54,9.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.2,11.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.49,12.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.79,8.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,36.37)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.89,32.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.76,40.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.69,45.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.14,45.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.78,42.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.29,49.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(92,38.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.31,41.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.48,62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.87,37.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.24,83.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.59,76.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.73,70.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.14,83.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(25.44,84.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(19.13,78.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(14.79,72.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(40.25,91.28)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,66.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.24,55.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.34,69.83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.42,76.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.76,85.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.96,71.02)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.81,70.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.55,70.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.63,76.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.03,81.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.51,81.36)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.82,76.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.42,78.32)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.51,79.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.95,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,65.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.17,86.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(127.06,72.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.27061955725892844cx, 0.27641725021045505cy), (0.1696785361394218cx, 0.12293027241134621cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3036090449048318cx, 0.275733888307326cy), (0.4511064017621485cx, 0.02984535903342328cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.29536670721248925cx, 0.2722900901416888cy), (0.4594771793714567cx, -0.3671335352657875cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.31222514310081767cx, 0.28340452520559867cy), (0.5434261934662574cx, 0.10534079049905345cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.259662711008365cx, 0.2889911801669917cy), (-0.07496388323050465cx, 0.12960901298816513cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2605357314874244cx, 0.2872947468515953cy), (0.054322525069625704cx, 0.17301607109056694cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.26944694626014654cx, 0.27722763062901007cy), (0.0872389529905451cx, 0.02611713937246769cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2646098393823217cx, 0.2815812055398903cy), (-0.03362254413352266cx, 0.01316269414165061cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.30107358307760945cx, 0.274368890788003cy), (0.5762878477462821cx, -0.2991461398730624cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2885679398810213cx, 0.2713299898211121cy), (0.30766783744071796cx, -0.3793083872023695cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.22853875130736118cx, 0.7218522132042481cy), (-0.28784249779731425cx, 0.3186221190895708cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.27670736192574324cx, 0.6246665933308153cy), (0.2607318264903609cx, 0.3177044243738949cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.3026407753894967cx, 0.6090529105054846cy), (-0.2933472749530726cx, 0.3189362376466308cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.014137861030227978cx, 0.6550611066412619cy), (0.26865650370747884cx, 0.32683000656177574cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.023213590114811965cx, 0.6545694013785085cy), (-0.2740045600546682cx, 0.31293984227193433cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.8532944702444136cx, 0.6836840191247253cy), (0.31336895349438015cx, 0.3196599117848331cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.5199951869043352cx, 0.9707104314308752cy), (0.29783939005529264cx, 0.33161488975607617cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.9690990418238632cx, 0.35927544254342464cy), (0.3185590106683683cx, 0.30490780939313983cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.7020231387259733cx, 0.8587957768722575cy), (0.30617769001339334cx, 0.32719621758461337cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.9270333631916854cx, 0.5307129155038092cy), (0.316859661385881cx, 0.312756260720895cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.1927361614571604cx, 0.22023569833768797cy), (0.1696785361394218cx, 0.12293027241134621cy), (0.24988842402631875cx, 0.1826493973645086cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.37343836585649526cx, 0.09283485179656722cy), (0.4511064017621485cx, 0.02984535903342328cy), (0.43209809993724646cx, 0.12802216108835593cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.4029884222769354cx, -0.28461674714412cy), (0.4594771793714567cx, -0.3671335352657875cy), (0.46924504989623816cx, -0.2676117351142071cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.44810835460334636cx, 0.1355816501843223cy), (0.5434261934662574cx, 0.10534079049905345cy), (0.4898469425871742cx, 0.18977575881927172cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.004833621548494857cx, 0.20089538192650305cy), (-0.07496388323050465cx, 0.12960901298816513cy), (0.024581008718585734cx, 0.13913867651023765cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.11993603498115761cx, 0.2484804157646533cy), (0.054322525069625704cx, 0.17301607109056694cy), (0.1530929354605038cx, 0.18864956178258838cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.11474391423906981cx, 0.12226014279298267cy), (0.0872389529905451cx, 0.02611713937246769cy), (0.17010850706993788cx, 0.08208710459206199cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.013342785128940833cx, 0.10144778828142254cy), (-0.03362254413352266cx, 0.01316269414165061cy), (0.05910355000029572cx, 0.05060426818289856cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.5047977526520373cx, -0.2292235662403946cy), (0.5762878477462821cx, -0.2991461398730624cy), (0.5664686216297621cx, -0.1996293935512867cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2707232116337476cx, -0.2863831773614284cy), (0.30766783744071796cx, -0.3793083872023695cy), (0.339097785651457cx, -0.28437599886482545cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.3080073730778947cx, 0.41656790922329034cy), (-0.28784249779731425cx, 0.3186221190895708cy), (-0.24033134813327714cx, 0.4066146793296358cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.16217124486938306cx, 0.3346103922708998cy), (0.2607318264903609cx, 0.3177044243738949cy), (0.19609698732298947cx, 0.39400866780640675cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.3305403911170848cx, 0.4117622690710664cy), (-0.2933472749530726cx, 0.3189362376466308cy), (-0.2621714320567922cx, 0.41395237743196645cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.18404565250526733cx, 0.3801310746452318cy), (0.26865650370747884cx, 0.32683000656177574cy), (0.23810209746356226cx, 0.4220478003772266cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.24596725659960322cx, 0.408928954232451cy), (-0.2740045600546682cx, 0.31293984227193433cy), (-0.19082612770984103cx, 0.3684497368192762cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.372163983273992cx, 0.4005496173920027cy), (0.31336895349438015cx, 0.3196599117848331cy), (0.41040345985554705cx, 0.3438323046172498cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2963872334034922cx, 0.43160434540545267cy), (0.29783939005529264cx, 0.33161488975607617cy), (0.3609989567123636cx, 0.40914468492987377cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.409353382035893cx, 0.3468170223179373cy), (0.3185590106683683cx, 0.30490780939313983cy), (0.4150502571207162cx, 0.2786506321253478cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.33486777976015203cx, 0.4229922443828211cy), (0.30617769001339334cx, 0.32719621758461337cy), (0.38973207291957024cx, 0.3821385973762458cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3938475955708749cx, 0.3765752076718363cy), (0.316859661385881cx, 0.312756260720895cy), (0.41685786891881277cx, 0.3121575202088916cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.18639454380264697cx, 0.14834798137287525cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.4222075587541195cx, 0.07802177491208623cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.42230388869184377cx, -0.22229524443654974cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.49790947617919057cx, 0.14039632618501335cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.005304905412720412cx, 0.1627874842728919cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.09231466617167189cx, 0.19407045286314595cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.123685398191903cx, 0.0763459169076326cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.029411445190483554cx, 0.06989526416767997cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5141920468718029cx, -0.16974559740727027cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.30334780674518874cx, -0.23214645862941874cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.2752725434836466cx, 0.404090308890633cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.13983514238727013cx, 0.38675541501965327cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.2951742437931201cx, 0.3759690128552072cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.2145276174305424cx, 0.39663543889423514cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.22048176874984782cx, 0.38584903672978904cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.43549488218081417cx, 0.4019986433208653cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.34828767048602266cx, 0.4767439908902136cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.46574353936917356cx, 0.31720847357761683cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.3958792334309574cx, 0.44766065920769343cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.4548022823905073cx, 0.36202995464965176cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.2876580524922314cx, 0.30232532118695143cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.15264004090611882cx, 0.09702220143484985cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.4670573941747489cx, 0.003253926153797826cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.46718583409171455cx, -0.39716876631105014cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5679932840748436cx, 0.08641999451770066cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.10295922471437102cx, 0.1162748719682054cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.02720020406481871cx, 0.15798549675521079cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.06902784675846019cx, 0.0010194488145263136cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.0566707572434324cx, -0.007581421505410524cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3361258390870163cx, -0.1738255974747801cy), 0.012403473458920847w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.3040372648883982cx, 0.6383393207616186cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.22596673106333087cx, 0.7519694739770717cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.22402678668971987cx, 0.7525308806594622cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.30363358792761375cx, 0.6400456965177588cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.004863687754524615cx, 0.6795657920160862cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8790053712465624cx, 0.701018609722607cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5301765244673964cx, 1.0cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, 0.36185793074961303cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7205427762471353cx, 0.8836666732699194cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9562349720853349cx, 0.5411438550377528cy), 0.012403473458920847w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.2876580524922314cx, 0.30232532118695143cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.15264004090611882cx, 0.09702220143484985cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.4670573941747489cx, 0.003253926153797826cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.46718583409171455cx, -0.39716876631105014cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5679932840748436cx, 0.08641999451770066cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.10295922471437102cx, 0.1162748719682054cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.02720020406481871cx, 0.15798549675521079cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.06902784675846019cx, 0.0010194488145263136cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.0566707572434324cx, -0.007581421505410524cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3361258390870163cx, -0.1738255974747801cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.3040372648883982cx, 0.6383393207616186cy), \"56\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.22596673106333087cx, 0.7519694739770717cy), \"57\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.22402678668971987cx, 0.7525308806594622cy), \"58\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.30363358792761375cx, 0.6400456965177588cy), \"59\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.004863687754524615cx, 0.6795657920160862cy), \"60\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8790053712465624cx, 0.701018609722607cy), \"61\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5301765244673964cx, 1.0cy), \"62\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, 0.36185793074961303cy), \"63\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7205427762471353cx, 0.8836666732699194cy), \"64\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9562349720853349cx, 0.5411438550377528cy), \"65\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using Graphs, GraphPlot, SimpleWeightedGraphs\n",
    "\n",
    "\n",
    "G3 = SimpleWeightedDiGraph(adj_matrix)\n",
    "\n",
    "gplot(G3,nodelabel=1:count, edgelabel=weight.(edges(G3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e680b3a2",
   "metadata": {},
   "source": [
    "1 represents Weak tie and 2 represents Strong tie"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0a609c59",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "120-element Vector{Any}:\n",
       " 2\n",
       " 1\n",
       " 2\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 2\n",
       " 2\n",
       " 1\n",
       " 1\n",
       " ⋮\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr=[]\n",
    "for i in eachrow(f)\n",
    "    #println(     sw[ (ed[i[:1]],ed[i[:2]] )]   )\n",
    "    push!(arr,sw[ (ed[i[:1]],ed[i[:2]] )])\n",
    "end\n",
    "arr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b6e0d658",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "120-element Vector{Any}:\n",
       " 2\n",
       " 1\n",
       " 2\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 2\n",
       " 2\n",
       " 1\n",
       " 1\n",
       " ⋮\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1\n",
       " 1"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f.ties=arr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5b501aa5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>120×10 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">95 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">source</th><th style = \"text-align: left;\">Target</th><th style = \"text-align: left;\">Company</th><th style = \"text-align: left;\">Position</th><th style = \"text-align: left;\">Connected On</th><th style = \"text-align: left;\">University</th><th style = \"text-align: left;\">Skills</th><th style = \"text-align: left;\">City</th><th style = \"text-align: left;\">Index</th><th style = \"text-align: left;\">ties</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Any\" style = \"text-align: left;\">Any</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Student Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Chennai</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Barath</td><td style = \"text-align: left;\">Trimble Inc.</td><td style = \"text-align: left;\">Working Student (Automotive GNSS / INS )</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Sri Krishna College of Technology</td><td style = \"text-align: left;\">Python, Java, SQL</td><td style = \"text-align: left;\">Chennai</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Maria</td><td style = \"text-align: left;\">Amazon FC Graben GmbH</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">3</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">Amazon</td><td style = \"text-align: left;\">Digital Associate</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: left;\">DiFACTO Robotics and Automation</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Mumbai</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: left;\">Stealth Mode Startup - Data and Analytics</td><td style = \"text-align: left;\">Founder</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td><td style = \"text-align: right;\">6</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Senior Software Engineer - L3</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">7</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: left;\">Wells Fargo</td><td style = \"text-align: left;\">Vice President  - Systems Operations Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">8</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: left;\">ST JOHNS RIVER-TO-SEA LOOP ALLIANCE</td><td style = \"text-align: left;\">Data Analyst Intern</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">9</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Tamilmani</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Associate - Projects</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">10</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Meril</td><td style = \"text-align: left;\">Higher Education Forum</td><td style = \"text-align: left;\">Content Team</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Delhi</td><td style = \"text-align: right;\">11</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Lakshman</td><td style = \"text-align: left;\">Hitachi Energy</td><td style = \"text-align: left;\">Intern</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">12</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Santhosh</td><td style = \"text-align: left;\">Ford Motor Company</td><td style = \"text-align: left;\">Data Strategy Analyst</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">13</td><td style = \"text-align: left;\">1</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">109</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">Accenture</td><td style = \"text-align: left;\">Associate Manufacturing Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">109</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">110</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: left;\">DiFACTO Robotics and Automation</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Mumbai</td><td style = \"text-align: right;\">110</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">111</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: left;\">Stealth Mode Startup - Data and Analytics</td><td style = \"text-align: left;\">Founder</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td><td style = \"text-align: right;\">111</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">112</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Senior Software Engineer - L3</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">112</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">113</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: left;\">Wells Fargo</td><td style = \"text-align: left;\">Vice President  - Systems Operations Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">113</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">114</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: left;\">ST JOHNS RIVER-TO-SEA LOOP ALLIANCE</td><td style = \"text-align: left;\">Data Analyst Intern</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">114</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">115</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Arjun</td><td style = \"text-align: left;\">Tata Consultancy Services</td><td style = \"text-align: left;\">System Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Chennai</td><td style = \"text-align: right;\">115</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">116</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Rithika</td><td style = \"text-align: left;\">ZF Group</td><td style = \"text-align: left;\">Supply Chain Management</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bharathiyar University</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Mumbai</td><td style = \"text-align: right;\">116</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">117</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Sruthi</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Quality Analyst</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td><td style = \"text-align: right;\">117</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">118</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Kaarthicsudhan</td><td style = \"text-align: left;\">SchuF Speciality Valves India Pvt Ltd </td><td style = \"text-align: left;\">Process Project Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">118</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">119</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Ajay</td><td style = \"text-align: left;\">SHV Energy</td><td style = \"text-align: left;\">Executive Trainee - Operations </td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Thiyagarajar College of Engineering</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Coimbatore</td><td style = \"text-align: right;\">119</td><td style = \"text-align: left;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">120</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Thirumalai</td><td style = \"text-align: left;\">Wipro Limited</td><td style = \"text-align: left;\">Project Engineer</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Hindustan College of Technology</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">120</td><td style = \"text-align: left;\">1</td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|ccccc}\n",
       "\t& source & Target & Company & Position & \\\\\n",
       "\t\\hline\n",
       "\t& String15 & String31 & String & String & \\\\\n",
       "\t\\hline\n",
       "\t1 & Gowtham & Snega & Cognizant & Student Manager & $\\dots$ \\\\\n",
       "\t2 & Gowtham & Barath & Trimble Inc. & Working Student (Automotive GNSS / INS ) & $\\dots$ \\\\\n",
       "\t3 & Gowtham & Maria & Amazon FC Graben GmbH & Automation Engineer & $\\dots$ \\\\\n",
       "\t4 & Gowtham & Vignesh & Amazon & Digital Associate & $\\dots$ \\\\\n",
       "\t5 & Gowtham & Iqjas & DiFACTO Robotics and Automation & Robotics Engineer & $\\dots$ \\\\\n",
       "\t6 & Gowtham & Karthik & Stealth Mode Startup - Data and Analytics & Founder & $\\dots$ \\\\\n",
       "\t7 & Gowtham & Venkatesh & Curl & Senior Software Engineer - L3 & $\\dots$ \\\\\n",
       "\t8 & Gowtham & Suseendrababu & Wells Fargo & Vice President  - Systems Operations Manager & $\\dots$ \\\\\n",
       "\t9 & Gowtham & Harishma & ST JOHNS RIVER-TO-SEA LOOP ALLIANCE & Data Analyst Intern & $\\dots$ \\\\\n",
       "\t10 & Gowtham & Tamilmani & Cognizant & Associate - Projects & $\\dots$ \\\\\n",
       "\t11 & Gowtham & Meril & Higher Education Forum & Content Team & $\\dots$ \\\\\n",
       "\t12 & Gowtham & Lakshman & Hitachi Energy & Intern & $\\dots$ \\\\\n",
       "\t13 & Gowtham & Santhosh & Ford Motor Company & Data Strategy Analyst & $\\dots$ \\\\\n",
       "\t14 & Gowtham & Suhaina & Netcracker Technology & Associate Business Analyst & $\\dots$ \\\\\n",
       "\t15 & Gowtham & Kiran & DSCPU & Campus hero  & $\\dots$ \\\\\n",
       "\t16 & Gowtham & Debasish & Biorad Medisys Pvt Ltd & G.M. R\\&D & $\\dots$ \\\\\n",
       "\t17 & Gowtham & Pradeep & Self-employed & Oracle EBS Techno Functional Consultant & $\\dots$ \\\\\n",
       "\t18 & Gowtham & Subhendra Kr. & Naresh i Technologies & Oracle Database Administrator & $\\dots$ \\\\\n",
       "\t19 & Gowtham & vasanth & MoEVing & Operations Manager & $\\dots$ \\\\\n",
       "\t20 & Gowtham & Barath & Amazon & Digital Associate & $\\dots$ \\\\\n",
       "\t21 & Gowtham & Senthilmani & SAM ROBOTICS \\& AUTOMATION & Managing Director & $\\dots$ \\\\\n",
       "\t22 & Gowtham & Sakthivel  & TRAPO & Project Intern & $\\dots$ \\\\\n",
       "\t23 & Gowtham & Steve & Kaiko & Research Analyst  & $\\dots$ \\\\\n",
       "\t24 & Gowtham & Tarun & Plant Lipids Private Limited & Purchase Officer & $\\dots$ \\\\\n",
       "\t25 & Gowtham & Surya & University of Michigan-Dearborn & Graduate Student Research Assistant & $\\dots$ \\\\\n",
       "\t26 & Gowtham & Annamalai & Hitachi Energy & Intern & $\\dots$ \\\\\n",
       "\t27 & Gowtham & Bani Immanuel & i-exceed  & Scrum Master - Trainee & $\\dots$ \\\\\n",
       "\t28 & Gowtham & Indrajith & MulticoreWare Inc & Senior Software Engineer & $\\dots$ \\\\\n",
       "\t29 & Gowtham & Prakash & PSG College of Technology & Robotics Developer & $\\dots$ \\\\\n",
       "\t30 & Gowtham & Vijaya rajan & AROBOTNX Solutions Pvt Ltd & Sr. Engineer - Projects & $\\dots$ \\\\\n",
       "\t$\\dots$ & $\\dots$ & $\\dots$ & $\\dots$ & $\\dots$ &  \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m120×10 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m source   \u001b[0m\u001b[1m Target         \u001b[0m\u001b[1m Company                           \u001b[0m\u001b[1m Position  \u001b[0m ⋯\n",
       "     │\u001b[90m String15 \u001b[0m\u001b[90m String31       \u001b[0m\u001b[90m String                            \u001b[0m\u001b[90m String    \u001b[0m ⋯\n",
       "─────┼──────────────────────────────────────────────────────────────────────────\n",
       "   1 │ Gowtham   Snega           Cognizant                          Student Ma ⋯\n",
       "   2 │ Gowtham   Barath          Trimble Inc.                       Working St\n",
       "   3 │ Gowtham   Maria           Amazon FC Graben GmbH              Automation\n",
       "   4 │ Gowtham   Vignesh         Amazon                             Digital As\n",
       "   5 │ Gowtham   Iqjas           DiFACTO Robotics and Automation    Robotics E ⋯\n",
       "   6 │ Gowtham   Karthik         Stealth Mode Startup - Data and …  Founder\n",
       "   7 │ Gowtham   Venkatesh       Curl                               Senior Sof\n",
       "   8 │ Gowtham   Suseendrababu   Wells Fargo                        Vice Presi\n",
       "   9 │ Gowtham   Harishma        ST JOHNS RIVER-TO-SEA LOOP ALLIA…  Data Analy ⋯\n",
       "  10 │ Gowtham   Tamilmani       Cognizant                          Associate\n",
       "  11 │ Gowtham   Meril           Higher Education Forum             Content Te\n",
       "  ⋮  │    ⋮            ⋮                         ⋮                             ⋱\n",
       " 111 │ Snega     Karthik         Stealth Mode Startup - Data and …  Founder\n",
       " 112 │ Snega     Venkatesh       Curl                               Senior Sof ⋯\n",
       " 113 │ Snega     Suseendrababu   Wells Fargo                        Vice Presi\n",
       " 114 │ Snega     Harishma        ST JOHNS RIVER-TO-SEA LOOP ALLIA…  Data Analy\n",
       " 115 │ Snega     Arjun           Tata Consultancy Services          System Eng\n",
       " 116 │ Snega     Rithika         ZF Group                           Supply Cha ⋯\n",
       " 117 │ Snega     Sruthi          Curl                               Quality An\n",
       " 118 │ Snega     Kaarthicsudhan  SchuF Speciality Valves India Pv…  Process Pr\n",
       " 119 │ Snega     Ajay            SHV Energy                         Executive\n",
       " 120 │ Snega     Thirumalai      Wipro Limited                      Project En ⋯\n",
       "\u001b[36m                                                   7 columns and 99 rows omitted\u001b[0m"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "594c18ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>21×10 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">source</th><th style = \"text-align: left;\">Target</th><th style = \"text-align: left;\">Company</th><th style = \"text-align: left;\">Position</th><th style = \"text-align: left;\">Connected On</th><th style = \"text-align: left;\">University</th><th style = \"text-align: left;\">Skills</th><th style = \"text-align: left;\">City</th><th style = \"text-align: left;\">Index</th><th style = \"text-align: left;\">ties</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Any\" style = \"text-align: left;\">Any</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Student Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Chennai</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Maria</td><td style = \"text-align: left;\">Amazon FC Graben GmbH</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">3</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Tamilmani</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Associate - Projects</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">10</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Meril</td><td style = \"text-align: left;\">Higher Education Forum</td><td style = \"text-align: left;\">Content Team</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Delhi</td><td style = \"text-align: right;\">11</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Kiran</td><td style = \"text-align: left;\">DSCPU</td><td style = \"text-align: left;\">Campus hero </td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Chennai</td><td style = \"text-align: right;\">15</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Subhendra Kr.</td><td style = \"text-align: left;\">Naresh i Technologies</td><td style = \"text-align: left;\">Oracle Database Administrator</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Mumbai</td><td style = \"text-align: right;\">18</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Prakash</td><td style = \"text-align: left;\">PSG College of Technology</td><td style = \"text-align: left;\">Robotics Developer</td><td style = \"text-align: right;\">2021</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">29</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Selventhiran</td><td style = \"text-align: left;\">MulticoreWare Inc</td><td style = \"text-align: left;\">Assoc Technical Project Manager</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">34</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Aashika</td><td style = \"text-align: left;\">Volkswagen Infotainment GmbH</td><td style = \"text-align: left;\">Werkstudentin</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Delhi</td><td style = \"text-align: right;\">37</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Sahaanah</td><td style = \"text-align: left;\">Paytm</td><td style = \"text-align: left;\">Student Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">39</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Sahaanah</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Student Manager</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Chennai</td><td style = \"text-align: right;\">40</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Sahaanah</td><td style = \"text-align: left;\">Tamilmani</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Associate - Projects</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">57</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Sahaanah</td><td style = \"text-align: left;\">Meril</td><td style = \"text-align: left;\">Higher Education Forum</td><td style = \"text-align: left;\">Content Team</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Delhi</td><td style = \"text-align: right;\">58</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">14</td><td style = \"text-align: left;\">Sahaanah</td><td style = \"text-align: left;\">Kiran</td><td style = \"text-align: left;\">DSCPU</td><td style = \"text-align: left;\">Campus hero </td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Chennai</td><td style = \"text-align: right;\">62</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">15</td><td style = \"text-align: left;\">Sahaanah</td><td style = \"text-align: left;\">Subhendra Kr.</td><td style = \"text-align: left;\">Naresh i Technologies</td><td style = \"text-align: left;\">Oracle Database Administrator</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Mumbai</td><td style = \"text-align: right;\">65</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">16</td><td style = \"text-align: left;\">Sahaanah</td><td style = \"text-align: left;\">Bharani</td><td style = \"text-align: left;\">Supersourcing</td><td style = \"text-align: left;\">Product Designer</td><td style = \"text-align: right;\">2021</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">77</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">17</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Sahaanah</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Student Manager</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Chennai</td><td style = \"text-align: right;\">82</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">18</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Selventhiran</td><td style = \"text-align: left;\">MulticoreWare Inc</td><td style = \"text-align: left;\">Assoc Technical Project Manager</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">92</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">19</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Aashika</td><td style = \"text-align: left;\">Volkswagen Infotainment GmbH</td><td style = \"text-align: left;\">Werkstudentin</td><td style = \"text-align: right;\">2020</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Delhi</td><td style = \"text-align: right;\">95</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">20</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Bharani</td><td style = \"text-align: left;\">Supersourcing</td><td style = \"text-align: left;\">Product Designer</td><td style = \"text-align: right;\">2021</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">106</td><td style = \"text-align: left;\">2</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">21</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Maria</td><td style = \"text-align: left;\">Amazon FC Graben GmbH</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td><td style = \"text-align: right;\">108</td><td style = \"text-align: left;\">2</td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|ccccc}\n",
       "\t& source & Target & Company & Position & \\\\\n",
       "\t\\hline\n",
       "\t& String15 & String31 & String & String & \\\\\n",
       "\t\\hline\n",
       "\t1 & Gowtham & Snega & Cognizant & Student Manager & $\\dots$ \\\\\n",
       "\t2 & Gowtham & Maria & Amazon FC Graben GmbH & Automation Engineer & $\\dots$ \\\\\n",
       "\t3 & Gowtham & Tamilmani & Cognizant & Associate - Projects & $\\dots$ \\\\\n",
       "\t4 & Gowtham & Meril & Higher Education Forum & Content Team & $\\dots$ \\\\\n",
       "\t5 & Gowtham & Kiran & DSCPU & Campus hero  & $\\dots$ \\\\\n",
       "\t6 & Gowtham & Subhendra Kr. & Naresh i Technologies & Oracle Database Administrator & $\\dots$ \\\\\n",
       "\t7 & Gowtham & Prakash & PSG College of Technology & Robotics Developer & $\\dots$ \\\\\n",
       "\t8 & Gowtham & Selventhiran & MulticoreWare Inc & Assoc Technical Project Manager & $\\dots$ \\\\\n",
       "\t9 & Gowtham & Aashika & Volkswagen Infotainment GmbH & Werkstudentin & $\\dots$ \\\\\n",
       "\t10 & Gowtham & Sahaanah & Paytm & Student Manager & $\\dots$ \\\\\n",
       "\t11 & Sahaanah & Gowtham & Cognizant & Student Manager & $\\dots$ \\\\\n",
       "\t12 & Sahaanah & Tamilmani & Cognizant & Associate - Projects & $\\dots$ \\\\\n",
       "\t13 & Sahaanah & Meril & Higher Education Forum & Content Team & $\\dots$ \\\\\n",
       "\t14 & Sahaanah & Kiran & DSCPU & Campus hero  & $\\dots$ \\\\\n",
       "\t15 & Sahaanah & Subhendra Kr. & Naresh i Technologies & Oracle Database Administrator & $\\dots$ \\\\\n",
       "\t16 & Sahaanah & Bharani & Supersourcing & Product Designer & $\\dots$ \\\\\n",
       "\t17 & Snega & Sahaanah & Cognizant & Student Manager & $\\dots$ \\\\\n",
       "\t18 & Snega & Selventhiran & MulticoreWare Inc & Assoc Technical Project Manager & $\\dots$ \\\\\n",
       "\t19 & Snega & Aashika & Volkswagen Infotainment GmbH & Werkstudentin & $\\dots$ \\\\\n",
       "\t20 & Snega & Bharani & Supersourcing & Product Designer & $\\dots$ \\\\\n",
       "\t21 & Snega & Maria & Amazon FC Graben GmbH & Automation Engineer & $\\dots$ \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m21×10 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m source   \u001b[0m\u001b[1m Target        \u001b[0m\u001b[1m Company                      \u001b[0m\u001b[1m Position        \u001b[0m ⋯\n",
       "     │\u001b[90m String15 \u001b[0m\u001b[90m String31      \u001b[0m\u001b[90m String                       \u001b[0m\u001b[90m String          \u001b[0m ⋯\n",
       "─────┼──────────────────────────────────────────────────────────────────────────\n",
       "   1 │ Gowtham   Snega          Cognizant                     Student Manager  ⋯\n",
       "   2 │ Gowtham   Maria          Amazon FC Graben GmbH         Automation Engin\n",
       "   3 │ Gowtham   Tamilmani      Cognizant                     Associate - Proj\n",
       "   4 │ Gowtham   Meril          Higher Education Forum        Content Team\n",
       "   5 │ Gowtham   Kiran          DSCPU                         Campus hero      ⋯\n",
       "   6 │ Gowtham   Subhendra Kr.  Naresh i Technologies         Oracle Database\n",
       "   7 │ Gowtham   Prakash        PSG College of Technology     Robotics Develop\n",
       "   8 │ Gowtham   Selventhiran   MulticoreWare Inc             Assoc Technical\n",
       "   9 │ Gowtham   Aashika        Volkswagen Infotainment GmbH  Werkstudentin    ⋯\n",
       "  10 │ Gowtham   Sahaanah       Paytm                         Student Manager\n",
       "  11 │ Sahaanah  Gowtham        Cognizant                     Student Manager\n",
       "  12 │ Sahaanah  Tamilmani      Cognizant                     Associate - Proj\n",
       "  13 │ Sahaanah  Meril          Higher Education Forum        Content Team     ⋯\n",
       "  14 │ Sahaanah  Kiran          DSCPU                         Campus hero\n",
       "  15 │ Sahaanah  Subhendra Kr.  Naresh i Technologies         Oracle Database\n",
       "  16 │ Sahaanah  Bharani        Supersourcing                 Product Designer\n",
       "  17 │ Snega     Sahaanah       Cognizant                     Student Manager  ⋯\n",
       "  18 │ Snega     Selventhiran   MulticoreWare Inc             Assoc Technical\n",
       "  19 │ Snega     Aashika        Volkswagen Infotainment GmbH  Werkstudentin\n",
       "  20 │ Snega     Bharani        Supersourcing                 Product Designer\n",
       "  21 │ Snega     Maria          Amazon FC Graben GmbH         Automation Engin ⋯\n",
       "\u001b[36m                                                               7 columns omitted\u001b[0m"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "strongties = filter(row -> row[\"ties\"] in [2], f)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94d4cd90",
   "metadata": {},
   "source": [
    "## Overall plot for Strong and Weak ties"
   ]
  },
  {
   "attachments": {
    "strong%20and%20weak%20ties.PNG": {
     "image/png": "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8vzzz4u/Xbt27qOPPiqFhilaWFZTTFazbMMwDMMwojGhWmOefPJJEXPbbbddKcS5jz/+WMJGjRol/tdff929917yJWwKVFqlYip0X2qUIa0Wql9++aW4IbiTRCooUvwVfa+rhmVX45YCwzAMwzDiMaFaByj2yKqrrir+X3/9VfwzzjijW3fddcX9yy+/uEUWWcR17NjRDRo0yB111FGuf//+EvfcHke5ft2mdxM339X179bDdWzf3q209LISB77++msRkx06dJDfN998U8JRzxJLLOE6d+4s5c4+++xu6tSp5XalMS1Uf/rpJykL7k8//VTqIGjrmWeeKe5vv/1W/BcceLiIP7g32WQTt8ACC0gb8QvRjnCUt8UWW0g+sN9++7npp5/etf99G2eYYQZ3//33S/gJJ5zg+vXq7bYcMky25fTTT5fwojChahiGYRj1w4RqHRg9erSIOqyu/vbbb65r164i+gjieOkfv/Ajz4QJE+SyOvxYPXx696ZL9X169HS3XTrBDR8+XPxvvfWW+/nnn0XUzTHHHHKZfs4555S84PDDD5d0jz/+uLShS5cubocddsi0oorbBChU2aaFFlpIytcg/Pjjjxf3N998I/7T1tpS2g837KKLLnJjx44t+2+++WY3dOhQcUNsc8X5gAMOcPfdd58IVohScNhhh0kc+mCnnXaS/iwStBNC1TAMwzCM2mNCtQ588sknIq623HJL98EHH4j7pJNOKsVOE6qhe0Z79uwpvxBPL116nbgvu+wyyUcheMMNN5TvF7366qulPoq9Z5991p166qnihsDcd9993Ycffij5s9yjqoUqLvdjhRbu2267TcoiCAsJVQD33HPPLW4Ia/j32GMP8d91113ih+gGEKCff/65u+OOO1zv3r1FhINxe+4t6d6+pnm9RWFC1TAMwzDqhwnVOtGvXz8Riri8DaGFy+cEfgrSKMM7TSHi4L7ppptKOZvyXnfddbJaCjcuqWP1kXb55ZeL6Dv66KPLZcFWXHHFcv4k41P/FKpoB8qEG6J1ypQpEg8Qdtxxx4kbQhP+v+09VvxwL7zwwuIG8ENEA6ycws/V4V69eol/gw02cIsttlhZqB687SgJ/+qrr8RfNPZqKsMwDMOoH21SqELYwHDPJJl55pnlMjm45557JP79998X/4MPPuhmnXVWcQPErbXWWiVfPg45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"
    }
   },
   "cell_type": "markdown",
   "id": "4a7e375c",
   "metadata": {},
   "source": [
    "![strong%20and%20weak%20ties.PNG](attachment:strong%20and%20weak%20ties.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3407f537",
   "metadata": {},
   "source": [
    "Green edges - Strong ties \n",
    "\n",
    "Red edges - Weak ties"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "74dbcb52",
   "metadata": {},
   "source": [
    "## Plot for Strong Ties"
   ]
  },
  {
   "attachments": {
    "strong%20ties.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "94604c4e",
   "metadata": {},
   "source": [
    "![strong%20ties.PNG](attachment:strong%20ties.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0d16f24",
   "metadata": {},
   "source": [
    "## Plot for Weak Ties"
   ]
  },
  {
   "attachments": {
    "weak%20ties.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "1ea351cf",
   "metadata": {},
   "source": [
    "![weak%20ties.PNG](attachment:weak%20ties.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a40763a1",
   "metadata": {},
   "source": [
    "## Strong ties for Gowtham "
   ]
  },
  {
   "attachments": {
    "Gowtham%20strong%20ties.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "fb4f883d",
   "metadata": {},
   "source": [
    "![Gowtham%20strong%20ties.png](attachment:Gowtham%20strong%20ties.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d6c5348",
   "metadata": {},
   "source": [
    "## Strong ties for Snega "
   ]
  },
  {
   "attachments": {
    "snega%20strong%20ties.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "efe75f4a",
   "metadata": {},
   "source": [
    "![snega%20strong%20ties.png](attachment:snega%20strong%20ties.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6e01bcf",
   "metadata": {},
   "source": [
    "## Strong ties for Sahaanah "
   ]
  },
  {
   "attachments": {
    "sahaanah%20strong%20ties.png": {
     "image/png": "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snnSWk9wW+3ZS+3WDitlzqd98pOfHF784hfH4ciRI2HZsmWL081QtBa5nVhWE+Cl42H2+PHad2Mm7JzaG6X2t6787RhBfehDHxrWrl0btyPaeuzYic8cob322muj1NaDSCxCi8yuWLEizpubm4uR1AMHDkQJ3b17d4yywuTkZJxmeNKTnhTfpzh48GCMyPJ+szBv586dYe/evfE4U1Qm+2PfgmnW5ZXleeX2i3YqgmmbnYf3xteitLq+MaZ3WGaNqUO96GszaR2Vlgxaoaz5tD/zMz8T/uIv/iIOsGnTppOmkTYysTZv3hzOO++88JWvfCXORyJf+cpXhi996UvhjW96U3joqWeH27701bB26crw0kt/LFz2xKeHuSOzNUG9MTz1qU+NUVVEOcsHPvCBOOzYsSM873nPCz/90z8d9/m///f/Dtu3bw9/93d/t7BmiAL8kpe8JJxyyinhWc96VhRSjuPo0aPh5S9/efiv//qv8IY3vCFs3bo1/MM//ENMHUCkeU8bN86neLAN6yPGpCukUnro0KEorGvWrInz9+3bF8sHiTJlsj3TgmnWJQ8YkOVBRXjbbaILod055bxZY6qKZdaYHBDWvOgraH5WWuutb05QhdSDlMc//vExBeC5z31ulMlHPvKRUWDhne98ZxTVT33ipjA1NRUuecrTwimbtoaHnvfQcOt/3hrOPuWMcNPHPh6jll/4wheiSGb54he/GAfKXL58efjzP//zKM68EoFFXu++++4Y9URIkdQXvOAF4dZbb43SKv76r/86XHbZZeGrX/1qWLJkSbj88svDfffdF+Xz7//+78M//uM/RjFFUonuMkhwBbKKdBNBRoABMdV2SC7bcXyQRpc5VrbTslbSIIwxplMss8bkgJiqyaaUNBcypd0Ug1ElK7Uf+e6XSim1n/zkJ6Nsvvvd7w7XXHNNnPe1r30tvsKFF14YPvShD4U777wzTv/Gb/xGFNHnP//5UXCL8sQnPjG86lWviuNEcD/zmc+EW265JU7/x3/8RxRJKop94xvfCO9617vCK17xipOiqkAqAdLK8cL73//+GH1VxFSkFceyyxBU2p5lAEVmgcgt8xWVJSIrSIMoA0RY59NZWvsuuUUDY6qNZdaYDIvpBQ2islnJFU4xaA3l0yISZcunhdtuuy1WniLa+exnP3th7gke+9jHxlcqd8ET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"
    }
   },
   "cell_type": "markdown",
   "id": "1c561a94",
   "metadata": {},
   "source": [
    "![sahaanah%20strong%20ties.png](attachment:sahaanah%20strong%20ties.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c9605a8",
   "metadata": {},
   "source": [
    "## Proportion of Strong and Weak ties"
   ]
  },
  {
   "attachments": {
    "strong%20&%20weak%20color.PNG": {
     "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAACOCAYAAADdCNhSAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAkxSURBVHhe7d0xbxtHGgZg/SoBru63qNEvcHPF1cI5gGMgSe8uMKDiHANGcqXbFEKCSwIEQXwpDm4M4+Qu1+ztcLnk7nJIDiWKHPN7XuBBbGm5u46078zOCtTZx48fm96bN28Wfwbg9Ch9gECUPkAgSh8gEKUPEMhOpf/D2/fNl9/91jx5+VPz93/8C4CKpG7+qu3oH//4kO3wpLj0U+GnHX72zc/Ns29/b579898A1KTt5tTRqavXFX9x6c9m+K9+ab7+/n3z9v2fzX/++z8AKpK6OXV06uo04891eXHpP2lHj8/bUSTtVERE6kzq6NTVqbNzXV5c+mm9KN0+pNFERETqTOro1NWps3NdrvRFRE4oSl9EJFCUvohIoCh9EZFAUfoiIoGi9EVEAqWy0v+1efrorDl79LT9k4iI7DtHLP3XzeXZWXP5ev7XWZS+iMhD5nil/+vT5tFK6YuIyDS3t7fzP5Vl0/ZKX0Sk4rx69ap5/Phx8+7du/lHNufFixez7dcV/1FK//XlWXPWFv7IvP1nn5su78wHiMW2meWflX0aTUTkBJLKPpV4SfGnwr+8vJz9d12qm+mvlP58u0dP+4/M1/0XL8w9B3jd/sOVvoicRkqKv6TwUyov/WnBz/P6sp3NP2q6cSD3QFhE5LSyqfhLCz+l7tJfs8344/OBYTEIiIicZnLFv0vhp3wSpT9aqx8Yvna0pr8ySoiInEaGxf/8+fOdCj/l05zpb0o/UIzW+EVETid98e9a+Cl1l36/dLPrzH205i8icnpJxZ9+nHPXHK/05w9glz+V02Vc+m1mBT4dHNrXLrZZ/UmdlX2IiMgsRyz9NvNCH67DZwt7uN3csue7wWP0eYUvIpLNcUtfREQOGqUvIhIoSl9EJFCUvohIoCh9EZFA2VvpP/nm5+bzb39v3r7/c75rERGpLamjU1enzs51eXHpf/ndb82TV780X3//frbTNJoAUI/UzamjU1d/1XZ2rsuLS/+Ht+2OXv7UfNaOHs/aUSTdPgBQkbabU0enrv7xjw/ZLi8u/SQV/2zG3+4wrRcBUI/UzWmGv67wk51KH4BPm9IHCETpAwSi9AECUfoAgSh9gECUPkAgSh8gEKUPEIjSBwhE6QMEovQBAlH6AIEofYBAlD5AIHst/Q9//eJB5Y4JQDmlDxCI0gcIROkDBKL0AQIJXfo3V+fN+dVN9nPA8dze3jRX52fN2cX16sfOehfN9e3t6HVJuq6X27TOr5qbzHZDq/vunTdXN8vX3t5eNxeDz+f64/b6ov3c+NyuL9rtC87jEEKW/vALrPShPtPiXJTtYBCYFemkXLvCH75ufq1vKdx+/xfXm7bp9tV3xu3NVXM+ec26/fSv3bT/QwlX+t03ypLSh7pMyzWZlnm3XVewo+2ur1fKPVfOU0WlP9tPZgY/HYgGfx+a/RsqmO2HKv3hN1PuGws4vly55gqzv4bXlWwvNzhMdcccL+VMze4+JucwO6/58XPLOkPdeWw+xiGEXdNX+lCnbMFnCrWkzJOimX5J6a+Z6XeTyII7hUo6R+krfahKX6TDj+Vm9d1S7fqZdS+3NDTVDSppfwNr7iz6cxsOFMMZ/yal2z0kpa/0oRqbrstF8S+KeXvh92W+63Xez9zX3V3055Bm9sM7gPHgsXrnkLuLOTSlr/ShGv11OV0m6ct0+PHcx4a6O4G7X+Mly0fDHpkuEeXuMGbnrPTL5Y55V0of6pMr/cXsOrMski3WxWz8fg9N+3PZtBwznLlPl2668xifg9LfUe6Yd6X0oT6567KbQeev1W62vyzWReHvoVi3lf50Zj99FpEbwCzv7Ch3zLtS+lCn1fLcNtMfF2/JWn+JTYNNMj3Pkpn+dJtjUPpKH6qSmw135Z5f0++v4X5w2HZNL2bwg2PcXF2Ml2G23DHklmmya/qDbWrpHKWv9KEqXZmvztb7kh/Krv2vNf8Jm2zpd4PK0Lpu6O8Acg+Qx+eYf9aQe90hhS19oE59KR+7HPctdwdzDEofqE4tBbkvNa0sKH2gOoslmCM/9NyX2QPmSgaxvZY+AHVT+gCBKH2AQJQ+QCBKHyAQpQ8QyF5L/y8v//agcscEoJzSBwhE6QMEovQBAlH6AIGEK/2Vt1A9oTd1glOx7b130nU8ffOy/i2PR9f30IZrfXG8ldeNfwnK9O2bc2+glntr6JN9751cUe9T7pi76Ap/+cVYfKEVP1Rl7XvqD8q59B0rS97Hvmyb7tj9cXPvq79uP/1ra3i76Filf329Uu6bfiECcHjTcu11vwpxqbT0S2bZRaU/64rMDH5wNzL9+9BJvp9+rqj3KXfM++q/2KXfQMDDypXrcCBYNyjklJR50h1zvJQzNbv7mJT2rMjnJb/u7qTXncvmYxyC0jfTh6psmxHvUvrTJd11ikp/zUy/G4gK7hR2OO+HFL70S78pgMPoizT3uaS0PHe5ix//btu5ycAzPe5woBjO+Dcp3e4hhS79/gt97JEX6JQUenHpb1lu2aQfMKavX368k2b2wzuA8eCxeuew7S7mEMKW/uyBS/uFUfhQj77Q97FMsumhaomSO4XhuUyXiHKrCLNBQemXyx1zV8uR+vgPVICxfZV+V8D3e1bXH2fTwDGcuU+XbrquGfeM0t9R7pi7WBT+kf+nA3lFhV6yzT2WdnrbSn86s58+i+hfPxx4LO/sKHfMXXRLOvf7RgAe1j4e5N53aSfp7xbWHWd6niUz/ek2xxCm9EvW54Dj2zYb3lb62671xQx+cIybq4vxMsyWVYHcMk12TX+wTclgdQjhSn/5ZH3KHQDUYNvSzNbS37Keny/9tqAnnXCX/Xfn3u9j8hB33kH3ec6wD+Ee5AJ160v52OW4b9vuYA5F6QPVqaUg96WWpZ1E6QPVWSzBHPmh577MHixXMojttfQBqJvSBwhE6QMEovQBAlH6AIEofYBAlD5AIEofIBClDxCI0gcIROkDBKL0AQJR+gCBKH2AQJQ+QCBKHyAQpQ8QiNIHCETpAwSi9AECUfoAgSh9gECUPkAgSh8gEKUPEIjSBwhE6QMEovQBAlH6AIEofYBAlD5AIEofIBClDxCI0gcIROkDBKL0AQJR+gCBKH2AQJQ+QCBKHyAQpQ8Qxsfm/yYHh/TqnNrCAAAAAElFTkSuQmCC"
    }
   },
   "cell_type": "markdown",
   "id": "c322f84c",
   "metadata": {},
   "source": [
    "![strong%20&%20weak%20color.PNG](attachment:strong%20&%20weak%20color.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "206367eb",
   "metadata": {},
   "source": [
    "## Inferences: "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "977acb04",
   "metadata": {},
   "source": [
    "From the above plots it can be observed that the proportion of weak ties is greater than the number of strong ties. This means that the overall network is not closely knit with less number of clusters with mutual friends.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8d8b3880",
   "metadata": {},
   "source": [
    "## Triadic Closure "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1fb6b6f",
   "metadata": {},
   "source": [
    " How prevalent is triadic closure in LinkedIn networks, and does it contributes to the formation of stronger ties?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6ccdcf82",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>65×2 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">40 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Node</th><th style = \"text-align: left;\">Triangle_Count</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: right;\">38</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Barath</td><td style = \"text-align: right;\">3</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Maria</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: right;\">3</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: right;\">3</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: right;\">3</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: right;\">3</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Tamilmani</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Meril</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Lakshman</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Santhosh</td><td style = \"text-align: right;\">1</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">54</td><td style = \"text-align: left;\">Dharani</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">55</td><td style = \"text-align: left;\">Prabhakaran</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">56</td><td style = \"text-align: left;\">Saujanya</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">57</td><td style = \"text-align: left;\">Sai Preethi</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">58</td><td style = \"text-align: left;\">Deepasri</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">59</td><td style = \"text-align: left;\">Vinod</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">60</td><td style = \"text-align: left;\">Bharani</td><td style = \"text-align: right;\">1</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">61</td><td style = \"text-align: left;\">Naveen</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">62</td><td style = \"text-align: left;\">Nigitha</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">63</td><td style = \"text-align: left;\">Nitheesh Kumar</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">64</td><td style = \"text-align: left;\">Sashwatha</td><td style = \"text-align: right;\">0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">65</td><td style = \"text-align: left;\">Rohit</td><td style = \"text-align: right;\">0</td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|cc}\n",
       "\t& Node & Triangle\\_Count\\\\\n",
       "\t\\hline\n",
       "\t& String31 & Int64\\\\\n",
       "\t\\hline\n",
       "\t1 & Snega & 38 \\\\\n",
       "\t2 & Barath & 3 \\\\\n",
       "\t3 & Maria & 1 \\\\\n",
       "\t4 & Vignesh & 1 \\\\\n",
       "\t5 & Iqjas & 1 \\\\\n",
       "\t6 & Karthik & 3 \\\\\n",
       "\t7 & Venkatesh & 3 \\\\\n",
       "\t8 & Suseendrababu & 3 \\\\\n",
       "\t9 & Harishma & 3 \\\\\n",
       "\t10 & Tamilmani & 1 \\\\\n",
       "\t11 & Meril & 1 \\\\\n",
       "\t12 & Lakshman & 1 \\\\\n",
       "\t13 & Santhosh & 1 \\\\\n",
       "\t14 & Suhaina & 1 \\\\\n",
       "\t15 & Kiran & 1 \\\\\n",
       "\t16 & Debasish & 1 \\\\\n",
       "\t17 & Pradeep & 1 \\\\\n",
       "\t18 & Subhendra Kr. & 1 \\\\\n",
       "\t19 & vasanth & 1 \\\\\n",
       "\t20 & Senthilmani & 1 \\\\\n",
       "\t21 & Sakthivel  & 1 \\\\\n",
       "\t22 & Steve & 1 \\\\\n",
       "\t23 & Tarun & 0 \\\\\n",
       "\t24 & Surya & 0 \\\\\n",
       "\t25 & Annamalai & 0 \\\\\n",
       "\t26 & Bani Immanuel & 0 \\\\\n",
       "\t27 & Indrajith & 0 \\\\\n",
       "\t28 & Prakash & 0 \\\\\n",
       "\t29 & Vijaya rajan & 1 \\\\\n",
       "\t30 & Ashin & 1 \\\\\n",
       "\t$\\dots$ & $\\dots$ & $\\dots$ \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m65×2 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m Node           \u001b[0m\u001b[1m Triangle_Count \u001b[0m\n",
       "     │\u001b[90m String31       \u001b[0m\u001b[90m Int64          \u001b[0m\n",
       "─────┼────────────────────────────────\n",
       "   1 │ Snega                       38\n",
       "   2 │ Barath                       3\n",
       "   3 │ Maria                        1\n",
       "   4 │ Vignesh                      1\n",
       "   5 │ Iqjas                        1\n",
       "   6 │ Karthik                      3\n",
       "   7 │ Venkatesh                    3\n",
       "   8 │ Suseendrababu                3\n",
       "   9 │ Harishma                     3\n",
       "  10 │ Tamilmani                    1\n",
       "  11 │ Meril                        1\n",
       "  ⋮  │       ⋮               ⋮\n",
       "  56 │ Saujanya                     1\n",
       "  57 │ Sai Preethi                  1\n",
       "  58 │ Deepasri                     1\n",
       "  59 │ Vinod                        1\n",
       "  60 │ Bharani                      1\n",
       "  61 │ Naveen                       0\n",
       "  62 │ Nigitha                      0\n",
       "  63 │ Nitheesh Kumar               0\n",
       "  64 │ Sashwatha                    0\n",
       "  65 │ Rohit                        0\n",
       "\u001b[36m                       44 rows omitted\u001b[0m"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get the triangle counts for each node\n",
    "triangle_counts = triangles(g)\n",
    "\n",
    "# Create a DataFrame with node names and triangle counts\n",
    "result_df = DataFrame(Node = h, Triangle_Count = triangle_counts)\n",
    "\n",
    "# Display the result DataFrame\n",
    "display(result_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c44b9193",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>65×2 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">40 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">Node</th><th style = \"text-align: left;\">LocalClusteringCoefficient</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: right;\">0.0512821</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Barath</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Maria</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Tamilmani</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Meril</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Lakshman</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Santhosh</td><td style = \"text-align: right;\">1.0</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">54</td><td style = \"text-align: left;\">Dharani</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">55</td><td style = \"text-align: left;\">Prabhakaran</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">56</td><td style = \"text-align: left;\">Saujanya</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">57</td><td style = \"text-align: left;\">Sai Preethi</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">58</td><td style = \"text-align: left;\">Deepasri</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">59</td><td style = \"text-align: left;\">Vinod</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">60</td><td style = \"text-align: left;\">Bharani</td><td style = \"text-align: right;\">1.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">61</td><td style = \"text-align: left;\">Naveen</td><td style = \"text-align: right;\">0.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">62</td><td style = \"text-align: left;\">Nigitha</td><td style = \"text-align: right;\">0.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">63</td><td style = \"text-align: left;\">Nitheesh Kumar</td><td style = \"text-align: right;\">0.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">64</td><td style = \"text-align: left;\">Sashwatha</td><td style = \"text-align: right;\">0.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">65</td><td style = \"text-align: left;\">Rohit</td><td style = \"text-align: right;\">0.0</td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|cc}\n",
       "\t& Node & LocalClusteringCoefficient\\\\\n",
       "\t\\hline\n",
       "\t& String31 & Float64\\\\\n",
       "\t\\hline\n",
       "\t1 & Snega & 0.0512821 \\\\\n",
       "\t2 & Barath & 1.0 \\\\\n",
       "\t3 & Maria & 1.0 \\\\\n",
       "\t4 & Vignesh & 1.0 \\\\\n",
       "\t5 & Iqjas & 1.0 \\\\\n",
       "\t6 & Karthik & 1.0 \\\\\n",
       "\t7 & Venkatesh & 1.0 \\\\\n",
       "\t8 & Suseendrababu & 1.0 \\\\\n",
       "\t9 & Harishma & 1.0 \\\\\n",
       "\t10 & Tamilmani & 1.0 \\\\\n",
       "\t11 & Meril & 1.0 \\\\\n",
       "\t12 & Lakshman & 1.0 \\\\\n",
       "\t13 & Santhosh & 1.0 \\\\\n",
       "\t14 & Suhaina & 1.0 \\\\\n",
       "\t15 & Kiran & 1.0 \\\\\n",
       "\t16 & Debasish & 1.0 \\\\\n",
       "\t17 & Pradeep & 1.0 \\\\\n",
       "\t18 & Subhendra Kr. & 1.0 \\\\\n",
       "\t19 & vasanth & 1.0 \\\\\n",
       "\t20 & Senthilmani & 1.0 \\\\\n",
       "\t21 & Sakthivel  & 1.0 \\\\\n",
       "\t22 & Steve & 1.0 \\\\\n",
       "\t23 & Tarun & 0.0 \\\\\n",
       "\t24 & Surya & 0.0 \\\\\n",
       "\t25 & Annamalai & 0.0 \\\\\n",
       "\t26 & Bani Immanuel & 0.0 \\\\\n",
       "\t27 & Indrajith & 0.0 \\\\\n",
       "\t28 & Prakash & 0.0 \\\\\n",
       "\t29 & Vijaya rajan & 1.0 \\\\\n",
       "\t30 & Ashin & 1.0 \\\\\n",
       "\t$\\dots$ & $\\dots$ & $\\dots$ \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m65×2 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m Node           \u001b[0m\u001b[1m LocalClusteringCoefficient \u001b[0m\n",
       "     │\u001b[90m String31       \u001b[0m\u001b[90m Float64                    \u001b[0m\n",
       "─────┼────────────────────────────────────────────\n",
       "   1 │ Snega                            0.0512821\n",
       "   2 │ Barath                           1.0\n",
       "   3 │ Maria                            1.0\n",
       "   4 │ Vignesh                          1.0\n",
       "   5 │ Iqjas                            1.0\n",
       "   6 │ Karthik                          1.0\n",
       "   7 │ Venkatesh                        1.0\n",
       "   8 │ Suseendrababu                    1.0\n",
       "   9 │ Harishma                         1.0\n",
       "  10 │ Tamilmani                        1.0\n",
       "  11 │ Meril                            1.0\n",
       "  ⋮  │       ⋮                     ⋮\n",
       "  56 │ Saujanya                         1.0\n",
       "  57 │ Sai Preethi                      1.0\n",
       "  58 │ Deepasri                         1.0\n",
       "  59 │ Vinod                            1.0\n",
       "  60 │ Bharani                          1.0\n",
       "  61 │ Naveen                           0.0\n",
       "  62 │ Nigitha                          0.0\n",
       "  63 │ Nitheesh Kumar                   0.0\n",
       "  64 │ Sashwatha                        0.0\n",
       "  65 │ Rohit                            0.0\n",
       "\u001b[36m                                   44 rows omitted\u001b[0m"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "clustering_coeff = local_clustering_coefficient(g)\n",
    "\n",
    "# Create a DataFrame with node names and clustering coeff\n",
    "coeff_df = DataFrame(Node = h, LocalClusteringCoefficient = clustering_coeff)\n",
    "\n",
    "# Display the result DataFrame\n",
    "display(coeff_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "76cb75d7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-af5d123f-1\">\n",
       "  <g transform=\"translate(71.62,49.55)\">\n",
       "    <path fill=\"none\" d=\"M-12.75,1.28 L12.75,-1.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.93,61.93)\">\n",
       "    <path fill=\"none\" d=\"M-11.69,-9.92 L11.69,9.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58,57.76)\">\n",
       "    <path fill=\"none\" d=\"M-0.76,-5.46 L0.76,5.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.42,64.48)\">\n",
       "    <path fill=\"none\" d=\"M-4.87,-12.22 L4.87,12.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.54,53.96)\">\n",
       "    <path fill=\"none\" d=\"M-9.76,-2.5 L9.76,2.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.2,52.09)\">\n",
       "    <path fill=\"none\" d=\"M-13.32,-0.95 L13.32,0.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.65,51.81)\">\n",
       "    <path fill=\"none\" d=\"M-7.77,-0.65 L7.77,0.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.33,49.21)\">\n",
       "    <path fill=\"none\" d=\"M-8.49,1.49 L8.49,-1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.06,60.32)\">\n",
       "    <path fill=\"none\" d=\"M-7.97,-8.24 L7.97,8.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.95,58.17)\">\n",
       "    <path fill=\"none\" d=\"M4.29,-6.01 L-4.29,6.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.23,63.66)\">\n",
       "    <path fill=\"none\" d=\"M-8.33,-11.5 L8.33,11.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.68,59.87)\">\n",
       "    <path fill=\"none\" d=\"M2.04,-7.59 L-2.04,7.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.92,61.73)\">\n",
       "    <path fill=\"none\" d=\"M-3.4,-9.46 L3.4,9.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.2,58.86)\">\n",
       "    <path fill=\"none\" d=\"M-4.37,-6.67 L4.37,6.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.21,64.11)\">\n",
       "    <path fill=\"none\" d=\"M-1.03,-11.81 L1.03,11.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.16,55.26)\">\n",
       "    <path fill=\"none\" d=\"M2.91,-3.17 L-2.91,3.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.94,62.1)\">\n",
       "    <path fill=\"none\" d=\"M0.99,-9.8 L-0.99,9.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.39,44.35)\">\n",
       "    <path fill=\"none\" d=\"M-14.74,6.02 L14.74,-6.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.96,56.93)\">\n",
       "    <path fill=\"none\" d=\"M-15.26,-5.34 L15.26,5.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.64,50.84)\">\n",
       "    <path fill=\"none\" d=\"M-2.75,0.1 L2.75,-0.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.54,37.12)\">\n",
       "    <path fill=\"none\" d=\"M-3.16,12.62 L3.16,-12.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.49,43.43)\">\n",
       "    <path fill=\"none\" d=\"M3.86,6.39 L-3.86,-6.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.31,44.2)\">\n",
       "    <path fill=\"none\" d=\"M-0.2,5.52 L0.2,-5.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.28,47.75)\">\n",
       "    <path fill=\"none\" d=\"M-1.42,2.09 L1.42,-2.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.03,39.79)\">\n",
       "    <path fill=\"none\" d=\"M-3.52,9.96 L3.52,-9.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.09,41.4)\">\n",
       "    <path fill=\"none\" d=\"M-0.03,8.31 L0.03,-8.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.97,41.16)\">\n",
       "    <path fill=\"none\" d=\"M5.36,8.67 L-5.36,-8.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.29,42.3)\">\n",
       "    <path fill=\"none\" d=\"M-5.4,7.55 L5.4,-7.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.78,37.89)\">\n",
       "    <path fill=\"none\" d=\"M0.26,11.83 L-0.26,-11.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.99,39.29)\">\n",
       "    <path fill=\"none\" d=\"M-9.92,10.64 L9.92,-10.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.96,44.69)\">\n",
       "    <path fill=\"none\" d=\"M-9.48,5.5 L9.48,-5.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.3,45.91)\">\n",
       "    <path fill=\"none\" d=\"M4.63,4.1 L-4.63,-4.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.87,39.36)\">\n",
       "    <path fill=\"none\" d=\"M2.84,10.38 L-2.84,-10.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.66,37.79)\">\n",
       "    <path fill=\"none\" d=\"M-6.91,12.03 L6.91,-12.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.05,44.93)\">\n",
       "    <path fill=\"none\" d=\"M19.33,5.59 L-19.33,-5.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.16,54.68)\">\n",
       "    <path fill=\"none\" d=\"M20.12,-3.37 L-20.12,3.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.42,51.51)\">\n",
       "    <path fill=\"none\" d=\"M20.81,-0.45 L-20.81,0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37,58.04)\">\n",
       "    <path fill=\"none\" d=\"M18.43,-6.46 L-18.43,6.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.59,48.35)\">\n",
       "    <path fill=\"none\" d=\"M20.67,2.45 L-20.67,-2.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.94,42.89)\">\n",
       "    <path fill=\"none\" d=\"M-1.34,3.95 L1.34,-3.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.52,55.47)\">\n",
       "    <path fill=\"none\" d=\"M-1.94,-6.11 L1.94,6.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.82,67.84)\">\n",
       "    <path fill=\"none\" d=\"M-3.13,3.88 L3.13,-3.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.9,63.68)\">\n",
       "    <path fill=\"none\" d=\"M-14.14,0.74 L14.14,-0.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.32,70.39)\">\n",
       "    <path fill=\"none\" d=\"M-10.19,6.67 L10.19,-6.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.87,47.29)\">\n",
       "    <path fill=\"none\" d=\"M-4.23,8.39 L4.23,-8.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.44,59.87)\">\n",
       "    <path fill=\"none\" d=\"M-3.97,-2.18 L3.97,2.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.53,45.43)\">\n",
       "    <path fill=\"none\" d=\"M-0.98,6.46 L0.98,-6.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.1,58.01)\">\n",
       "    <path fill=\"none\" d=\"M-1.3,-3.59 L1.3,3.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.97,45.15)\">\n",
       "    <path fill=\"none\" d=\"M-5.75,6.37 L5.75,-6.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.55,57.73)\">\n",
       "    <path fill=\"none\" d=\"M-6.01,-4.21 L6.01,4.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.65,42.54)\">\n",
       "    <path fill=\"none\" d=\"M-4.85,3.89 L4.85,-3.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.23,55.12)\">\n",
       "    <path fill=\"none\" d=\"M-5.68,-6.62 L5.68,6.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.4,48.47)\">\n",
       "    <path fill=\"none\" d=\"M10.58,9.76 L-10.58,-9.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.97,61.05)\">\n",
       "    <path fill=\"none\" d=\"M9.33,-1.51 L-9.33,1.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.32,44.57)\">\n",
       "    <path fill=\"none\" d=\"M11.16,6.09 L-11.16,-6.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.89,57.14)\">\n",
       "    <path fill=\"none\" d=\"M10.52,-4.98 L-10.52,4.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.2,36.41)\">\n",
       "    <path fill=\"none\" d=\"M1.87,-0.68 L-1.87,0.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.77,48.99)\">\n",
       "    <path fill=\"none\" d=\"M2.65,-12.58 L-2.65,12.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.94,43.4)\">\n",
       "    <path fill=\"none\" d=\"M15.58,5.16 L-15.58,-5.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.51,55.97)\">\n",
       "    <path fill=\"none\" d=\"M15.08,-6.22 L-15.08,6.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.24,42.87)\">\n",
       "    <path fill=\"none\" d=\"M7.14,4.34 L-7.14,-4.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.81,55.45)\">\n",
       "    <path fill=\"none\" d=\"M6.85,-6.37 L-6.85,6.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.28,49.87)\">\n",
       "    <path fill=\"none\" d=\"M7.76,11.02 L-7.76,-11.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.86,62.45)\">\n",
       "    <path fill=\"none\" d=\"M6.18,-0.31 L-6.18,0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.89,46.16)\">\n",
       "    <path fill=\"none\" d=\"M7.15,7.41 L-7.15,-7.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.46,58.74)\">\n",
       "    <path fill=\"none\" d=\"M6.15,-3.32 L-6.15,3.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.99,47.94)\">\n",
       "    <path fill=\"none\" d=\"M13.96,9.37 L-13.96,-9.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.57,60.52)\">\n",
       "    <path fill=\"none\" d=\"M12.93,-2.04 L-12.93,2.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.55,39.61)\">\n",
       "    <path fill=\"none\" d=\"M7.1,1.54 L-7.1,-1.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.13,52.19)\">\n",
       "    <path fill=\"none\" d=\"M7.39,-9.52 L-7.39,9.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.74,40.8)\">\n",
       "    <path fill=\"none\" d=\"M15.27,2.79 L-15.27,-2.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.32,53.38)\">\n",
       "    <path fill=\"none\" d=\"M15.04,-8.65 L-15.04,8.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.84,41.31)\">\n",
       "    <path fill=\"none\" d=\"M11.43,3.15 L-11.43,-3.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.42,53.88)\">\n",
       "    <path fill=\"none\" d=\"M11.27,-8.04 L-11.27,8.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.64,45.8)\">\n",
       "    <path fill=\"none\" d=\"M15.42,7.38 L-15.42,-7.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.22,58.37)\">\n",
       "    <path fill=\"none\" d=\"M14.66,-4 L-14.66,4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.58,38.39)\">\n",
       "    <path fill=\"none\" d=\"M11.05,0.61 L-11.05,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.15,50.97)\">\n",
       "    <path fill=\"none\" d=\"M11.21,-10.83 L-11.21,10.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.25,70.19)\">\n",
       "    <path fill=\"none\" d=\"M17.78,6.74 L-17.78,-6.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.69,77.26)\">\n",
       "    <path fill=\"none\" d=\"M1.67,13.12 L-1.67,-13.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.63,72.92)\">\n",
       "    <path fill=\"none\" d=\"M14.41,9.21 L-14.41,-9.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.59,74.88)\">\n",
       "    <path fill=\"none\" d=\"M10.7,10.98 L-10.7,-10.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.65,69.05)\">\n",
       "    <path fill=\"none\" d=\"M-21.5,5.74 L21.5,-5.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.07,76.32)\">\n",
       "    <path fill=\"none\" d=\"M6.56,12.27 L-6.56,-12.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.96,66.24)\">\n",
       "    <path fill=\"none\" d=\"M-6.34,2.72 L6.34,-2.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.84,64.09)\">\n",
       "    <path fill=\"none\" d=\"M-20.19,1.14 L20.19,-1.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.13,69.58)\">\n",
       "    <path fill=\"none\" d=\"M-6.58,5.73 L6.58,-5.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.57,65.78)\">\n",
       "    <path fill=\"none\" d=\"M-17.5,2.67 L17.5,-2.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.81,67.64)\">\n",
       "    <path fill=\"none\" d=\"M-11.42,4.2 L11.42,-4.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.1,64.77)\">\n",
       "    <path fill=\"none\" d=\"M-9.98,1.64 L9.98,-1.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.11,70.02)\">\n",
       "    <path fill=\"none\" d=\"M-14.21,6.48 L14.21,-6.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.06,61.18)\">\n",
       "    <path fill=\"none\" d=\"M-18.98,-1.52 L18.98,1.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.84,68.01)\">\n",
       "    <path fill=\"none\" d=\"M-16.33,4.68 L16.33,-4.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.28,50.27)\">\n",
       "    <path fill=\"none\" d=\"M-0.52,-11.29 L0.52,11.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.96,44.18)\">\n",
       "    <path fill=\"none\" d=\"M10.31,-5.7 L-10.31,5.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.86,30.45)\">\n",
       "    <path fill=\"none\" d=\"M11.42,6.43 L-11.42,-6.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.81,36.77)\">\n",
       "    <path fill=\"none\" d=\"M19.07,0.84 L-19.07,-0.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.63,37.54)\">\n",
       "    <path fill=\"none\" d=\"M14.25,0.13 L-14.25,-0.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.05,23.01)\">\n",
       "    <path fill=\"none\" d=\"M3.34,13.4 L-3.34,-13.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.83,25.49)\">\n",
       "    <path fill=\"none\" d=\"M-11.07,11.14 L11.07,-11.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,27.34)\">\n",
       "    <path fill=\"none\" d=\"M-14.41,9.47 L14.41,-9.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.6,24.1)\">\n",
       "    <path fill=\"none\" d=\"M-7.2,12.39 L7.2,-12.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.86,23.2)\">\n",
       "    <path fill=\"none\" d=\"M-2.88,13.21 L2.88,-13.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.93,30.01)\">\n",
       "    <path fill=\"none\" d=\"M-17.63,7.04 L17.63,-7.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.6,41.09)\">\n",
       "    <path fill=\"none\" d=\"M12.38,-2.99 L-12.38,2.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.35,33.13)\">\n",
       "    <path fill=\"none\" d=\"M10.74,3.96 L-10.74,-3.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.42,34.74)\">\n",
       "    <path fill=\"none\" d=\"M14.52,2.62 L-14.52,-2.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.3,34.5)\">\n",
       "    <path fill=\"none\" d=\"M20.62,2.93 L-20.62,-2.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.61,35.64)\">\n",
       "    <path fill=\"none\" d=\"M8.34,1.69 L-8.34,-1.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.1,31.23)\">\n",
       "    <path fill=\"none\" d=\"M15,5.83 L-15,-5.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.31,32.63)\">\n",
       "    <path fill=\"none\" d=\"M4.3,4.03 L-4.3,-4.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.28,38.03)\">\n",
       "    <path fill=\"none\" d=\"M3.61,-0.23 L-3.61,0.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.62,39.24)\">\n",
       "    <path fill=\"none\" d=\"M20.27,-1.43 L-20.27,1.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.19,32.7)\">\n",
       "    <path fill=\"none\" d=\"M17.79,4.55 L-17.79,-4.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.98,31.12)\">\n",
       "    <path fill=\"none\" d=\"M7.47,5.62 L-7.47,-5.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-af5d123f-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-af5d123f-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" id=\"img-af5d123f-4\">\n",
       "  <g transform=\"translate(57.06,51.01)\" fill=\"#00FF00\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.17,48.1)\" fill=\"#00FF00\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.79,72.84)\" fill=\"#00FF00\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.94,64.51)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.79,77.94)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.02,56.9)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.35,53.17)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.24,52.61)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.6,47.4)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.09,59.25)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.93,51.44)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.69,35.13)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.17,49.1)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.77,48.05)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.86,62.05)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.07,54.63)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(120.28,58.2)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.4,41.54)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.78,43.92)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.97,44.93)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.58,53.9)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.44,39.1)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,77.54)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.52,91.67)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.4,83)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.33,86.92)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.45,75.25)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.28,89.8)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.06,69.63)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.83,65.33)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.4,76.31)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.29,68.72)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.77,72.44)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.34,66.7)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.36,77.2)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.26,59.52)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.82,73.18)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.71,37.69)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.86,62.84)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.21,50.67)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.01,23.22)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.92,35.85)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.56,37.39)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.39,8.33)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.94,13.29)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(121.21,17)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.5,10.52)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.02,8.72)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(128.15,22.33)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.5,44.5)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.99,28.58)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.12,31.8)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.88,31.31)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.51,33.6)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.5,24.77)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.91,27.57)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.85,38.37)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.53,40.8)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.68,27.71)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.25,24.56)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.03,38.85)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.27,58.35)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,52)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.94,65.07)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.12,45.68)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-af5d123f-5\">\n",
       "  <g transform=\"translate(57.06,51.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.17,48.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.79,72.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.94,64.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.79,77.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.02,56.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.35,53.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.24,52.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.6,47.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.09,59.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.93,51.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.69,35.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.17,49.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.77,48.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.86,62.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.07,54.63)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(120.28,58.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.4,41.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.78,43.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.97,44.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.58,53.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.44,39.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,77.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.52,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.4,83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.33,86.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.45,75.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.28,89.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.06,69.63)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.83,65.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.4,76.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.29,68.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.77,72.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.34,66.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.36,77.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.26,59.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.82,73.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.71,37.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.86,62.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.21,50.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.01,23.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.92,35.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.56,37.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.39,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.94,13.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(121.21,17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.5,10.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.02,8.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(128.15,22.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.5,44.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.99,28.58)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.12,31.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.88,31.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.51,33.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.5,24.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.91,27.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.85,38.37)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.53,40.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.68,27.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.25,24.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.03,38.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.27,58.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.94,65.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.12,45.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-0d976d1c\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-0d976d1c-1\">\n",
       "  <g transform=\"translate(71.62,49.55)\">\n",
       "    <path fill=\"none\" d=\"M-12.75,1.28 L12.75,-1.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.93,61.93)\">\n",
       "    <path fill=\"none\" d=\"M-11.69,-9.92 L11.69,9.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58,57.76)\">\n",
       "    <path fill=\"none\" d=\"M-0.76,-5.46 L0.76,5.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.42,64.48)\">\n",
       "    <path fill=\"none\" d=\"M-4.87,-12.22 L4.87,12.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.54,53.96)\">\n",
       "    <path fill=\"none\" d=\"M-9.76,-2.5 L9.76,2.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.2,52.09)\">\n",
       "    <path fill=\"none\" d=\"M-13.32,-0.95 L13.32,0.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.65,51.81)\">\n",
       "    <path fill=\"none\" d=\"M-7.77,-0.65 L7.77,0.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.33,49.21)\">\n",
       "    <path fill=\"none\" d=\"M-8.49,1.49 L8.49,-1.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.06,60.32)\">\n",
       "    <path fill=\"none\" d=\"M-7.97,-8.24 L7.97,8.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.95,58.17)\">\n",
       "    <path fill=\"none\" d=\"M4.29,-6.01 L-4.29,6.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.23,63.66)\">\n",
       "    <path fill=\"none\" d=\"M-8.33,-11.5 L8.33,11.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.68,59.87)\">\n",
       "    <path fill=\"none\" d=\"M2.04,-7.59 L-2.04,7.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.92,61.73)\">\n",
       "    <path fill=\"none\" d=\"M-3.4,-9.46 L3.4,9.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.2,58.86)\">\n",
       "    <path fill=\"none\" d=\"M-4.37,-6.67 L4.37,6.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.21,64.11)\">\n",
       "    <path fill=\"none\" d=\"M-1.03,-11.81 L1.03,11.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.16,55.26)\">\n",
       "    <path fill=\"none\" d=\"M2.91,-3.17 L-2.91,3.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.94,62.1)\">\n",
       "    <path fill=\"none\" d=\"M0.99,-9.8 L-0.99,9.8 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.39,44.35)\">\n",
       "    <path fill=\"none\" d=\"M-14.74,6.02 L14.74,-6.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.96,56.93)\">\n",
       "    <path fill=\"none\" d=\"M-15.26,-5.34 L15.26,5.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.64,50.84)\">\n",
       "    <path fill=\"none\" d=\"M-2.75,0.1 L2.75,-0.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.54,37.12)\">\n",
       "    <path fill=\"none\" d=\"M-3.16,12.62 L3.16,-12.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.49,43.43)\">\n",
       "    <path fill=\"none\" d=\"M3.86,6.39 L-3.86,-6.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.31,44.2)\">\n",
       "    <path fill=\"none\" d=\"M-0.2,5.52 L0.2,-5.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.28,47.75)\">\n",
       "    <path fill=\"none\" d=\"M-1.42,2.09 L1.42,-2.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.03,39.79)\">\n",
       "    <path fill=\"none\" d=\"M-3.52,9.96 L3.52,-9.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.09,41.4)\">\n",
       "    <path fill=\"none\" d=\"M-0.03,8.31 L0.03,-8.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.97,41.16)\">\n",
       "    <path fill=\"none\" d=\"M5.36,8.67 L-5.36,-8.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.29,42.3)\">\n",
       "    <path fill=\"none\" d=\"M-5.4,7.55 L5.4,-7.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.78,37.89)\">\n",
       "    <path fill=\"none\" d=\"M0.26,11.83 L-0.26,-11.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.99,39.29)\">\n",
       "    <path fill=\"none\" d=\"M-9.92,10.64 L9.92,-10.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.96,44.69)\">\n",
       "    <path fill=\"none\" d=\"M-9.48,5.5 L9.48,-5.5 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.3,45.91)\">\n",
       "    <path fill=\"none\" d=\"M4.63,4.1 L-4.63,-4.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.87,39.36)\">\n",
       "    <path fill=\"none\" d=\"M2.84,10.38 L-2.84,-10.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.66,37.79)\">\n",
       "    <path fill=\"none\" d=\"M-6.91,12.03 L6.91,-12.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.05,44.93)\">\n",
       "    <path fill=\"none\" d=\"M19.33,5.59 L-19.33,-5.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.16,54.68)\">\n",
       "    <path fill=\"none\" d=\"M20.12,-3.37 L-20.12,3.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.42,51.51)\">\n",
       "    <path fill=\"none\" d=\"M20.81,-0.45 L-20.81,0.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37,58.04)\">\n",
       "    <path fill=\"none\" d=\"M18.43,-6.46 L-18.43,6.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.59,48.35)\">\n",
       "    <path fill=\"none\" d=\"M20.67,2.45 L-20.67,-2.45 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.94,42.89)\">\n",
       "    <path fill=\"none\" d=\"M-1.34,3.95 L1.34,-3.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.52,55.47)\">\n",
       "    <path fill=\"none\" d=\"M-1.94,-6.11 L1.94,6.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.82,67.84)\">\n",
       "    <path fill=\"none\" d=\"M-3.13,3.88 L3.13,-3.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.9,63.68)\">\n",
       "    <path fill=\"none\" d=\"M-14.14,0.74 L14.14,-0.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.32,70.39)\">\n",
       "    <path fill=\"none\" d=\"M-10.19,6.67 L10.19,-6.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.87,47.29)\">\n",
       "    <path fill=\"none\" d=\"M-4.23,8.39 L4.23,-8.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.44,59.87)\">\n",
       "    <path fill=\"none\" d=\"M-3.97,-2.18 L3.97,2.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.53,45.43)\">\n",
       "    <path fill=\"none\" d=\"M-0.98,6.46 L0.98,-6.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.1,58.01)\">\n",
       "    <path fill=\"none\" d=\"M-1.3,-3.59 L1.3,3.59 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.97,45.15)\">\n",
       "    <path fill=\"none\" d=\"M-5.75,6.37 L5.75,-6.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.55,57.73)\">\n",
       "    <path fill=\"none\" d=\"M-6.01,-4.21 L6.01,4.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.65,42.54)\">\n",
       "    <path fill=\"none\" d=\"M-4.85,3.89 L4.85,-3.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.23,55.12)\">\n",
       "    <path fill=\"none\" d=\"M-5.68,-6.62 L5.68,6.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.4,48.47)\">\n",
       "    <path fill=\"none\" d=\"M10.58,9.76 L-10.58,-9.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.97,61.05)\">\n",
       "    <path fill=\"none\" d=\"M9.33,-1.51 L-9.33,1.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.32,44.57)\">\n",
       "    <path fill=\"none\" d=\"M11.16,6.09 L-11.16,-6.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.89,57.14)\">\n",
       "    <path fill=\"none\" d=\"M10.52,-4.98 L-10.52,4.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.2,36.41)\">\n",
       "    <path fill=\"none\" d=\"M1.87,-0.68 L-1.87,0.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.77,48.99)\">\n",
       "    <path fill=\"none\" d=\"M2.65,-12.58 L-2.65,12.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.94,43.4)\">\n",
       "    <path fill=\"none\" d=\"M15.58,5.16 L-15.58,-5.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.51,55.97)\">\n",
       "    <path fill=\"none\" d=\"M15.08,-6.22 L-15.08,6.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.24,42.87)\">\n",
       "    <path fill=\"none\" d=\"M7.14,4.34 L-7.14,-4.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.81,55.45)\">\n",
       "    <path fill=\"none\" d=\"M6.85,-6.37 L-6.85,6.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.28,49.87)\">\n",
       "    <path fill=\"none\" d=\"M7.76,11.02 L-7.76,-11.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.86,62.45)\">\n",
       "    <path fill=\"none\" d=\"M6.18,-0.31 L-6.18,0.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.89,46.16)\">\n",
       "    <path fill=\"none\" d=\"M7.15,7.41 L-7.15,-7.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.46,58.74)\">\n",
       "    <path fill=\"none\" d=\"M6.15,-3.32 L-6.15,3.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.99,47.94)\">\n",
       "    <path fill=\"none\" d=\"M13.96,9.37 L-13.96,-9.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.57,60.52)\">\n",
       "    <path fill=\"none\" d=\"M12.93,-2.04 L-12.93,2.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.55,39.61)\">\n",
       "    <path fill=\"none\" d=\"M7.1,1.54 L-7.1,-1.54 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.13,52.19)\">\n",
       "    <path fill=\"none\" d=\"M7.39,-9.52 L-7.39,9.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.74,40.8)\">\n",
       "    <path fill=\"none\" d=\"M15.27,2.79 L-15.27,-2.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.32,53.38)\">\n",
       "    <path fill=\"none\" d=\"M15.04,-8.65 L-15.04,8.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.84,41.31)\">\n",
       "    <path fill=\"none\" d=\"M11.43,3.15 L-11.43,-3.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.42,53.88)\">\n",
       "    <path fill=\"none\" d=\"M11.27,-8.04 L-11.27,8.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.64,45.8)\">\n",
       "    <path fill=\"none\" d=\"M15.42,7.38 L-15.42,-7.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.22,58.37)\">\n",
       "    <path fill=\"none\" d=\"M14.66,-4 L-14.66,4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.58,38.39)\">\n",
       "    <path fill=\"none\" d=\"M11.05,0.61 L-11.05,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.15,50.97)\">\n",
       "    <path fill=\"none\" d=\"M11.21,-10.83 L-11.21,10.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(110.25,70.19)\">\n",
       "    <path fill=\"none\" d=\"M17.78,6.74 L-17.78,-6.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.69,77.26)\">\n",
       "    <path fill=\"none\" d=\"M1.67,13.12 L-1.67,-13.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.63,72.92)\">\n",
       "    <path fill=\"none\" d=\"M14.41,9.21 L-14.41,-9.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.59,74.88)\">\n",
       "    <path fill=\"none\" d=\"M10.7,10.98 L-10.7,-10.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.65,69.05)\">\n",
       "    <path fill=\"none\" d=\"M-21.5,5.74 L21.5,-5.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.07,76.32)\">\n",
       "    <path fill=\"none\" d=\"M6.56,12.27 L-6.56,-12.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.96,66.24)\">\n",
       "    <path fill=\"none\" d=\"M-6.34,2.72 L6.34,-2.72 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.84,64.09)\">\n",
       "    <path fill=\"none\" d=\"M-20.19,1.14 L20.19,-1.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.13,69.58)\">\n",
       "    <path fill=\"none\" d=\"M-6.58,5.73 L6.58,-5.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.57,65.78)\">\n",
       "    <path fill=\"none\" d=\"M-17.5,2.67 L17.5,-2.67 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.81,67.64)\">\n",
       "    <path fill=\"none\" d=\"M-11.42,4.2 L11.42,-4.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.1,64.77)\">\n",
       "    <path fill=\"none\" d=\"M-9.98,1.64 L9.98,-1.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.11,70.02)\">\n",
       "    <path fill=\"none\" d=\"M-14.21,6.48 L14.21,-6.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.06,61.18)\">\n",
       "    <path fill=\"none\" d=\"M-18.98,-1.52 L18.98,1.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.84,68.01)\">\n",
       "    <path fill=\"none\" d=\"M-16.33,4.68 L16.33,-4.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.28,50.27)\">\n",
       "    <path fill=\"none\" d=\"M-0.52,-11.29 L0.52,11.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.96,44.18)\">\n",
       "    <path fill=\"none\" d=\"M10.31,-5.7 L-10.31,5.7 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.86,30.45)\">\n",
       "    <path fill=\"none\" d=\"M11.42,6.43 L-11.42,-6.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.81,36.77)\">\n",
       "    <path fill=\"none\" d=\"M19.07,0.84 L-19.07,-0.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.63,37.54)\">\n",
       "    <path fill=\"none\" d=\"M14.25,0.13 L-14.25,-0.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.05,23.01)\">\n",
       "    <path fill=\"none\" d=\"M3.34,13.4 L-3.34,-13.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.83,25.49)\">\n",
       "    <path fill=\"none\" d=\"M-11.07,11.14 L11.07,-11.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,27.34)\">\n",
       "    <path fill=\"none\" d=\"M-14.41,9.47 L14.41,-9.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.6,24.1)\">\n",
       "    <path fill=\"none\" d=\"M-7.2,12.39 L7.2,-12.39 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.86,23.2)\">\n",
       "    <path fill=\"none\" d=\"M-2.88,13.21 L2.88,-13.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.93,30.01)\">\n",
       "    <path fill=\"none\" d=\"M-17.63,7.04 L17.63,-7.04 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.6,41.09)\">\n",
       "    <path fill=\"none\" d=\"M12.38,-2.99 L-12.38,2.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.35,33.13)\">\n",
       "    <path fill=\"none\" d=\"M10.74,3.96 L-10.74,-3.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.42,34.74)\">\n",
       "    <path fill=\"none\" d=\"M14.52,2.62 L-14.52,-2.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.3,34.5)\">\n",
       "    <path fill=\"none\" d=\"M20.62,2.93 L-20.62,-2.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.61,35.64)\">\n",
       "    <path fill=\"none\" d=\"M8.34,1.69 L-8.34,-1.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.1,31.23)\">\n",
       "    <path fill=\"none\" d=\"M15,5.83 L-15,-5.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.31,32.63)\">\n",
       "    <path fill=\"none\" d=\"M4.3,4.03 L-4.3,-4.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.28,38.03)\">\n",
       "    <path fill=\"none\" d=\"M3.61,-0.23 L-3.61,0.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.62,39.24)\">\n",
       "    <path fill=\"none\" d=\"M20.27,-1.43 L-20.27,1.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.19,32.7)\">\n",
       "    <path fill=\"none\" d=\"M17.79,4.55 L-17.79,-4.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.98,31.12)\">\n",
       "    <path fill=\"none\" d=\"M7.47,5.62 L-7.47,-5.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-0d976d1c-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-0d976d1c-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" id=\"img-0d976d1c-4\">\n",
       "  <g transform=\"translate(57.06,51.01)\" fill=\"#00FF00\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.17,48.1)\" fill=\"#00FF00\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.79,72.84)\" fill=\"#00FF00\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.94,64.51)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.79,77.94)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.02,56.9)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.35,53.17)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.24,52.61)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.6,47.4)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.09,59.25)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.93,51.44)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.69,35.13)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.17,49.1)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.77,48.05)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.86,62.05)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.07,54.63)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(120.28,58.2)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.4,41.54)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.78,43.92)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.97,44.93)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.58,53.9)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.44,39.1)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,77.54)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.52,91.67)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.4,83)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.33,86.92)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.45,75.25)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.28,89.8)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.06,69.63)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.83,65.33)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.4,76.31)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.29,68.72)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.77,72.44)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.34,66.7)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.36,77.2)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.26,59.52)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.82,73.18)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.71,37.69)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.86,62.84)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.21,50.67)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.01,23.22)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.92,35.85)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.56,37.39)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.39,8.33)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.94,13.29)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(121.21,17)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.5,10.52)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.02,8.72)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(128.15,22.33)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.5,44.5)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.99,28.58)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.12,31.8)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.88,31.31)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.51,33.6)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.5,24.77)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.91,27.57)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.85,38.37)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.53,40.8)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.68,27.71)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.25,24.56)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.03,38.85)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.27,58.35)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,52)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.94,65.07)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.12,45.68)\" fill=\"#0000FF\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-0d976d1c-5\">\n",
       "  <g transform=\"translate(57.06,51.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.17,48.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.79,72.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.94,64.51)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.79,77.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.02,56.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.35,53.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.24,52.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.6,47.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.09,59.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.93,51.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.69,35.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(124.17,49.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.77,48.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.86,62.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.07,54.63)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(120.28,58.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(107.4,41.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.78,43.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.97,44.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.58,53.9)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.44,39.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,77.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.52,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(122.4,83)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.33,86.92)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.45,75.25)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.28,89.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.06,69.63)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.83,65.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.4,76.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.29,68.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.77,72.44)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.34,66.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.36,77.2)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.26,59.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.82,73.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.71,37.69)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(90.86,62.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.21,50.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.01,23.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.92,35.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.56,37.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.39,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.94,13.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(121.21,17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.5,10.52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.02,8.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(128.15,22.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.5,44.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.99,28.58)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.12,31.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.88,31.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.51,33.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.5,24.77)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.91,27.57)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.85,38.37)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.53,40.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.68,27.71)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.25,24.56)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.03,38.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.27,58.35)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,52)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.94,65.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.12,45.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.20090040601173106cx, 0.019923201769567054cy), (0.23172111099318135cx, -0.0413392358010329cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.21175124570142476cx, 0.048092198608874405cy), (0.1851549329023435cx, 0.5243688822119902cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2285724204566174cx, 0.05513114314400005cy), (-0.20281502568963328cx, 0.3174361291291603cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.22319806588553487cx, 0.05411882179159608cy), (-0.05803071936559807cx, 0.6406826154680579cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.20245315529509295cx, 0.03484621484879154cy), (0.12890661249770746cx, 0.15506173327953926cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.20075004196491864cx, 0.027376801291823488cy), (0.25144944537971325cx, 0.07289925014642731cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.20080694854976205cx, 0.02789785745867319cy), (0.06301545130642922cx, 0.05896945372298084cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2015102576767231cx, 0.016789026534926275cy), (0.0867561022801125cx, -0.05488221986085513cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.21410991000376278cx, 0.049874359964651956cy), (0.056279958516006104cx, 0.4456308816917033cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2455927486595326cx, 0.05194432978217686cy), (-0.3913090222886802cx, 0.3401845978154654cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2948854493236381cx, -0.3098508259866237cy), (-0.06954253140347197cx, -0.49981327803874664cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.29233974601520385cx, -0.30319624592914346cy), (-0.2005299529102893cx, -0.42916883446543236cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2919831692442629cx, -0.3016339158794952cy), (-0.40791097144867655cx, -0.44245174183531066cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.29257248026485294cx, -0.3040552476373966cy), (0.009378669804028548cx, -0.38516229752451947cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2952104753467429cx, -0.31045782467806365cy), (-0.21405168759719642cx, -0.5904685708408332cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3037074331339133cx, -0.32027185885069365cy), (0.15785867047180976cx, -0.5135965226369933cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2914960448989493cx, -0.2927688225582403cy), (0.1690986368769506cx, -0.2818760639048188cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2915267573259577cx, -0.2924431805700318cy), (-0.3965129949050923cx, -0.22388880567171965cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.29322062565892487cx, -0.3060586578176504cy), (-0.31073706344211843cx, -0.5243687871152576cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.30114106446890965cx, -0.31810813261665827cy), (0.04743283587598436cx, -0.5879282903140463cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.23160278517838206cx, 0.024270887941044483cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.26242349015983235cx, -0.04568692197251034cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.2050064723793008cx, 0.5481901928798201cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.19978466096786862cx, 0.34829638433211585cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.049626000072750864cx, 0.6705305493186096cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.15805624238099658cx, 0.1656370601872863cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.2823021885931767cx, 0.07600516349720632cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.09381128793504923cx, 0.06259642324060954cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.11684862978177146cx, -0.06236408126697335cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7191328179245373cx, 0.22211510805227164cy), 0.012403473458920847w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.13918344654431491cx, -0.5383508045453094cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.1382120247144918cx, -0.27912730952068154cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.42736889464054273cx, -0.2208144092993739cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3398990948446017cx, -0.5349098679905304cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.026191243283485877cx, -0.610518845988327cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9449719809927991cx, -0.2676287843931844cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9748610760474783cx, 0.20049355640644162cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, 0.048003554297122664cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9125853523750898cx, 0.3616711765582472cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9942839459456237cx, -0.1036756295602338cy), 0.012403473458920847w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,1.0,0.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,1.0,0.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,1.0,0.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0))  …  Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,1.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.23160278517838206cx, 0.024270887941044483cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.26242349015983235cx, -0.04568692197251034cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.2050064723793008cx, 0.5481901928798201cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.19978466096786862cx, 0.34829638433211585cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.049626000072750864cx, 0.6705305493186096cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.15805624238099658cx, 0.1656370601872863cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.2823021885931767cx, 0.07600516349720632cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.09381128793504923cx, 0.06259642324060954cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.11684862978177146cx, -0.06236408126697335cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7191328179245373cx, 0.22211510805227164cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.13918344654431491cx, -0.5383508045453094cy), \"56\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.1382120247144918cx, -0.27912730952068154cy), \"57\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.42736889464054273cx, -0.2208144092993739cy), \"58\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3398990948446017cx, -0.5349098679905304cy), \"59\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.026191243283485877cx, -0.610518845988327cy), \"60\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9449719809927991cx, -0.2676287843931844cy), \"61\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9748610760474783cx, 0.20049355640644162cy), \"62\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, 0.048003554297122664cy), \"63\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9125853523750898cx, 0.3616711765582472cy), \"64\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9942839459456237cx, -0.1036756295602338cy), \"65\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using Plots\n",
    "using GraphPlot\n",
    "\n",
    "# Visualize the graph, highlighting nodes with high triangle counts and clustering coefficients\n",
    "function visualize_network(G, triangle_counts, clustering_coefficients; threshold_triangles=0, threshold_clustering=0)\n",
    "    # Highlight nodes 1, 2, and 3 with a different color (e.g., green)\n",
    "    node_colors = [i in [1, 2, 3] ? RGB(0, 1, 0) :\n",
    "                   ((triangle_counts[i] > threshold_triangles) && (clustering_coefficients[i] > threshold_clustering)) ? RGB(1, 0, 0) : RGB(0, 0, 1)\n",
    "                   for i in 1:length(triangle_counts)]\n",
    "\n",
    "    gplot(G, nodelabel=1:length(h), nodefillc=node_colors, nodesize=5)\n",
    "end\n",
    "\n",
    "# Set threshold values to highlight nodes\n",
    "threshold_triangles = 10\n",
    "threshold_clustering = 0.5\n",
    "\n",
    "# Visualize the network\n",
    "visualize_network(g, triangle_counts, clustering_coeff, threshold_triangles=threshold_triangles, threshold_clustering=threshold_clustering)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "975ccd8b",
   "metadata": {},
   "source": [
    "## Triangles satisfying triadic closure property "
   ]
  },
  {
   "attachments": {
    "triadic%20closure%202.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "219d731e",
   "metadata": {},
   "source": [
    "![triadic%20closure%202.PNG](attachment:triadic%20closure%202.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7382b93",
   "metadata": {},
   "source": [
    "## Inferences:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c69d7cd",
   "metadata": {},
   "source": [
    "Nodes with higher triangle counts (e.g., 36-Gowtham, 39- Sahaanah, 38- Snega) are likely to be part of densely connected communities within  network. These nodes have multiple connections with each other, forming cohesive clusters.\n",
    "\n",
    "Nodes with lower or zero triangle counts are more isolated or have fewer mutual connections. This indicate individuals who are not part of tightly-knit groups within the network.\n",
    "\n",
    "Triangle counts indicate the presence of closed triads in the network. A high number of triangles suggests that triadic closure is prevalent, meaning that individuals who share mutual connections tend to connect with each other. This can contribute to the formation of stronger ties within local clusters or communities.\n",
    "\n",
    "\n",
    "### Traidic closure property\n",
    "In the above plot it is found that the triangles satisfy triadic closure property with 2 strong ties and 1 weak tie or strong tie respectively.\n",
    "\n",
    "Eg:\n",
    "Gowtham - Snega - Maria  --> Satisfies triadic closure property\n",
    "\n",
    "Gowtham - Snega --> strong tie\n",
    "\n",
    "Snega - Maria --> strong tie\n",
    "\n",
    "Then, a connection should exist between Gowtham and Maria.\n",
    "From the above graph, we can see that there exists a strong tie between Gowtham and Maria.\n",
    "Hence, Triadic closure property is satisfied in the real data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55c46d21",
   "metadata": {},
   "source": [
    "## Community Detection "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90d208c1",
   "metadata": {},
   "source": [
    "Can distinct communities be identified within LinkedIn networks, and do these communities align with specific interests or affiliations?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "69c2db97",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.49\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-f163df1f-1\">\n",
       "  <g transform=\"translate(96.56,45.11)\">\n",
       "    <path fill=\"none\" d=\"M-5.72,-9.44 L5.72,9.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.67,42.64)\">\n",
       "    <path fill=\"none\" d=\"M-8.26,-7.21 L8.26,7.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.73,45.38)\">\n",
       "    <path fill=\"none\" d=\"M-10.41,-9.92 L10.41,9.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.49,21.75)\">\n",
       "    <path fill=\"none\" d=\"M-5.75,10.74 L5.75,-10.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.21,23.58)\">\n",
       "    <path fill=\"none\" d=\"M-10.78,9.19 L10.78,-9.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.82,22.21)\">\n",
       "    <path fill=\"none\" d=\"M6.12,10.3 L-6.12,-10.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.91,21.21)\">\n",
       "    <path fill=\"none\" d=\"M-0.02,11.17 L0.02,-11.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.66,26.52)\">\n",
       "    <path fill=\"none\" d=\"M-14.73,6.66 L14.73,-6.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.76,30.44)\">\n",
       "    <path fill=\"none\" d=\"M-17.53,3.23 L17.53,-3.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.8,42.64)\">\n",
       "    <path fill=\"none\" d=\"M6.74,-7.12 L-6.74,7.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.14,40.12)\">\n",
       "    <path fill=\"none\" d=\"M15.56,-5.28 L-15.56,5.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.09,40.85)\">\n",
       "    <path fill=\"none\" d=\"M10.85,-5.73 L-10.85,5.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.68,37.53)\">\n",
       "    <path fill=\"none\" d=\"M17.85,-3.03 L-17.85,3.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.58,36.9)\">\n",
       "    <path fill=\"none\" d=\"M10,-2.28 L-10,2.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.55,44.08)\">\n",
       "    <path fill=\"none\" d=\"M1.94,-8.29 L-1.94,8.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.15,35.59)\">\n",
       "    <path fill=\"none\" d=\"M14.33,-1.28 L-14.33,1.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.38,38.48)\">\n",
       "    <path fill=\"none\" d=\"M5.64,-3.3 L-5.64,3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.67,40.79)\">\n",
       "    <path fill=\"none\" d=\"M1.67,-5.02 L-1.67,5.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.44,65.18)\">\n",
       "    <path fill=\"none\" d=\"M-8.32,7.69 L8.32,-7.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.55,62.7)\">\n",
       "    <path fill=\"none\" d=\"M-11.4,10.18 L11.4,-10.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.61,65.45)\">\n",
       "    <path fill=\"none\" d=\"M-13.1,7.68 L13.1,-7.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.38,78.46)\">\n",
       "    <path fill=\"none\" d=\"M-3.23,-2.88 L3.23,2.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.76,78.32)\">\n",
       "    <path fill=\"none\" d=\"M1.81,-2.55 L-1.81,2.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.83,78.98)\">\n",
       "    <path fill=\"none\" d=\"M13.59,-4.08 L-13.59,4.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.56,79.44)\">\n",
       "    <path fill=\"none\" d=\"M7.21,-4.13 L-7.21,4.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.11,82.04)\">\n",
       "    <path fill=\"none\" d=\"M10.72,-6.68 L-10.72,6.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.64,82.95)\">\n",
       "    <path fill=\"none\" d=\"M4.94,-7.18 L-4.94,7.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.93,74.22)\">\n",
       "    <path fill=\"none\" d=\"M-3.86,0.01 L3.86,-0.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.66,74.52)\">\n",
       "    <path fill=\"none\" d=\"M6.57,-0.21 L-6.57,0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.47,75.38)\">\n",
       "    <path fill=\"none\" d=\"M14.77,-0.99 L-14.77,0.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.68,81.45)\">\n",
       "    <path fill=\"none\" d=\"M-0.03,-5.51 L0.03,5.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.67,58.67)\">\n",
       "    <path fill=\"none\" d=\"M-7.48,6.19 L7.48,-6.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.01,56.15)\">\n",
       "    <path fill=\"none\" d=\"M0.5,8.3 L-0.5,-8.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.96,56.88)\">\n",
       "    <path fill=\"none\" d=\"M-3.58,7.65 L3.58,-7.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.55,53.56)\">\n",
       "    <path fill=\"none\" d=\"M2.66,10.91 L-2.66,-10.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.44,52.93)\">\n",
       "    <path fill=\"none\" d=\"M-4.22,11.57 L4.22,-11.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.42,60.11)\">\n",
       "    <path fill=\"none\" d=\"M-12.7,5.19 L12.7,-5.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.02,51.63)\">\n",
       "    <path fill=\"none\" d=\"M-0.36,12.82 L0.36,-12.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.25,54.52)\">\n",
       "    <path fill=\"none\" d=\"M-8.41,10.16 L8.41,-10.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.53,56.82)\">\n",
       "    <path fill=\"none\" d=\"M-13.1,8.21 L13.1,-8.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.36,74.42)\">\n",
       "    <path fill=\"none\" d=\"M-16.69,-7.36 L16.69,7.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.74,74.28)\">\n",
       "    <path fill=\"none\" d=\"M-9.44,-6.89 L9.44,6.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.81,74.94)\">\n",
       "    <path fill=\"none\" d=\"M1.46,-7.09 L-1.46,7.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.54,75.4)\">\n",
       "    <path fill=\"none\" d=\"M-4.07,-7.64 L4.07,7.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.09,78)\">\n",
       "    <path fill=\"none\" d=\"M-1.27,-10.14 L1.27,10.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.63,78.91)\">\n",
       "    <path fill=\"none\" d=\"M-7.03,-11.19 L7.03,11.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.91,70.19)\">\n",
       "    <path fill=\"none\" d=\"M-17.96,-3.56 L17.96,3.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.64,70.49)\">\n",
       "    <path fill=\"none\" d=\"M-3.49,-3 L3.49,3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.45,71.34)\">\n",
       "    <path fill=\"none\" d=\"M2.2,-3.61 L-2.2,3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.67,77.42)\">\n",
       "    <path fill=\"none\" d=\"M-12.45,-9.97 L12.45,9.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.16,60.17)\">\n",
       "    <path fill=\"none\" d=\"M16.26,5.27 L-16.26,-5.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.5,67.31)\">\n",
       "    <path fill=\"none\" d=\"M17.7,-1.01 L-17.7,1.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.26,77.95)\">\n",
       "    <path fill=\"none\" d=\"M11.84,-10.46 L-11.84,10.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.84,74.52)\">\n",
       "    <path fill=\"none\" d=\"M15.76,-7.41 L-15.76,7.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.23,71.09)\">\n",
       "    <path fill=\"none\" d=\"M19.08,-4.4 L-19.08,4.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.7,63.85)\">\n",
       "    <path fill=\"none\" d=\"M19.52,2.06 L-19.52,-2.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.49\" stroke=\"#D3D3D3\" id=\"img-f163df1f-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-f163df1f-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" id=\"img-f163df1f-4\">\n",
       "  <g transform=\"translate(89.88,34.09)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.65,74.23)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.62,66.16)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.23,56.13)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.46,51.18)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.58,56.68)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.1,9.4)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.54,13.07)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.76,10.34)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.93,8.33)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.43,18.94)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,26.78)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.72,51.19)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.4,46.14)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.3,47.61)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.48,40.96)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.27,39.7)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.22,54.06)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.42,37.09)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.88,42.87)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.45,47.48)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,82.68)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.87,82.4)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.01,83.72)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.47,84.64)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.57,89.85)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.64,91.67)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.21,74.21)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.67,74.81)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.29,76.53)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.72,88.68)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(18.7,54.19)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.38,68.45)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.91,89.74)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(20.07,82.87)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.84,76.03)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,61.54)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-f163df1f-5\">\n",
       "  <g transform=\"translate(89.88,34.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Gowtham</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.65,74.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Sahaanah</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.62,66.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Snega</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.23,56.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Senthilmani</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.46,51.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Sakthivel </text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.58,56.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Steve</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.1,9.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Tarun</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.54,13.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Surya</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.76,10.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Annamalai</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.93,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Bani Immanuel</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.43,18.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Indrajith</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,26.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Prakash</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.72,51.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Vijaya rajan</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.4,46.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Ashin</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.3,47.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Ranjith kumar</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.48,40.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Mohammed</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.27,39.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Selventhiran</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.22,54.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Adithya</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.42,37.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Praveenkumar</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.88,42.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Aashika</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.45,47.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">latchiya</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,82.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Navin</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.87,82.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">sushanta</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.01,83.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Dharani</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.47,84.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Prabhakaran</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.57,89.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Saujanya</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.64,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Sai Preethi</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.21,74.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Deepasri</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.67,74.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Vinod</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.29,76.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Rithika</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.72,88.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Bharani</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(18.7,54.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Naveen</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.38,68.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Nigitha</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.91,89.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Nitheesh Kumar</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(20.07,82.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Sashwatha</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.84,76.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Vignesh</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,61.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Rohit</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-a0c6ec63\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.49\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-a0c6ec63-1\">\n",
       "  <g transform=\"translate(96.56,45.11)\">\n",
       "    <path fill=\"none\" d=\"M-5.72,-9.44 L5.72,9.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.67,42.64)\">\n",
       "    <path fill=\"none\" d=\"M-8.26,-7.21 L8.26,7.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.73,45.38)\">\n",
       "    <path fill=\"none\" d=\"M-10.41,-9.92 L10.41,9.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.49,21.75)\">\n",
       "    <path fill=\"none\" d=\"M-5.75,10.74 L5.75,-10.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(102.21,23.58)\">\n",
       "    <path fill=\"none\" d=\"M-10.78,9.19 L10.78,-9.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.82,22.21)\">\n",
       "    <path fill=\"none\" d=\"M6.12,10.3 L-6.12,-10.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.91,21.21)\">\n",
       "    <path fill=\"none\" d=\"M-0.02,11.17 L0.02,-11.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.66,26.52)\">\n",
       "    <path fill=\"none\" d=\"M-14.73,6.66 L14.73,-6.66 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.76,30.44)\">\n",
       "    <path fill=\"none\" d=\"M-17.53,3.23 L17.53,-3.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.8,42.64)\">\n",
       "    <path fill=\"none\" d=\"M6.74,-7.12 L-6.74,7.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.14,40.12)\">\n",
       "    <path fill=\"none\" d=\"M15.56,-5.28 L-15.56,5.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.09,40.85)\">\n",
       "    <path fill=\"none\" d=\"M10.85,-5.73 L-10.85,5.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.68,37.53)\">\n",
       "    <path fill=\"none\" d=\"M17.85,-3.03 L-17.85,3.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.58,36.9)\">\n",
       "    <path fill=\"none\" d=\"M10,-2.28 L-10,2.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.55,44.08)\">\n",
       "    <path fill=\"none\" d=\"M1.94,-8.29 L-1.94,8.29 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.15,35.59)\">\n",
       "    <path fill=\"none\" d=\"M14.33,-1.28 L-14.33,1.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.38,38.48)\">\n",
       "    <path fill=\"none\" d=\"M5.64,-3.3 L-5.64,3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.67,40.79)\">\n",
       "    <path fill=\"none\" d=\"M1.67,-5.02 L-1.67,5.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.44,65.18)\">\n",
       "    <path fill=\"none\" d=\"M-8.32,7.69 L8.32,-7.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.55,62.7)\">\n",
       "    <path fill=\"none\" d=\"M-11.4,10.18 L11.4,-10.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.61,65.45)\">\n",
       "    <path fill=\"none\" d=\"M-13.1,7.68 L13.1,-7.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.38,78.46)\">\n",
       "    <path fill=\"none\" d=\"M-3.23,-2.88 L3.23,2.88 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.76,78.32)\">\n",
       "    <path fill=\"none\" d=\"M1.81,-2.55 L-1.81,2.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.83,78.98)\">\n",
       "    <path fill=\"none\" d=\"M13.59,-4.08 L-13.59,4.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.56,79.44)\">\n",
       "    <path fill=\"none\" d=\"M7.21,-4.13 L-7.21,4.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.11,82.04)\">\n",
       "    <path fill=\"none\" d=\"M10.72,-6.68 L-10.72,6.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.64,82.95)\">\n",
       "    <path fill=\"none\" d=\"M4.94,-7.18 L-4.94,7.18 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.93,74.22)\">\n",
       "    <path fill=\"none\" d=\"M-3.86,0.01 L3.86,-0.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.66,74.52)\">\n",
       "    <path fill=\"none\" d=\"M6.57,-0.21 L-6.57,0.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.47,75.38)\">\n",
       "    <path fill=\"none\" d=\"M14.77,-0.99 L-14.77,0.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.68,81.45)\">\n",
       "    <path fill=\"none\" d=\"M-0.03,-5.51 L0.03,5.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.67,58.67)\">\n",
       "    <path fill=\"none\" d=\"M-7.48,6.19 L7.48,-6.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.01,56.15)\">\n",
       "    <path fill=\"none\" d=\"M0.5,8.3 L-0.5,-8.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.96,56.88)\">\n",
       "    <path fill=\"none\" d=\"M-3.58,7.65 L3.58,-7.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.55,53.56)\">\n",
       "    <path fill=\"none\" d=\"M2.66,10.91 L-2.66,-10.91 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.44,52.93)\">\n",
       "    <path fill=\"none\" d=\"M-4.22,11.57 L4.22,-11.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.42,60.11)\">\n",
       "    <path fill=\"none\" d=\"M-12.7,5.19 L12.7,-5.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.02,51.63)\">\n",
       "    <path fill=\"none\" d=\"M-0.36,12.82 L0.36,-12.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.25,54.52)\">\n",
       "    <path fill=\"none\" d=\"M-8.41,10.16 L8.41,-10.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.53,56.82)\">\n",
       "    <path fill=\"none\" d=\"M-13.1,8.21 L13.1,-8.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.36,74.42)\">\n",
       "    <path fill=\"none\" d=\"M-16.69,-7.36 L16.69,7.36 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.74,74.28)\">\n",
       "    <path fill=\"none\" d=\"M-9.44,-6.89 L9.44,6.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.81,74.94)\">\n",
       "    <path fill=\"none\" d=\"M1.46,-7.09 L-1.46,7.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.54,75.4)\">\n",
       "    <path fill=\"none\" d=\"M-4.07,-7.64 L4.07,7.64 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.09,78)\">\n",
       "    <path fill=\"none\" d=\"M-1.27,-10.14 L1.27,10.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.63,78.91)\">\n",
       "    <path fill=\"none\" d=\"M-7.03,-11.19 L7.03,11.19 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.91,70.19)\">\n",
       "    <path fill=\"none\" d=\"M-17.96,-3.56 L17.96,3.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.64,70.49)\">\n",
       "    <path fill=\"none\" d=\"M-3.49,-3 L3.49,3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.45,71.34)\">\n",
       "    <path fill=\"none\" d=\"M2.2,-3.61 L-2.2,3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(69.67,77.42)\">\n",
       "    <path fill=\"none\" d=\"M-12.45,-9.97 L12.45,9.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.16,60.17)\">\n",
       "    <path fill=\"none\" d=\"M16.26,5.27 L-16.26,-5.27 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.5,67.31)\">\n",
       "    <path fill=\"none\" d=\"M17.7,-1.01 L-17.7,1.01 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.26,77.95)\">\n",
       "    <path fill=\"none\" d=\"M11.84,-10.46 L-11.84,10.46 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(37.84,74.52)\">\n",
       "    <path fill=\"none\" d=\"M15.76,-7.41 L-15.76,7.41 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.23,71.09)\">\n",
       "    <path fill=\"none\" d=\"M19.08,-4.4 L-19.08,4.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(33.7,63.85)\">\n",
       "    <path fill=\"none\" d=\"M19.52,2.06 L-19.52,-2.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.49\" stroke=\"#D3D3D3\" id=\"img-a0c6ec63-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-a0c6ec63-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" id=\"img-a0c6ec63-4\">\n",
       "  <g transform=\"translate(89.88,34.09)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.65,74.23)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.62,66.16)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.23,56.13)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.46,51.18)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.58,56.68)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.1,9.4)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.54,13.07)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.76,10.34)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.93,8.33)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.43,18.94)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,26.78)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.72,51.19)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.4,46.14)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.3,47.61)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.48,40.96)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.27,39.7)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.22,54.06)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.42,37.09)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.88,42.87)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.45,47.48)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,82.68)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.87,82.4)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.01,83.72)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.47,84.64)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.57,89.85)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.64,91.67)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.21,74.21)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.67,74.81)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.29,76.53)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.72,88.68)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(18.7,54.19)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.38,68.45)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.91,89.74)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(20.07,82.87)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.84,76.03)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,61.54)\" fill=\"#60F536\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"2.32\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-a0c6ec63-5\">\n",
       "  <g transform=\"translate(89.88,34.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Gowtham</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.65,74.23)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Sahaanah</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.62,66.16)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Snega</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.23,56.13)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Senthilmani</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(109.46,51.18)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Sakthivel </text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(113.58,56.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Steve</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.1,9.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Tarun</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.54,13.07)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Surya</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.76,10.34)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Annamalai</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.93,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Bani Immanuel</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(123.43,18.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Indrajith</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,26.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Prakash</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.72,51.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Vijaya rajan</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(54.4,46.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Ashin</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.3,47.61)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Ranjith kumar</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.48,40.96)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Mohammed</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.27,39.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Selventhiran</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.22,54.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Adithya</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.42,37.09)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Praveenkumar</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.88,42.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Aashika</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(85.45,47.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">latchiya</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,82.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Navin</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.87,82.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">sushanta</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.01,83.72)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Dharani</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.47,84.64)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Prabhakaran</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(58.57,89.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Saujanya</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.64,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Sai Preethi</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.21,74.21)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Deepasri</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.67,74.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Vinod</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.29,76.53)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Rithika</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.72,88.68)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Bharani</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(18.7,54.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Naveen</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(15.38,68.45)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Nigitha</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(28.91,89.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Nitheesh Kumar</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(20.07,82.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Sashwatha</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(12.84,76.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Vignesh</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,61.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">Rohit</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.34155428264218923cx, -0.34395731097524684cy), (0.5356557486318497cx, 0.10923093904149547cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3512450258118441cx, -0.34980296842615244cy), (0.6316534958878831cx, -0.0036873642348592833cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3498664065957162cx, -0.3487337262492076cy), (0.7030736520068555cx, 0.1271970602221384cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.33991894908606757cx, -0.42017720578542733cy), (0.5350856164887964cx, -0.9359271337765409cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.35161268571617743cx, -0.41337087525501065cy), (0.7176464364905246cx, -0.8546411240003918cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3094451090740008cx, -0.4196255463008923cy), (0.10159071902627093cx, -0.9140552398767582cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.325423848224566cx, -0.4228373378362819cy), (0.3260884050700756cx, -0.9589002847557854cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3600077675372513cx, -0.40386486660764853cy), (0.860042323205978cx, -0.7233228705758279cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.36514758693890154cx, -0.3920895897712375cy), (0.960225309998561cx, -0.5469676053622097cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.30252233967387254cx, -0.3475756375511978cy), (0.07385656472136112cx, -0.005716281861276588cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.21660762924904706cx, 0.3989500918148911cy), (0.39313859058898054cx, 0.5699711409522071cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.23008405539284182cx, 0.41960258254141525cy), (-0.11160653471895055cx, 0.5637565148707694cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2724637605261359cx, 0.42558721258711446cy), (-0.3472450363935092cx, 0.5988903207624269cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.22898218677634619cx, 0.41866398505077596cy), (0.19358014757744324cx, 0.8973922035173713cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2935388615962735cx, 0.3707182026450213cy), (-0.8453747097955568cx, 0.1176471145355573cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.29714717504179045cx, 0.39115272111892574cy), (-0.8980732155094273cx, 0.4395873274715082cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.28186792524925564cx, 0.41993402860907375cy), (-0.6836866066646144cx, 0.9217956857663898cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2904061090544313cx, 0.4106056119329505cy), (-0.8252234247578353cx, 0.7661754378694935cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.29525365821726735cx, 0.40059678475239135cy), (-0.9429476716816786cx, 0.6118788370154743cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.29683073020110456cx, 0.38179025322035426cy), (-0.9593495502688849cx, 0.28301592761095745cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.4931969619160719mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.4931969619160719mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.3253728969374625cx, -0.3817376225920672cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.21952999276259cx, 0.581548478450856cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.25618028046998953cx, 0.3878507916326801cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5518371343365764cx, 0.14701125065831588cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6575256247622647cx, 0.02824728993105552cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7275671616651092cx, 0.160200956564998cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.5496316686374014cx, -0.974366716969901cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7438862252692395cx, -0.8862743766633353cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.08566293116280921cx, -0.9519431635855833cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.32613935635717906cx, -1.0cy), 0.01643989873053573w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.43271124180992304cx, 0.5810704411344181cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.08551030964180284cx, 0.5955083057795045cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.36352851644965556cx, 0.6366267417168612cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.22077824127108658cx, 0.9282053969354671cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.8827332909218408cx, 0.10051452554789853cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9390401100812282cx, 0.44288925695775383cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.7093742514438806cx, 0.9538789227427835cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.8594492533422771cx, 0.7889302581697639cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9820210494289564cx, 0.6246248301351855cy), 0.01643989873053573w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, 0.2769553891986316cy), 0.01643989873053573w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0))  …  Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0)), Compose.FillPrimitive(RGBA{Float64}(0.376195235474317,0.9617686790769119,0.21157900687112507,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.3253728969374625cx, -0.3817376225920672cy), String31(\"Gowtham\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.21952999276259cx, 0.581548478450856cy), String31(\"Sahaanah\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.25618028046998953cx, 0.3878507916326801cy), String31(\"Snega\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5518371343365764cx, 0.14701125065831588cy), String31(\"Senthilmani\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6575256247622647cx, 0.02824728993105552cy), String31(\"Sakthivel \"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7275671616651092cx, 0.160200956564998cy), String31(\"Steve\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5496316686374014cx, -0.974366716969901cy), String31(\"Tarun\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7438862252692395cx, -0.8862743766633353cy), String31(\"Surya\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.08566293116280921cx, -0.9519431635855833cy), String31(\"Annamalai\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.32613935635717906cx, -1.0cy), String31(\"Bani Immanuel\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.43271124180992304cx, 0.5810704411344181cy), String31(\"Deepasri\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.08551030964180284cx, 0.5955083057795045cy), String31(\"Vinod\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.36352851644965556cx, 0.6366267417168612cy), String31(\"Rithika\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.22077824127108658cx, 0.9282053969354671cy), String31(\"Bharani\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.8827332909218408cx, 0.10051452554789853cy), String31(\"Naveen\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9390401100812282cx, 0.44288925695775383cy), String31(\"Nigitha\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.7093742514438806cx, 0.9538789227427835cy), String31(\"Nitheesh Kumar\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.8594492533422771cx, 0.7889302581697639cy), String31(\"Sashwatha\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9820210494289564cx, 0.6246248301351855cy), String31(\"Vignesh\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, 0.2769553891986316cy), String31(\"Rohit\"), Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using Graphs\n",
    "using GraphPlot\n",
    "using DataFrames\n",
    "using Plots\n",
    "\n",
    "# Function for community detection using connected components\n",
    "function detect_communities(graph)\n",
    "    components = connected_components(graph)\n",
    "    community_labels = zeros(Int, nv(graph))\n",
    "\n",
    "    for (i, component) in enumerate(components)\n",
    "        community_labels[component] .= i\n",
    "    end\n",
    "\n",
    "    return community_labels\n",
    "end\n",
    "\n",
    "# Function to visualize the graph with communities\n",
    "function visualize_communities(graph, communities, labels)\n",
    "    node_colors = [RGB(rand(), rand(), rand()) for _ in 1:nv(graph)]\n",
    "    community_colors = node_colors[communities]\n",
    "\n",
    "    gplot(graph, nodelabel=labels, nodefillc=community_colors)\n",
    "end\n",
    "\n",
    "\n",
    "communities = detect_communities(G_2020_2021)\n",
    "visualize_communities(G_2020_2021, communities, labels_2020_2021)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d636eadd",
   "metadata": {},
   "source": [
    "## Overall plot for Community Detection "
   ]
  },
  {
   "attachments": {
    "community%20graph.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "c27545c4",
   "metadata": {},
   "source": [
    "![community%20graph.PNG](attachment:community%20graph.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1d1376c",
   "metadata": {},
   "source": [
    "## Community 1 - Gowtham "
   ]
  },
  {
   "attachments": {
    "gowtham%20community.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "b8206b76",
   "metadata": {},
   "source": [
    "![gowtham%20community.PNG](attachment:gowtham%20community.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0411f88",
   "metadata": {},
   "source": [
    "## Community 2 - Snega"
   ]
  },
  {
   "attachments": {
    "snega%20community.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "8179c3af",
   "metadata": {},
   "source": [
    "![snega%20community.PNG](attachment:snega%20community.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f973b22",
   "metadata": {},
   "source": [
    "## Community 3 - Sahaanah "
   ]
  },
  {
   "attachments": {
    "sahaanah%20community.PNG": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "id": "34f5c8fa",
   "metadata": {},
   "source": [
    "![sahaanah%20community.PNG](attachment:sahaanah%20community.PNG)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1424ab9e",
   "metadata": {},
   "source": [
    "## Inferences:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f39a95d3",
   "metadata": {},
   "source": [
    "The above plots indicate the presence of 3 major communities in the overall network namely Gowtham, Snega and Sahaanah. This means that these communities exist because the nodes Gowtham, Snega and Sahaanah have the most number of connections compared to the other nodes in the network.  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31df0552",
   "metadata": {},
   "source": [
    "# Bonus "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b190a9f",
   "metadata": {},
   "source": [
    "## Recommending similar persons "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0912b56d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       ">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-4e99c621-1\">\n",
       "  <g transform=\"translate(56.34,40.71)\">\n",
       "    <path fill=\"none\" d=\"M-0.08,-14.81 L0.08,14.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.99,69.48)\">\n",
       "    <path fill=\"none\" d=\"M-0.59,5.32 L0.59,-5.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.34,66.45)\">\n",
       "    <path fill=\"none\" d=\"M13.57,8.76 L-13.57,-8.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.43,67.07)\">\n",
       "    <path fill=\"none\" d=\"M1.2,2.95 L-1.2,-2.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.78,64.03)\">\n",
       "    <path fill=\"none\" d=\"M15.78,6.57 L-15.78,-6.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.88,35.84)\">\n",
       "    <path fill=\"none\" d=\"M-17.52,-0.95 L17.52,0.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.49,45.8)\">\n",
       "    <path fill=\"none\" d=\"M-8.03,-9.89 L8.03,9.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.5,38.74)\">\n",
       "    <path fill=\"none\" d=\"M-14.91,1.65 L14.91,-1.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.11,48.7)\">\n",
       "    <path fill=\"none\" d=\"M-5.44,-6.98 L5.44,6.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.79,40.85)\">\n",
       "    <path fill=\"none\" d=\"M18.67,-3.61 L-18.67,3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.01,36.2)\">\n",
       "    <path fill=\"none\" d=\"M12.39,0.61 L-12.39,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.3,38.45)\">\n",
       "    <path fill=\"none\" d=\"M9.13,-1.3 L-9.13,1.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.69,33.64)\">\n",
       "    <path fill=\"none\" d=\"M3.25,2.33 L-3.25,-2.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.9,46.06)\">\n",
       "    <path fill=\"none\" d=\"M2,-7.89 L-2,7.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.15,34.2)\">\n",
       "    <path fill=\"none\" d=\"M7.39,2.2 L-7.39,-2.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.96,24.25)\">\n",
       "    <path fill=\"none\" d=\"M11.23,11.58 L-11.23,-11.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.81,43.24)\">\n",
       "    <path fill=\"none\" d=\"M-1.27,-5.07 L1.27,5.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.58,39.56)\">\n",
       "    <path fill=\"none\" d=\"M-3.86,-1.92 L3.86,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93,26.82)\">\n",
       "    <path fill=\"none\" d=\"M-14.42,9.21 L14.42,-9.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.35,39.42)\">\n",
       "    <path fill=\"none\" d=\"M-8.4,-2.1 L8.4,2.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.51,22.61)\">\n",
       "    <path fill=\"none\" d=\"M2.47,13 L-2.47,-13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.21,33.9)\">\n",
       "    <path fill=\"none\" d=\"M15.24,2.68 L-15.24,-2.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.16,38.15)\">\n",
       "    <path fill=\"none\" d=\"M-15.12,-1.12 L15.12,1.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.69,42.76)\">\n",
       "    <path fill=\"none\" d=\"M15.88,-5.31 L-15.88,5.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.03,36.61)\">\n",
       "    <path fill=\"none\" d=\"M-11.99,0.24 L11.99,-0.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.51,42.92)\">\n",
       "    <path fill=\"none\" d=\"M-17.62,-5.51 L17.62,5.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.1,43.83)\">\n",
       "    <path fill=\"none\" d=\"M-9.52,-6.07 L9.52,6.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.13,46.65)\">\n",
       "    <path fill=\"none\" d=\"M-12.61,-8.85 L12.61,8.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.48,49.88)\">\n",
       "    <path fill=\"none\" d=\"M-4.75,-11.75 L4.75,11.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.34,40.24)\">\n",
       "    <path fill=\"none\" d=\"M-12.39,-2.94 L12.39,2.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.1,43.03)\">\n",
       "    <path fill=\"none\" d=\"M-13.3,-5.49 L13.3,5.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.85,40.4)\">\n",
       "    <path fill=\"none\" d=\"M-16.87,-3.17 L16.87,3.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.87,36.25)\">\n",
       "    <path fill=\"none\" d=\"M-7.83,0.52 L7.83,-0.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.4,24.8)\">\n",
       "    <path fill=\"none\" d=\"M-10.18,11.02 L10.18,-11.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.17,23.47)\">\n",
       "    <path fill=\"none\" d=\"M-6.32,12.21 L6.32,-12.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.64,43.95)\">\n",
       "    <path fill=\"none\" d=\"M4.69,-5.93 L-4.69,5.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.36,45.81)\">\n",
       "    <path fill=\"none\" d=\"M-1.83,-7.65 L1.83,7.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.31,38.14)\">\n",
       "    <path fill=\"none\" d=\"M19.09,-1.13 L-19.09,1.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.67,41.1)\">\n",
       "    <path fill=\"none\" d=\"M11.88,-3.69 L-11.88,3.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.63,22.76)\">\n",
       "    <path fill=\"none\" d=\"M-2.19,12.86 L2.19,-12.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.04,42.26)\">\n",
       "    <path fill=\"none\" d=\"M1.67,-4.12 L-1.67,4.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.77,45.46)\">\n",
       "    <path fill=\"none\" d=\"M-16.05,-7.83 L16.05,7.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.83,46.85)\">\n",
       "    <path fill=\"none\" d=\"M9.31,-8.92 L-9.31,8.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.24,37)\">\n",
       "    <path fill=\"none\" d=\"M5.16,-0.08 L-5.16,0.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64,33.41)\">\n",
       "    <path fill=\"none\" d=\"M11.51,3.03 L-11.51,-3.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.39,50.81)\">\n",
       "    <path fill=\"none\" d=\"M-8.64,-5.17 L8.64,5.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.52,72.67)\">\n",
       "    <path fill=\"none\" d=\"M14.42,8.95 L-14.42,-8.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.62,46.16)\">\n",
       "    <path fill=\"none\" d=\"M-3.36,-9.4 L3.36,9.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.91,48.41)\">\n",
       "    <path fill=\"none\" d=\"M-0.44,-7.11 L0.44,7.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.64,75.01)\">\n",
       "    <path fill=\"none\" d=\"M10.87,11.07 L-10.87,-11.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.04,63.86)\">\n",
       "    <path fill=\"none\" d=\"M-17.87,0.89 L17.87,-0.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.39,60.83)\">\n",
       "    <path fill=\"none\" d=\"M-2.98,2.96 L2.98,-2.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.29,43.6)\">\n",
       "    <path fill=\"none\" d=\"M5.31,-11.98 L-5.31,11.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.15,59.05)\">\n",
       "    <path fill=\"none\" d=\"M-6.09,-3.08 L6.09,3.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.5,56.01)\">\n",
       "    <path fill=\"none\" d=\"M6.26,-0.62 L-6.26,0.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.75,44.15)\">\n",
       "    <path fill=\"none\" d=\"M1.19,-11.37 L-1.19,11.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.07,56.23)\">\n",
       "    <path fill=\"none\" d=\"M-3,-5.44 L3,5.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.42,53.2)\">\n",
       "    <path fill=\"none\" d=\"M10.31,-3.1 L-10.31,3.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.52,64.71)\">\n",
       "    <path fill=\"none\" d=\"M-12.41,1.61 L12.41,-1.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.87,61.68)\">\n",
       "    <path fill=\"none\" d=\"M1.07,3.61 L-1.07,-3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.11,56.29)\">\n",
       "    <path fill=\"none\" d=\"M-20.5,-0.47 L20.5,0.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.83,52.55)\">\n",
       "    <path fill=\"none\" d=\"M0.09,-9.03 L-0.09,9.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.68,70.97)\">\n",
       "    <path fill=\"none\" d=\"M-14.56,7.34 L14.56,-7.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.03,67.94)\">\n",
       "    <path fill=\"none\" d=\"M-0.35,9.84 L0.35,-9.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.55,68.91)\">\n",
       "    <path fill=\"none\" d=\"M-9.73,5.25 L9.73,-5.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.9,65.87)\">\n",
       "    <path fill=\"none\" d=\"M3.87,7.84 L-3.87,-7.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.6,52.41)\">\n",
       "    <path fill=\"none\" d=\"M4.3,-9.23 L-4.3,9.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.81,43.86)\">\n",
       "    <path fill=\"none\" d=\"M-6,-11.74 L6,11.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.41,51.14)\">\n",
       "    <path fill=\"none\" d=\"M10.63,-10.68 L-10.63,10.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.29,52.71)\">\n",
       "    <path fill=\"none\" d=\"M-5.72,-3.28 L5.72,3.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.29,49.6)\">\n",
       "    <path fill=\"none\" d=\"M7.8,-12.1 L-7.8,12.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.6,63.81)\">\n",
       "    <path fill=\"none\" d=\"M-18.19,6.43 L18.19,-6.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.77,55.91)\">\n",
       "    <path fill=\"none\" d=\"M12.54,-6.22 L-12.54,6.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.35,56.82)\">\n",
       "    <path fill=\"none\" d=\"M4.62,-4.98 L-4.62,4.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.96,72.27)\">\n",
       "    <path fill=\"none\" d=\"M5.08,14.21 L-5.08,-14.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.38,59.64)\">\n",
       "    <path fill=\"none\" d=\"M7.03,-2.63 L-7.03,2.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.6,53.23)\">\n",
       "    <path fill=\"none\" d=\"M-7.87,8.56 L7.87,-8.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.36,56.02)\">\n",
       "    <path fill=\"none\" d=\"M-8.34,5.94 L8.34,-5.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.11,53.39)\">\n",
       "    <path fill=\"none\" d=\"M-12.09,8.57 L12.09,-8.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,77.27)\">\n",
       "    <path fill=\"none\" d=\"M-4.91,-13.15 L4.91,13.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.13,49.24)\">\n",
       "    <path fill=\"none\" d=\"M-3.99,12.38 L3.99,-12.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.55,66.5)\">\n",
       "    <path fill=\"none\" d=\"M18.41,-3.3 L-18.41,3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.24,68.71)\">\n",
       "    <path fill=\"none\" d=\"M5.36,-4.82 L-5.36,4.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.8,67.64)\">\n",
       "    <path fill=\"none\" d=\"M13.26,-4.24 L-13.26,4.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.89,56.94)\">\n",
       "    <path fill=\"none\" d=\"M9.39,5.14 L-9.39,-5.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.89,65.46)\">\n",
       "    <path fill=\"none\" d=\"M7.15,-2.09 L-7.15,2.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.61,58.8)\">\n",
       "    <path fill=\"none\" d=\"M2.25,2.93 L-2.25,-2.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.46,69.97)\">\n",
       "    <path fill=\"none\" d=\"M-17.12,-6.48 L17.12,6.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.8,71.58)\">\n",
       "    <path fill=\"none\" d=\"M6.94,-7.62 L-6.94,7.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.88,71.36)\">\n",
       "    <path fill=\"none\" d=\"M3.29,-7.26 L-3.29,7.26 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.32,71.76)\">\n",
       "    <path fill=\"none\" d=\"M11.13,-7.97 L-11.13,7.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.55,66.62)\">\n",
       "    <path fill=\"none\" d=\"M2.24,-2.63 L-2.24,2.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.3,55.25)\">\n",
       "    <path fill=\"none\" d=\"M6.39,6.56 L-6.39,-6.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.03,58.45)\">\n",
       "    <path fill=\"none\" d=\"M-10.67,3.84 L10.67,-3.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.68,66.68)\">\n",
       "    <path fill=\"none\" d=\"M-19.18,-3.48 L19.18,3.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.08,59.84)\">\n",
       "    <path fill=\"none\" d=\"M13.89,2.69 L-13.89,-2.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.91,69.03)\">\n",
       "    <path fill=\"none\" d=\"M17.16,-5.62 L-17.16,5.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.74,60.16)\">\n",
       "    <path fill=\"none\" d=\"M-19.91,3.07 L19.91,-3.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.9,63.46)\">\n",
       "    <path fill=\"none\" d=\"M-3.73,5.49 L3.73,-5.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.59,65.67)\">\n",
       "    <path fill=\"none\" d=\"M8.09,7.82 L-8.09,-7.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.15,64.61)\">\n",
       "    <path fill=\"none\" d=\"M0.6,6.51 L-0.6,-6.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.24,53.91)\">\n",
       "    <path fill=\"none\" d=\"M3.42,-2.06 L-3.42,2.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.24,62.43)\">\n",
       "    <path fill=\"none\" d=\"M5.62,4.63 L-5.62,-4.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.96,55.77)\">\n",
       "    <path fill=\"none\" d=\"M10.72,-0.89 L-10.72,0.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.15,68.55)\">\n",
       "    <path fill=\"none\" d=\"M6.95,10.57 L-6.95,-10.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.34,69.73)\">\n",
       "    <path fill=\"none\" d=\"M-11.08,11.84 L11.08,-11.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.91,48.09)\">\n",
       "    <path fill=\"none\" d=\"M-9.33,-7.73 L9.33,7.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.23,68.33)\">\n",
       "    <path fill=\"none\" d=\"M10.73,10.47 L-10.73,-10.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.67,68.73)\">\n",
       "    <path fill=\"none\" d=\"M2.89,10.65 L-2.89,-10.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.9,63.58)\">\n",
       "    <path fill=\"none\" d=\"M11.02,5.99 L-11.02,-5.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.27,51.06)\">\n",
       "    <path fill=\"none\" d=\"M-2.5,-4.55 L2.5,4.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.65,52.22)\">\n",
       "    <path fill=\"none\" d=\"M6.79,-3.79 L-6.79,3.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.26,66)\">\n",
       "    <path fill=\"none\" d=\"M2.74,-7.94 L-2.74,7.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.84,46.96)\">\n",
       "    <path fill=\"none\" d=\"M-2.98,8.6 L2.98,-8.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.61,43.37)\">\n",
       "    <path fill=\"none\" d=\"M2.56,12.16 L-2.56,-12.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-4e99c621-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-4e99c621-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-4e99c621-4\">\n",
       "  <g transform=\"translate(56.25,24.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.26,76.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.14,71.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.55,34.79)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.78,40.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.22,36.89)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.36,44.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.31,82.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.8,35.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.39,40.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.56,87.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.35,64.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.15,30.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.58,55.22)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.07,31.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.69,11.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.41,49.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.31,66.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,55.78)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.93,42.22)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.77,16.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.64,79.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.37,74.94)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.48,41.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.81,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.2,30.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.1,39.4)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.16,48.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.85,36.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.77,70.82)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.81,48.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,50.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.49,87.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.03,56.41)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.73,62.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.05,63.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,43.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.98,49.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.49,43.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.49,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.53,35.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.57,12.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.38,70.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.76,74.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.13,10.05)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.88,72.41)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.05,51.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.05,68.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.49,54.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(125.2,77.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.86,80.29)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.25,82.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.39,39.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.03,79.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.91,80.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.38,70.36)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.11,45.31)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.03,8.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.87,47.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.32,54.03)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,70.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.43,56.81)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.09,75.19)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.25,37.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.78,29.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-4e99c621-5\">\n",
       "  <g transform=\"translate(56.25,24.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.26,76.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.14,71.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.55,34.79)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.78,40.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.22,36.89)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.36,44.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.31,82.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.8,35.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.39,40.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.56,87.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.35,64.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.15,30.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.58,55.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.07,31.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.69,11.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.41,49.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.31,66.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,55.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.93,42.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.77,16.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.64,79.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.37,74.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.48,41.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.81,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.2,30.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.1,39.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.16,48.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.85,36.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.77,70.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.81,48.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,50.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.49,87.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.03,56.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.73,62.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.05,63.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,43.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.98,49.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.49,43.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.49,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.53,35.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.57,12.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.38,70.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.76,74.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.13,10.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.88,72.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.05,51.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.05,68.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.49,54.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(125.2,77.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.86,80.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.25,82.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.39,39.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.03,79.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.91,80.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.38,70.36)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.11,45.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.03,8.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.87,47.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.32,54.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,70.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.43,56.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.09,75.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.25,37.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.78,29.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/html": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\"\n",
       "     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n",
       "     version=\"1.2\"\n",
       "     width=\"141.42mm\" height=\"100mm\" viewBox=\"0 0 141.42 100\"\n",
       "     stroke=\"none\"\n",
       "     fill=\"#000000\"\n",
       "     stroke-width=\"0.3\"\n",
       "     font-size=\"3.88\"\n",
       "\n",
       "     id=\"img-98990721\">\n",
       "<defs>\n",
       "  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n",
       "    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n",
       "  </marker>\n",
       "</defs>\n",
       "<g stroke-width=\"0.37\" fill=\"#000000\" fill-opacity=\"0.000\" stroke=\"#D3D3D3\" id=\"img-98990721-1\">\n",
       "  <g transform=\"translate(56.34,40.71)\">\n",
       "    <path fill=\"none\" d=\"M-0.08,-14.81 L0.08,14.81 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.99,69.48)\">\n",
       "    <path fill=\"none\" d=\"M-0.59,5.32 L0.59,-5.32 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.34,66.45)\">\n",
       "    <path fill=\"none\" d=\"M13.57,8.76 L-13.57,-8.76 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(89.43,67.07)\">\n",
       "    <path fill=\"none\" d=\"M1.2,2.95 L-1.2,-2.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.78,64.03)\">\n",
       "    <path fill=\"none\" d=\"M15.78,6.57 L-15.78,-6.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.88,35.84)\">\n",
       "    <path fill=\"none\" d=\"M-17.52,-0.95 L17.52,0.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.49,45.8)\">\n",
       "    <path fill=\"none\" d=\"M-8.03,-9.89 L8.03,9.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.5,38.74)\">\n",
       "    <path fill=\"none\" d=\"M-14.91,1.65 L14.91,-1.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.11,48.7)\">\n",
       "    <path fill=\"none\" d=\"M-5.44,-6.98 L5.44,6.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.79,40.85)\">\n",
       "    <path fill=\"none\" d=\"M18.67,-3.61 L-18.67,3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.01,36.2)\">\n",
       "    <path fill=\"none\" d=\"M12.39,0.61 L-12.39,-0.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.3,38.45)\">\n",
       "    <path fill=\"none\" d=\"M9.13,-1.3 L-9.13,1.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.69,33.64)\">\n",
       "    <path fill=\"none\" d=\"M3.25,2.33 L-3.25,-2.33 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.9,46.06)\">\n",
       "    <path fill=\"none\" d=\"M2,-7.89 L-2,7.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.15,34.2)\">\n",
       "    <path fill=\"none\" d=\"M7.39,2.2 L-7.39,-2.2 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.96,24.25)\">\n",
       "    <path fill=\"none\" d=\"M11.23,11.58 L-11.23,-11.58 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.81,43.24)\">\n",
       "    <path fill=\"none\" d=\"M-1.27,-5.07 L1.27,5.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.58,39.56)\">\n",
       "    <path fill=\"none\" d=\"M-3.86,-1.92 L3.86,1.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93,26.82)\">\n",
       "    <path fill=\"none\" d=\"M-14.42,9.21 L14.42,-9.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.35,39.42)\">\n",
       "    <path fill=\"none\" d=\"M-8.4,-2.1 L8.4,2.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.51,22.61)\">\n",
       "    <path fill=\"none\" d=\"M2.47,13 L-2.47,-13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.21,33.9)\">\n",
       "    <path fill=\"none\" d=\"M15.24,2.68 L-15.24,-2.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.16,38.15)\">\n",
       "    <path fill=\"none\" d=\"M-15.12,-1.12 L15.12,1.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.69,42.76)\">\n",
       "    <path fill=\"none\" d=\"M15.88,-5.31 L-15.88,5.31 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.03,36.61)\">\n",
       "    <path fill=\"none\" d=\"M-11.99,0.24 L11.99,-0.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.51,42.92)\">\n",
       "    <path fill=\"none\" d=\"M-17.62,-5.51 L17.62,5.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.1,43.83)\">\n",
       "    <path fill=\"none\" d=\"M-9.52,-6.07 L9.52,6.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.13,46.65)\">\n",
       "    <path fill=\"none\" d=\"M-12.61,-8.85 L12.61,8.85 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.48,49.88)\">\n",
       "    <path fill=\"none\" d=\"M-4.75,-11.75 L4.75,11.75 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.34,40.24)\">\n",
       "    <path fill=\"none\" d=\"M-12.39,-2.94 L12.39,2.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.1,43.03)\">\n",
       "    <path fill=\"none\" d=\"M-13.3,-5.49 L13.3,5.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(95.85,40.4)\">\n",
       "    <path fill=\"none\" d=\"M-16.87,-3.17 L16.87,3.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.87,36.25)\">\n",
       "    <path fill=\"none\" d=\"M-7.83,0.52 L7.83,-0.52 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(88.4,24.8)\">\n",
       "    <path fill=\"none\" d=\"M-10.18,11.02 L10.18,-11.02 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.17,23.47)\">\n",
       "    <path fill=\"none\" d=\"M-6.32,12.21 L6.32,-12.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.64,43.95)\">\n",
       "    <path fill=\"none\" d=\"M4.69,-5.93 L-4.69,5.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.36,45.81)\">\n",
       "    <path fill=\"none\" d=\"M-1.83,-7.65 L1.83,7.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.31,38.14)\">\n",
       "    <path fill=\"none\" d=\"M19.09,-1.13 L-19.09,1.13 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.67,41.1)\">\n",
       "    <path fill=\"none\" d=\"M11.88,-3.69 L-11.88,3.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.63,22.76)\">\n",
       "    <path fill=\"none\" d=\"M-2.19,12.86 L2.19,-12.86 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.04,42.26)\">\n",
       "    <path fill=\"none\" d=\"M1.67,-4.12 L-1.67,4.12 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(94.77,45.46)\">\n",
       "    <path fill=\"none\" d=\"M-16.05,-7.83 L16.05,7.83 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.83,46.85)\">\n",
       "    <path fill=\"none\" d=\"M9.31,-8.92 L-9.31,8.92 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.24,37)\">\n",
       "    <path fill=\"none\" d=\"M5.16,-0.08 L-5.16,0.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64,33.41)\">\n",
       "    <path fill=\"none\" d=\"M11.51,3.03 L-11.51,-3.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(46.39,50.81)\">\n",
       "    <path fill=\"none\" d=\"M-8.64,-5.17 L8.64,5.17 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(103.52,72.67)\">\n",
       "    <path fill=\"none\" d=\"M14.42,8.95 L-14.42,-8.95 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.62,46.16)\">\n",
       "    <path fill=\"none\" d=\"M-3.36,-9.4 L3.36,9.4 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.91,48.41)\">\n",
       "    <path fill=\"none\" d=\"M-0.44,-7.11 L0.44,7.11 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.64,75.01)\">\n",
       "    <path fill=\"none\" d=\"M10.87,11.07 L-10.87,-11.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.04,63.86)\">\n",
       "    <path fill=\"none\" d=\"M-17.87,0.89 L17.87,-0.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.39,60.83)\">\n",
       "    <path fill=\"none\" d=\"M-2.98,2.96 L2.98,-2.96 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.29,43.6)\">\n",
       "    <path fill=\"none\" d=\"M5.31,-11.98 L-5.31,11.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.15,59.05)\">\n",
       "    <path fill=\"none\" d=\"M-6.09,-3.08 L6.09,3.08 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.5,56.01)\">\n",
       "    <path fill=\"none\" d=\"M6.26,-0.62 L-6.26,0.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.75,44.15)\">\n",
       "    <path fill=\"none\" d=\"M1.19,-11.37 L-1.19,11.37 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.07,56.23)\">\n",
       "    <path fill=\"none\" d=\"M-3,-5.44 L3,5.44 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.42,53.2)\">\n",
       "    <path fill=\"none\" d=\"M10.31,-3.1 L-10.31,3.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(73.52,64.71)\">\n",
       "    <path fill=\"none\" d=\"M-12.41,1.61 L12.41,-1.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.87,61.68)\">\n",
       "    <path fill=\"none\" d=\"M1.07,3.61 L-1.07,-3.61 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.11,56.29)\">\n",
       "    <path fill=\"none\" d=\"M-20.5,-0.47 L20.5,0.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.83,52.55)\">\n",
       "    <path fill=\"none\" d=\"M0.09,-9.03 L-0.09,9.03 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.68,70.97)\">\n",
       "    <path fill=\"none\" d=\"M-14.56,7.34 L14.56,-7.34 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.03,67.94)\">\n",
       "    <path fill=\"none\" d=\"M-0.35,9.84 L0.35,-9.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.55,68.91)\">\n",
       "    <path fill=\"none\" d=\"M-9.73,5.25 L9.73,-5.25 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(60.9,65.87)\">\n",
       "    <path fill=\"none\" d=\"M3.87,7.84 L-3.87,-7.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.6,52.41)\">\n",
       "    <path fill=\"none\" d=\"M4.3,-9.23 L-4.3,9.23 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.81,43.86)\">\n",
       "    <path fill=\"none\" d=\"M-6,-11.74 L6,11.74 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.41,51.14)\">\n",
       "    <path fill=\"none\" d=\"M10.63,-10.68 L-10.63,10.68 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(49.29,52.71)\">\n",
       "    <path fill=\"none\" d=\"M-5.72,-3.28 L5.72,3.28 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.29,49.6)\">\n",
       "    <path fill=\"none\" d=\"M7.8,-12.1 L-7.8,12.1 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.6,63.81)\">\n",
       "    <path fill=\"none\" d=\"M-18.19,6.43 L18.19,-6.43 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.77,55.91)\">\n",
       "    <path fill=\"none\" d=\"M12.54,-6.22 L-12.54,6.22 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.35,56.82)\">\n",
       "    <path fill=\"none\" d=\"M4.62,-4.98 L-4.62,4.98 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.96,72.27)\">\n",
       "    <path fill=\"none\" d=\"M5.08,14.21 L-5.08,-14.21 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.38,59.64)\">\n",
       "    <path fill=\"none\" d=\"M7.03,-2.63 L-7.03,2.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.6,53.23)\">\n",
       "    <path fill=\"none\" d=\"M-7.87,8.56 L7.87,-8.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.36,56.02)\">\n",
       "    <path fill=\"none\" d=\"M-8.34,5.94 L8.34,-5.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(101.11,53.39)\">\n",
       "    <path fill=\"none\" d=\"M-12.09,8.57 L12.09,-8.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(93.11,77.27)\">\n",
       "    <path fill=\"none\" d=\"M-4.91,-13.15 L4.91,13.15 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(92.13,49.24)\">\n",
       "    <path fill=\"none\" d=\"M-3.99,12.38 L3.99,-12.38 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.55,66.5)\">\n",
       "    <path fill=\"none\" d=\"M18.41,-3.3 L-18.41,3.3 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.24,68.71)\">\n",
       "    <path fill=\"none\" d=\"M5.36,-4.82 L-5.36,4.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.8,67.64)\">\n",
       "    <path fill=\"none\" d=\"M13.26,-4.24 L-13.26,4.24 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(76.89,56.94)\">\n",
       "    <path fill=\"none\" d=\"M9.39,5.14 L-9.39,-5.14 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(78.89,65.46)\">\n",
       "    <path fill=\"none\" d=\"M7.15,-2.09 L-7.15,2.09 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.61,58.8)\">\n",
       "    <path fill=\"none\" d=\"M2.25,2.93 L-2.25,-2.93 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.46,69.97)\">\n",
       "    <path fill=\"none\" d=\"M-17.12,-6.48 L17.12,6.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(79.8,71.58)\">\n",
       "    <path fill=\"none\" d=\"M6.94,-7.62 L-6.94,7.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(83.88,71.36)\">\n",
       "    <path fill=\"none\" d=\"M3.29,-7.26 L-3.29,7.26 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(75.32,71.76)\">\n",
       "    <path fill=\"none\" d=\"M11.13,-7.97 L-11.13,7.97 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(84.55,66.62)\">\n",
       "    <path fill=\"none\" d=\"M2.24,-2.63 L-2.24,2.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.3,55.25)\">\n",
       "    <path fill=\"none\" d=\"M6.39,6.56 L-6.39,-6.56 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(100.03,58.45)\">\n",
       "    <path fill=\"none\" d=\"M-10.67,3.84 L10.67,-3.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.68,66.68)\">\n",
       "    <path fill=\"none\" d=\"M-19.18,-3.48 L19.18,3.48 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.08,59.84)\">\n",
       "    <path fill=\"none\" d=\"M13.89,2.69 L-13.89,-2.69 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.91,69.03)\">\n",
       "    <path fill=\"none\" d=\"M17.16,-5.62 L-17.16,5.62 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(34.74,60.16)\">\n",
       "    <path fill=\"none\" d=\"M-19.91,3.07 L19.91,-3.07 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(51.9,63.46)\">\n",
       "    <path fill=\"none\" d=\"M-3.73,5.49 L3.73,-5.49 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.59,65.67)\">\n",
       "    <path fill=\"none\" d=\"M8.09,7.82 L-8.09,-7.82 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.15,64.61)\">\n",
       "    <path fill=\"none\" d=\"M0.6,6.51 L-0.6,-6.51 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(61.24,53.91)\">\n",
       "    <path fill=\"none\" d=\"M3.42,-2.06 L-3.42,2.06 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.24,62.43)\">\n",
       "    <path fill=\"none\" d=\"M5.62,4.63 L-5.62,-4.63 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.96,55.77)\">\n",
       "    <path fill=\"none\" d=\"M10.72,-0.89 L-10.72,0.89 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.15,68.55)\">\n",
       "    <path fill=\"none\" d=\"M6.95,10.57 L-6.95,-10.57 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(44.34,69.73)\">\n",
       "    <path fill=\"none\" d=\"M-11.08,11.84 L11.08,-11.84 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(45.91,48.09)\">\n",
       "    <path fill=\"none\" d=\"M-9.33,-7.73 L9.33,7.73 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.23,68.33)\">\n",
       "    <path fill=\"none\" d=\"M10.73,10.47 L-10.73,-10.47 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.67,68.73)\">\n",
       "    <path fill=\"none\" d=\"M2.89,10.65 L-2.89,-10.65 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.9,63.58)\">\n",
       "    <path fill=\"none\" d=\"M11.02,5.99 L-11.02,-5.99 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.27,51.06)\">\n",
       "    <path fill=\"none\" d=\"M-2.5,-4.55 L2.5,4.55 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(64.65,52.22)\">\n",
       "    <path fill=\"none\" d=\"M6.79,-3.79 L-6.79,3.79 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.26,66)\">\n",
       "    <path fill=\"none\" d=\"M2.74,-7.94 L-2.74,7.94 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.84,46.96)\">\n",
       "    <path fill=\"none\" d=\"M-2.98,8.6 L2.98,-8.6 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(53.61,43.37)\">\n",
       "    <path fill=\"none\" d=\"M2.56,12.16 L-2.56,-12.16 \" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g stroke-width=\"0.37\" stroke=\"#D3D3D3\" id=\"img-98990721-2\">\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-98990721-3\">\n",
       "</g>\n",
       "<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-98990721-4\">\n",
       "  <g transform=\"translate(56.25,24.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.26,76.08)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.14,71.26)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.55,34.79)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.78,40.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.22,36.89)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.36,44.8)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.31,82.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.8,35.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.39,40.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.56,87.14)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.35,64.84)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.15,30.39)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.58,55.22)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.07,31.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.69,11.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.41,49.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.31,66.55)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,55.78)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.93,42.22)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.77,16.74)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.64,79.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.37,74.94)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.48,41.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.81,8.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.2,30.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.1,39.4)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.16,48.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.85,36.33)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.77,70.82)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.81,48.95)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,50.76)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.49,87.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.03,56.41)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.73,62.87)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.05,63.5)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,43.59)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.98,49.17)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.49,43.91)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.49,91.67)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.53,35.6)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.57,12.7)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.38,70.12)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.76,74.54)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.13,10.05)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.88,72.41)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.05,51.01)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.05,68.04)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.49,54.73)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(125.2,77.06)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.86,80.29)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.25,82.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.39,39.38)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.03,79.85)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.91,80.65)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.38,70.36)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.11,45.31)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.03,8.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.87,47.62)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.32,54.03)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,70.48)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.43,56.81)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.09,75.19)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.25,37.1)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.78,29.93)\">\n",
       "    <circle cx=\"0\" cy=\"0\" r=\"1.75\" class=\"primitive\"/>\n",
       "  </g>\n",
       "</g>\n",
       "<g font-size=\"4\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#000000\" id=\"img-98990721-5\">\n",
       "  <g transform=\"translate(56.25,24.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">1</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(86.26,76.08)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">2</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.14,71.26)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">3</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(38.55,34.79)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">4</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.78,40.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">5</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(77.22,36.89)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">6</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(36.36,44.8)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">7</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(119.31,82.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">8</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.8,35.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">9</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.39,40.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">10</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.56,87.14)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">11</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(48.35,64.84)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">12</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(68.15,30.39)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">13</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.58,55.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">14</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.07,31.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">15</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(52.69,11.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">16</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.41,49.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">17</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(59.31,66.55)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">18</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(11.79,55.78)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">19</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.93,42.22)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">20</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(108.77,16.74)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">21</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(55.64,79.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">22</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(65.37,74.94)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">23</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(97.48,41.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">24</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.81,8.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">25</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(43.2,30.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">26</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(111.1,39.4)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">27</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(42.16,48.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">28</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(104.85,36.33)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">29</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(16.77,70.82)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">30</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(115.81,48.95)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">31</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.98,50.76)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">32</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(67.49,87.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">33</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.03,56.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">34</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(87.73,62.87)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">35</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(13.05,63.5)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">36</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(105.46,43.59)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">37</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(106.98,49.17)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">38</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(114.49,43.91)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">39</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(98.49,91.67)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">40</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(96.53,35.6)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">41</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(99.57,12.7)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">42</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(47.38,70.12)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">43</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(74.76,74.54)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">44</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(91.13,10.05)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">45</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(57.88,72.41)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">46</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(66.05,51.01)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">47</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(70.05,68.04)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">48</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.49,54.73)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">49</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(125.2,77.06)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">50</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(71.86,80.29)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">51</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(32.25,82.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">52</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(35.39,39.38)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">53</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(80.03,79.85)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">54</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(62.91,80.65)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">55</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(81.38,70.36)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">56</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.11,45.31)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">57</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(82.03,8.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">58</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(72.87,47.62)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">59</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(112.32,54.03)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">60</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(129.64,70.48)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">61</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(56.43,56.81)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">62</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.09,75.19)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">63</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(63.25,37.1)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">64</text>\n",
       "    </g>\n",
       "  </g>\n",
       "  <g transform=\"translate(50.78,29.93)\">\n",
       "    <g class=\"primitive\">\n",
       "      <text text-anchor=\"middle\" dy=\"0.35em\">65</text>\n",
       "    </g>\n",
       "  </g>\n",
       "</g>\n",
       "<script> <![CDATA[\n",
       "(function(N){var k=/[\\.\\/]/,L=/\\s*,\\s*/,C=function(a,d){return a-d},a,v,y={n:{}},M=function(){for(var a=0,d=this.length;a<d;a++)if(\"undefined\"!=typeof this[a])return this[a]},A=function(){for(var a=this.length;--a;)if(\"undefined\"!=typeof this[a])return this[a]},w=function(k,d){k=String(k);var f=v,n=Array.prototype.slice.call(arguments,2),u=w.listeners(k),p=0,b,q=[],e={},l=[],r=a;l.firstDefined=M;l.lastDefined=A;a=k;for(var s=v=0,x=u.length;s<x;s++)\"zIndex\"in u[s]&&(q.push(u[s].zIndex),0>u[s].zIndex&&\n",
       "(e[u[s].zIndex]=u[s]));for(q.sort(C);0>q[p];)if(b=e[q[p++] ],l.push(b.apply(d,n)),v)return v=f,l;for(s=0;s<x;s++)if(b=u[s],\"zIndex\"in b)if(b.zIndex==q[p]){l.push(b.apply(d,n));if(v)break;do if(p++,(b=e[q[p] ])&&l.push(b.apply(d,n)),v)break;while(b)}else e[b.zIndex]=b;else if(l.push(b.apply(d,n)),v)break;v=f;a=r;return l};w._events=y;w.listeners=function(a){a=a.split(k);var d=y,f,n,u,p,b,q,e,l=[d],r=[];u=0;for(p=a.length;u<p;u++){e=[];b=0;for(q=l.length;b<q;b++)for(d=l[b].n,f=[d[a[u] ],d[\"*\"] ],n=2;n--;)if(d=\n",
       "f[n])e.push(d),r=r.concat(d.f||[]);l=e}return r};w.on=function(a,d){a=String(a);if(\"function\"!=typeof d)return function(){};for(var f=a.split(L),n=0,u=f.length;n<u;n++)(function(a){a=a.split(k);for(var b=y,f,e=0,l=a.length;e<l;e++)b=b.n,b=b.hasOwnProperty(a[e])&&b[a[e] ]||(b[a[e] ]={n:{}});b.f=b.f||[];e=0;for(l=b.f.length;e<l;e++)if(b.f[e]==d){f=!0;break}!f&&b.f.push(d)})(f[n]);return function(a){+a==+a&&(d.zIndex=+a)}};w.f=function(a){var d=[].slice.call(arguments,1);return function(){w.apply(null,\n",
       "[a,null].concat(d).concat([].slice.call(arguments,0)))}};w.stop=function(){v=1};w.nt=function(k){return k?(new RegExp(\"(?:\\\\.|\\\\/|^)\"+k+\"(?:\\\\.|\\\\/|$)\")).test(a):a};w.nts=function(){return a.split(k)};w.off=w.unbind=function(a,d){if(a){var f=a.split(L);if(1<f.length)for(var n=0,u=f.length;n<u;n++)w.off(f[n],d);else{for(var f=a.split(k),p,b,q,e,l=[y],n=0,u=f.length;n<u;n++)for(e=0;e<l.length;e+=q.length-2){q=[e,1];p=l[e].n;if(\"*\"!=f[n])p[f[n] ]&&q.push(p[f[n] ]);else for(b in p)p.hasOwnProperty(b)&&\n",
       "q.push(p[b]);l.splice.apply(l,q)}n=0;for(u=l.length;n<u;n++)for(p=l[n];p.n;){if(d){if(p.f){e=0;for(f=p.f.length;e<f;e++)if(p.f[e]==d){p.f.splice(e,1);break}!p.f.length&&delete p.f}for(b in p.n)if(p.n.hasOwnProperty(b)&&p.n[b].f){q=p.n[b].f;e=0;for(f=q.length;e<f;e++)if(q[e]==d){q.splice(e,1);break}!q.length&&delete p.n[b].f}}else for(b in delete p.f,p.n)p.n.hasOwnProperty(b)&&p.n[b].f&&delete p.n[b].f;p=p.n}}}else w._events=y={n:{}}};w.once=function(a,d){var f=function(){w.unbind(a,f);return d.apply(this,\n",
       "arguments)};return w.on(a,f)};w.version=\"0.4.2\";w.toString=function(){return\"You are running Eve 0.4.2\"};\"undefined\"!=typeof module&&module.exports?module.exports=w:\"function\"===typeof define&&define.amd?define(\"eve\",[],function(){return w}):N.eve=w})(this);\n",
       "(function(N,k){\"function\"===typeof define&&define.amd?define(\"Snap.svg\",[\"eve\"],function(L){return k(N,L)}):k(N,N.eve)})(this,function(N,k){var L=function(a){var k={},y=N.requestAnimationFrame||N.webkitRequestAnimationFrame||N.mozRequestAnimationFrame||N.oRequestAnimationFrame||N.msRequestAnimationFrame||function(a){setTimeout(a,16)},M=Array.isArray||function(a){return a instanceof Array||\"[object Array]\"==Object.prototype.toString.call(a)},A=0,w=\"M\"+(+new Date).toString(36),z=function(a){if(null==\n",
       "a)return this.s;var b=this.s-a;this.b+=this.dur*b;this.B+=this.dur*b;this.s=a},d=function(a){if(null==a)return this.spd;this.spd=a},f=function(a){if(null==a)return this.dur;this.s=this.s*a/this.dur;this.dur=a},n=function(){delete k[this.id];this.update();a(\"mina.stop.\"+this.id,this)},u=function(){this.pdif||(delete k[this.id],this.update(),this.pdif=this.get()-this.b)},p=function(){this.pdif&&(this.b=this.get()-this.pdif,delete this.pdif,k[this.id]=this)},b=function(){var a;if(M(this.start)){a=[];\n",
       "for(var b=0,e=this.start.length;b<e;b++)a[b]=+this.start[b]+(this.end[b]-this.start[b])*this.easing(this.s)}else a=+this.start+(this.end-this.start)*this.easing(this.s);this.set(a)},q=function(){var l=0,b;for(b in k)if(k.hasOwnProperty(b)){var e=k[b],f=e.get();l++;e.s=(f-e.b)/(e.dur/e.spd);1<=e.s&&(delete k[b],e.s=1,l--,function(b){setTimeout(function(){a(\"mina.finish.\"+b.id,b)})}(e));e.update()}l&&y(q)},e=function(a,r,s,x,G,h,J){a={id:w+(A++).toString(36),start:a,end:r,b:s,s:0,dur:x-s,spd:1,get:G,\n",
       "set:h,easing:J||e.linear,status:z,speed:d,duration:f,stop:n,pause:u,resume:p,update:b};k[a.id]=a;r=0;for(var K in k)if(k.hasOwnProperty(K)&&(r++,2==r))break;1==r&&y(q);return a};e.time=Date.now||function(){return+new Date};e.getById=function(a){return k[a]||null};e.linear=function(a){return a};e.easeout=function(a){return Math.pow(a,1.7)};e.easein=function(a){return Math.pow(a,0.48)};e.easeinout=function(a){if(1==a)return 1;if(0==a)return 0;var b=0.48-a/1.04,e=Math.sqrt(0.1734+b*b);a=e-b;a=Math.pow(Math.abs(a),\n",
       "1/3)*(0>a?-1:1);b=-e-b;b=Math.pow(Math.abs(b),1/3)*(0>b?-1:1);a=a+b+0.5;return 3*(1-a)*a*a+a*a*a};e.backin=function(a){return 1==a?1:a*a*(2.70158*a-1.70158)};e.backout=function(a){if(0==a)return 0;a-=1;return a*a*(2.70158*a+1.70158)+1};e.elastic=function(a){return a==!!a?a:Math.pow(2,-10*a)*Math.sin(2*(a-0.075)*Math.PI/0.3)+1};e.bounce=function(a){a<1/2.75?a*=7.5625*a:a<2/2.75?(a-=1.5/2.75,a=7.5625*a*a+0.75):a<2.5/2.75?(a-=2.25/2.75,a=7.5625*a*a+0.9375):(a-=2.625/2.75,a=7.5625*a*a+0.984375);return a};\n",
       "return N.mina=e}(\"undefined\"==typeof k?function(){}:k),C=function(){function a(c,t){if(c){if(c.tagName)return x(c);if(y(c,\"array\")&&a.set)return a.set.apply(a,c);if(c instanceof e)return c;if(null==t)return c=G.doc.querySelector(c),x(c)}return new s(null==c?\"100%\":c,null==t?\"100%\":t)}function v(c,a){if(a){\"#text\"==c&&(c=G.doc.createTextNode(a.text||\"\"));\"string\"==typeof c&&(c=v(c));if(\"string\"==typeof a)return\"xlink:\"==a.substring(0,6)?c.getAttributeNS(m,a.substring(6)):\"xml:\"==a.substring(0,4)?c.getAttributeNS(la,\n",
       "a.substring(4)):c.getAttribute(a);for(var da in a)if(a[h](da)){var b=J(a[da]);b?\"xlink:\"==da.substring(0,6)?c.setAttributeNS(m,da.substring(6),b):\"xml:\"==da.substring(0,4)?c.setAttributeNS(la,da.substring(4),b):c.setAttribute(da,b):c.removeAttribute(da)}}else c=G.doc.createElementNS(la,c);return c}function y(c,a){a=J.prototype.toLowerCase.call(a);return\"finite\"==a?isFinite(c):\"array\"==a&&(c instanceof Array||Array.isArray&&Array.isArray(c))?!0:\"null\"==a&&null===c||a==typeof c&&null!==c||\"object\"==\n",
       "a&&c===Object(c)||$.call(c).slice(8,-1).toLowerCase()==a}function M(c){if(\"function\"==typeof c||Object(c)!==c)return c;var a=new c.constructor,b;for(b in c)c[h](b)&&(a[b]=M(c[b]));return a}function A(c,a,b){function m(){var e=Array.prototype.slice.call(arguments,0),f=e.join(\"\\u2400\"),d=m.cache=m.cache||{},l=m.count=m.count||[];if(d[h](f)){a:for(var e=l,l=f,B=0,H=e.length;B<H;B++)if(e[B]===l){e.push(e.splice(B,1)[0]);break a}return b?b(d[f]):d[f]}1E3<=l.length&&delete d[l.shift()];l.push(f);d[f]=c.apply(a,\n",
       "e);return b?b(d[f]):d[f]}return m}function w(c,a,b,m,e,f){return null==e?(c-=b,a-=m,c||a?(180*I.atan2(-a,-c)/C+540)%360:0):w(c,a,e,f)-w(b,m,e,f)}function z(c){return c%360*C/180}function d(c){var a=[];c=c.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g,function(c,b,m){m=m.split(/\\s*,\\s*|\\s+/);\"rotate\"==b&&1==m.length&&m.push(0,0);\"scale\"==b&&(2<m.length?m=m.slice(0,2):2==m.length&&m.push(0,0),1==m.length&&m.push(m[0],0,0));\"skewX\"==b?a.push([\"m\",1,0,I.tan(z(m[0])),1,0,0]):\"skewY\"==b?a.push([\"m\",1,I.tan(z(m[0])),\n",
       "0,1,0,0]):a.push([b.charAt(0)].concat(m));return c});return a}function f(c,t){var b=O(c),m=new a.Matrix;if(b)for(var e=0,f=b.length;e<f;e++){var h=b[e],d=h.length,B=J(h[0]).toLowerCase(),H=h[0]!=B,l=H?m.invert():0,E;\"t\"==B&&2==d?m.translate(h[1],0):\"t\"==B&&3==d?H?(d=l.x(0,0),B=l.y(0,0),H=l.x(h[1],h[2]),l=l.y(h[1],h[2]),m.translate(H-d,l-B)):m.translate(h[1],h[2]):\"r\"==B?2==d?(E=E||t,m.rotate(h[1],E.x+E.width/2,E.y+E.height/2)):4==d&&(H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.rotate(h[1],H,l)):m.rotate(h[1],\n",
       "h[2],h[3])):\"s\"==B?2==d||3==d?(E=E||t,m.scale(h[1],h[d-1],E.x+E.width/2,E.y+E.height/2)):4==d?H?(H=l.x(h[2],h[3]),l=l.y(h[2],h[3]),m.scale(h[1],h[1],H,l)):m.scale(h[1],h[1],h[2],h[3]):5==d&&(H?(H=l.x(h[3],h[4]),l=l.y(h[3],h[4]),m.scale(h[1],h[2],H,l)):m.scale(h[1],h[2],h[3],h[4])):\"m\"==B&&7==d&&m.add(h[1],h[2],h[3],h[4],h[5],h[6])}return m}function n(c,t){if(null==t){var m=!0;t=\"linearGradient\"==c.type||\"radialGradient\"==c.type?c.node.getAttribute(\"gradientTransform\"):\"pattern\"==c.type?c.node.getAttribute(\"patternTransform\"):\n",
       "c.node.getAttribute(\"transform\");if(!t)return new a.Matrix;t=d(t)}else t=a._.rgTransform.test(t)?J(t).replace(/\\.{3}|\\u2026/g,c._.transform||aa):d(t),y(t,\"array\")&&(t=a.path?a.path.toString.call(t):J(t)),c._.transform=t;var b=f(t,c.getBBox(1));if(m)return b;c.matrix=b}function u(c){c=c.node.ownerSVGElement&&x(c.node.ownerSVGElement)||c.node.parentNode&&x(c.node.parentNode)||a.select(\"svg\")||a(0,0);var t=c.select(\"defs\"),t=null==t?!1:t.node;t||(t=r(\"defs\",c.node).node);return t}function p(c){return c.node.ownerSVGElement&&\n",
       "x(c.node.ownerSVGElement)||a.select(\"svg\")}function b(c,a,m){function b(c){if(null==c)return aa;if(c==+c)return c;v(B,{width:c});try{return B.getBBox().width}catch(a){return 0}}function h(c){if(null==c)return aa;if(c==+c)return c;v(B,{height:c});try{return B.getBBox().height}catch(a){return 0}}function e(b,B){null==a?d[b]=B(c.attr(b)||0):b==a&&(d=B(null==m?c.attr(b)||0:m))}var f=p(c).node,d={},B=f.querySelector(\".svg---mgr\");B||(B=v(\"rect\"),v(B,{x:-9E9,y:-9E9,width:10,height:10,\"class\":\"svg---mgr\",\n",
       "fill:\"none\"}),f.appendChild(B));switch(c.type){case \"rect\":e(\"rx\",b),e(\"ry\",h);case \"image\":e(\"width\",b),e(\"height\",h);case \"text\":e(\"x\",b);e(\"y\",h);break;case \"circle\":e(\"cx\",b);e(\"cy\",h);e(\"r\",b);break;case \"ellipse\":e(\"cx\",b);e(\"cy\",h);e(\"rx\",b);e(\"ry\",h);break;case \"line\":e(\"x1\",b);e(\"x2\",b);e(\"y1\",h);e(\"y2\",h);break;case \"marker\":e(\"refX\",b);e(\"markerWidth\",b);e(\"refY\",h);e(\"markerHeight\",h);break;case \"radialGradient\":e(\"fx\",b);e(\"fy\",h);break;case \"tspan\":e(\"dx\",b);e(\"dy\",h);break;default:e(a,\n",
       "b)}f.removeChild(B);return d}function q(c){y(c,\"array\")||(c=Array.prototype.slice.call(arguments,0));for(var a=0,b=0,m=this.node;this[a];)delete this[a++];for(a=0;a<c.length;a++)\"set\"==c[a].type?c[a].forEach(function(c){m.appendChild(c.node)}):m.appendChild(c[a].node);for(var h=m.childNodes,a=0;a<h.length;a++)this[b++]=x(h[a]);return this}function e(c){if(c.snap in E)return E[c.snap];var a=this.id=V(),b;try{b=c.ownerSVGElement}catch(m){}this.node=c;b&&(this.paper=new s(b));this.type=c.tagName;this.anims=\n",
       "{};this._={transform:[]};c.snap=a;E[a]=this;\"g\"==this.type&&(this.add=q);if(this.type in{g:1,mask:1,pattern:1})for(var e in s.prototype)s.prototype[h](e)&&(this[e]=s.prototype[e])}function l(c){this.node=c}function r(c,a){var b=v(c);a.appendChild(b);return x(b)}function s(c,a){var b,m,f,d=s.prototype;if(c&&\"svg\"==c.tagName){if(c.snap in E)return E[c.snap];var l=c.ownerDocument;b=new e(c);m=c.getElementsByTagName(\"desc\")[0];f=c.getElementsByTagName(\"defs\")[0];m||(m=v(\"desc\"),m.appendChild(l.createTextNode(\"Created with Snap\")),\n",
       "b.node.appendChild(m));f||(f=v(\"defs\"),b.node.appendChild(f));b.defs=f;for(var ca in d)d[h](ca)&&(b[ca]=d[ca]);b.paper=b.root=b}else b=r(\"svg\",G.doc.body),v(b.node,{height:a,version:1.1,width:c,xmlns:la});return b}function x(c){return!c||c instanceof e||c instanceof l?c:c.tagName&&\"svg\"==c.tagName.toLowerCase()?new s(c):c.tagName&&\"object\"==c.tagName.toLowerCase()&&\"image/svg+xml\"==c.type?new s(c.contentDocument.getElementsByTagName(\"svg\")[0]):new e(c)}a.version=\"0.3.0\";a.toString=function(){return\"Snap v\"+\n",
       "this.version};a._={};var G={win:N,doc:N.document};a._.glob=G;var h=\"hasOwnProperty\",J=String,K=parseFloat,U=parseInt,I=Math,P=I.max,Q=I.min,Y=I.abs,C=I.PI,aa=\"\",$=Object.prototype.toString,F=/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i;a._.separator=\n",
       "RegExp(\"[,\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]+\");var S=RegExp(\"[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\"),X={hs:1,rg:1},W=RegExp(\"([a-z])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\n",
       "\"ig\"),ma=RegExp(\"([rstm])[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)\",\"ig\"),Z=RegExp(\"(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*\",\n",
       "\"ig\"),na=0,ba=\"S\"+(+new Date).toString(36),V=function(){return ba+(na++).toString(36)},m=\"http://www.w3.org/1999/xlink\",la=\"http://www.w3.org/2000/svg\",E={},ca=a.url=function(c){return\"url('#\"+c+\"')\"};a._.$=v;a._.id=V;a.format=function(){var c=/\\{([^\\}]+)\\}/g,a=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,b=function(c,b,m){var h=m;b.replace(a,function(c,a,b,m,t){a=a||m;h&&(a in h&&(h=h[a]),\"function\"==typeof h&&t&&(h=h()))});return h=(null==h||h==m?c:h)+\"\"};return function(a,m){return J(a).replace(c,\n",
       "function(c,a){return b(c,a,m)})}}();a._.clone=M;a._.cacher=A;a.rad=z;a.deg=function(c){return 180*c/C%360};a.angle=w;a.is=y;a.snapTo=function(c,a,b){b=y(b,\"finite\")?b:10;if(y(c,\"array\"))for(var m=c.length;m--;){if(Y(c[m]-a)<=b)return c[m]}else{c=+c;m=a%c;if(m<b)return a-m;if(m>c-b)return a-m+c}return a};a.getRGB=A(function(c){if(!c||(c=J(c)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};if(\"none\"==c)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ka};!X[h](c.toLowerCase().substring(0,\n",
       "2))&&\"#\"!=c.charAt()&&(c=T(c));if(!c)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka};var b,m,e,f,d;if(c=c.match(F)){c[2]&&(e=U(c[2].substring(5),16),m=U(c[2].substring(3,5),16),b=U(c[2].substring(1,3),16));c[3]&&(e=U((d=c[3].charAt(3))+d,16),m=U((d=c[3].charAt(2))+d,16),b=U((d=c[3].charAt(1))+d,16));c[4]&&(d=c[4].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b*=2.55),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m*=2.55),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e*=2.55),\"rgba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),\n",
       "d[3]&&\"%\"==d[3].slice(-1)&&(f/=100));if(c[5])return d=c[5].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsba\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsb2rgb(b,m,e,f);if(c[6])return d=c[6].split(S),b=K(d[0]),\"%\"==d[0].slice(-1)&&(b/=100),m=K(d[1]),\"%\"==d[1].slice(-1)&&(m/=100),e=K(d[2]),\"%\"==d[2].slice(-1)&&(e/=100),\n",
       "\"deg\"!=d[0].slice(-3)&&\"\\u00b0\"!=d[0].slice(-1)||(b/=360),\"hsla\"==c[1].toLowerCase().slice(0,4)&&(f=K(d[3])),d[3]&&\"%\"==d[3].slice(-1)&&(f/=100),a.hsl2rgb(b,m,e,f);b=Q(I.round(b),255);m=Q(I.round(m),255);e=Q(I.round(e),255);f=Q(P(f,0),1);c={r:b,g:m,b:e,toString:ka};c.hex=\"#\"+(16777216|e|m<<8|b<<16).toString(16).slice(1);c.opacity=y(f,\"finite\")?f:1;return c}return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ka}},a);a.hsb=A(function(c,b,m){return a.hsb2rgb(c,b,m).hex});a.hsl=A(function(c,b,m){return a.hsl2rgb(c,\n",
       "b,m).hex});a.rgb=A(function(c,a,b,m){if(y(m,\"finite\")){var e=I.round;return\"rgba(\"+[e(c),e(a),e(b),+m.toFixed(2)]+\")\"}return\"#\"+(16777216|b|a<<8|c<<16).toString(16).slice(1)});var T=function(c){var a=G.doc.getElementsByTagName(\"head\")[0]||G.doc.getElementsByTagName(\"svg\")[0];T=A(function(c){if(\"red\"==c.toLowerCase())return\"rgb(255, 0, 0)\";a.style.color=\"rgb(255, 0, 0)\";a.style.color=c;c=G.doc.defaultView.getComputedStyle(a,aa).getPropertyValue(\"color\");return\"rgb(255, 0, 0)\"==c?null:c});return T(c)},\n",
       "qa=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},ra=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},ka=function(){return 1==this.opacity||null==this.opacity?this.hex:\"rgba(\"+[this.r,this.g,this.b,this.opacity]+\")\"},D=function(c,b,m){null==b&&y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&(m=c.b,b=c.g,c=c.r);null==b&&y(c,string)&&(m=a.getRGB(c),c=m.r,b=m.g,m=m.b);if(1<c||1<b||1<m)c/=255,b/=255,m/=255;return[c,b,m]},oa=function(c,b,m,e){c=I.round(255*c);b=I.round(255*b);m=I.round(255*m);c={r:c,\n",
       "g:b,b:m,opacity:y(e,\"finite\")?e:1,hex:a.rgb(c,b,m),toString:ka};y(e,\"finite\")&&(c.opacity=e);return c};a.color=function(c){var b;y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c?(b=a.hsb2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c?(b=a.hsl2rgb(c),c.r=b.r,c.g=b.g,c.b=b.b,c.opacity=1,c.hex=b.hex):(y(c,\"string\")&&(c=a.getRGB(c)),y(c,\"object\")&&\"r\"in c&&\"g\"in c&&\"b\"in c&&!(\"error\"in c)?(b=a.rgb2hsl(c),c.h=b.h,c.s=b.s,c.l=b.l,b=a.rgb2hsb(c),c.v=b.b):(c={hex:\"none\"},\n",
       "c.r=c.g=c.b=c.h=c.s=c.v=c.l=-1,c.error=1));c.toString=ka;return c};a.hsb2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"b\"in c&&(b=c.b,a=c.s,c=c.h,m=c.o);var e,h,d;c=360*c%360/60;d=b*a;a=d*(1-Y(c%2-1));b=e=h=b-d;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.hsl2rgb=function(c,a,b,m){y(c,\"object\")&&\"h\"in c&&\"s\"in c&&\"l\"in c&&(b=c.l,a=c.s,c=c.h);if(1<c||1<a||1<b)c/=360,a/=100,b/=100;var e,h,d;c=360*c%360/60;d=2*a*(0.5>b?b:1-b);a=d*(1-Y(c%2-1));b=e=\n",
       "h=b-d/2;c=~~c;b+=[d,a,0,0,a,d][c];e+=[a,d,d,a,0,0][c];h+=[0,0,a,d,d,a][c];return oa(b,e,h,m)};a.rgb2hsb=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e;m=P(c,a,b);e=m-Q(c,a,b);c=((0==e?0:m==c?(a-b)/e:m==a?(b-c)/e+2:(c-a)/e+4)+360)%6*60/360;return{h:c,s:0==e?0:e/m,b:m,toString:qa}};a.rgb2hsl=function(c,a,b){b=D(c,a,b);c=b[0];a=b[1];b=b[2];var m,e,h;m=P(c,a,b);e=Q(c,a,b);h=m-e;c=((0==h?0:m==c?(a-b)/h:m==a?(b-c)/h+2:(c-a)/h+4)+360)%6*60/360;m=(m+e)/2;return{h:c,s:0==h?0:0.5>m?h/(2*m):h/(2-2*\n",
       "m),l:m,toString:ra}};a.parsePathString=function(c){if(!c)return null;var b=a.path(c);if(b.arr)return a.path.clone(b.arr);var m={a:7,c:6,o:2,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,u:3,z:0},e=[];y(c,\"array\")&&y(c[0],\"array\")&&(e=a.path.clone(c));e.length||J(c).replace(W,function(c,a,b){var h=[];c=a.toLowerCase();b.replace(Z,function(c,a){a&&h.push(+a)});\"m\"==c&&2<h.length&&(e.push([a].concat(h.splice(0,2))),c=\"l\",a=\"m\"==a?\"l\":\"L\");\"o\"==c&&1==h.length&&e.push([a,h[0] ]);if(\"r\"==c)e.push([a].concat(h));else for(;h.length>=\n",
       "m[c]&&(e.push([a].concat(h.splice(0,m[c]))),m[c]););});e.toString=a.path.toString;b.arr=a.path.clone(e);return e};var O=a.parseTransformString=function(c){if(!c)return null;var b=[];y(c,\"array\")&&y(c[0],\"array\")&&(b=a.path.clone(c));b.length||J(c).replace(ma,function(c,a,m){var e=[];a.toLowerCase();m.replace(Z,function(c,a){a&&e.push(+a)});b.push([a].concat(e))});b.toString=a.path.toString;return b};a._.svgTransform2string=d;a._.rgTransform=RegExp(\"^[a-z][\\t\\n\\x0B\\f\\r \\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*-?\\\\.?\\\\d\",\n",
       "\"i\");a._.transform2matrix=f;a._unit2px=b;a._.getSomeDefs=u;a._.getSomeSVG=p;a.select=function(c){return x(G.doc.querySelector(c))};a.selectAll=function(c){c=G.doc.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};setInterval(function(){for(var c in E)if(E[h](c)){var a=E[c],b=a.node;(\"svg\"!=a.type&&!b.ownerSVGElement||\"svg\"==a.type&&(!b.parentNode||\"ownerSVGElement\"in b.parentNode&&!b.ownerSVGElement))&&delete E[c]}},1E4);(function(c){function m(c){function a(c,\n",
       "b){var m=v(c.node,b);(m=(m=m&&m.match(d))&&m[2])&&\"#\"==m.charAt()&&(m=m.substring(1))&&(f[m]=(f[m]||[]).concat(function(a){var m={};m[b]=ca(a);v(c.node,m)}))}function b(c){var a=v(c.node,\"xlink:href\");a&&\"#\"==a.charAt()&&(a=a.substring(1))&&(f[a]=(f[a]||[]).concat(function(a){c.attr(\"xlink:href\",\"#\"+a)}))}var e=c.selectAll(\"*\"),h,d=/^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/;c=[];for(var f={},l=0,E=e.length;l<E;l++){h=e[l];a(h,\"fill\");a(h,\"stroke\");a(h,\"filter\");a(h,\"mask\");a(h,\"clip-path\");b(h);var t=v(h.node,\n",
       "\"id\");t&&(v(h.node,{id:h.id}),c.push({old:t,id:h.id}))}l=0;for(E=c.length;l<E;l++)if(e=f[c[l].old])for(h=0,t=e.length;h<t;h++)e[h](c[l].id)}function e(c,a,b){return function(m){m=m.slice(c,a);1==m.length&&(m=m[0]);return b?b(m):m}}function d(c){return function(){var a=c?\"<\"+this.type:\"\",b=this.node.attributes,m=this.node.childNodes;if(c)for(var e=0,h=b.length;e<h;e++)a+=\" \"+b[e].name+'=\"'+b[e].value.replace(/\"/g,'\\\\\"')+'\"';if(m.length){c&&(a+=\">\");e=0;for(h=m.length;e<h;e++)3==m[e].nodeType?a+=m[e].nodeValue:\n",
       "1==m[e].nodeType&&(a+=x(m[e]).toString());c&&(a+=\"</\"+this.type+\">\")}else c&&(a+=\"/>\");return a}}c.attr=function(c,a){if(!c)return this;if(y(c,\"string\"))if(1<arguments.length){var b={};b[c]=a;c=b}else return k(\"snap.util.getattr.\"+c,this).firstDefined();for(var m in c)c[h](m)&&k(\"snap.util.attr.\"+m,this,c[m]);return this};c.getBBox=function(c){if(!a.Matrix||!a.path)return this.node.getBBox();var b=this,m=new a.Matrix;if(b.removed)return a._.box();for(;\"use\"==b.type;)if(c||(m=m.add(b.transform().localMatrix.translate(b.attr(\"x\")||\n",
       "0,b.attr(\"y\")||0))),b.original)b=b.original;else var e=b.attr(\"xlink:href\"),b=b.original=b.node.ownerDocument.getElementById(e.substring(e.indexOf(\"#\")+1));var e=b._,h=a.path.get[b.type]||a.path.get.deflt;try{if(c)return e.bboxwt=h?a.path.getBBox(b.realPath=h(b)):a._.box(b.node.getBBox()),a._.box(e.bboxwt);b.realPath=h(b);b.matrix=b.transform().localMatrix;e.bbox=a.path.getBBox(a.path.map(b.realPath,m.add(b.matrix)));return a._.box(e.bbox)}catch(d){return a._.box()}};var f=function(){return this.string};\n",
       "c.transform=function(c){var b=this._;if(null==c){var m=this;c=new a.Matrix(this.node.getCTM());for(var e=n(this),h=[e],d=new a.Matrix,l=e.toTransformString(),b=J(e)==J(this.matrix)?J(b.transform):l;\"svg\"!=m.type&&(m=m.parent());)h.push(n(m));for(m=h.length;m--;)d.add(h[m]);return{string:b,globalMatrix:c,totalMatrix:d,localMatrix:e,diffMatrix:c.clone().add(e.invert()),global:c.toTransformString(),total:d.toTransformString(),local:l,toString:f}}c instanceof a.Matrix?this.matrix=c:n(this,c);this.node&&\n",
       "(\"linearGradient\"==this.type||\"radialGradient\"==this.type?v(this.node,{gradientTransform:this.matrix}):\"pattern\"==this.type?v(this.node,{patternTransform:this.matrix}):v(this.node,{transform:this.matrix}));return this};c.parent=function(){return x(this.node.parentNode)};c.append=c.add=function(c){if(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){a.add(c)});return this}c=x(c);this.node.appendChild(c.node);c.paper=this.paper}return this};c.appendTo=function(c){c&&(c=x(c),c.append(this));return this};\n",
       "c.prepend=function(c){if(c){if(\"set\"==c.type){var a=this,b;c.forEach(function(c){b?b.after(c):a.prepend(c);b=c});return this}c=x(c);var m=c.parent();this.node.insertBefore(c.node,this.node.firstChild);this.add&&this.add();c.paper=this.paper;this.parent()&&this.parent().add();m&&m.add()}return this};c.prependTo=function(c){c=x(c);c.prepend(this);return this};c.before=function(c){if(\"set\"==c.type){var a=this;c.forEach(function(c){var b=c.parent();a.node.parentNode.insertBefore(c.node,a.node);b&&b.add()});\n",
       "this.parent().add();return this}c=x(c);var b=c.parent();this.node.parentNode.insertBefore(c.node,this.node);this.parent()&&this.parent().add();b&&b.add();c.paper=this.paper;return this};c.after=function(c){c=x(c);var a=c.parent();this.node.nextSibling?this.node.parentNode.insertBefore(c.node,this.node.nextSibling):this.node.parentNode.appendChild(c.node);this.parent()&&this.parent().add();a&&a.add();c.paper=this.paper;return this};c.insertBefore=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,\n",
       "c.node);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.insertAfter=function(c){c=x(c);var a=this.parent();c.node.parentNode.insertBefore(this.node,c.node.nextSibling);this.paper=c.paper;a&&a.add();c.parent()&&c.parent().add();return this};c.remove=function(){var c=this.parent();this.node.parentNode&&this.node.parentNode.removeChild(this.node);delete this.paper;this.removed=!0;c&&c.add();return this};c.select=function(c){return x(this.node.querySelector(c))};c.selectAll=\n",
       "function(c){c=this.node.querySelectorAll(c);for(var b=(a.set||Array)(),m=0;m<c.length;m++)b.push(x(c[m]));return b};c.asPX=function(c,a){null==a&&(a=this.attr(c));return+b(this,c,a)};c.use=function(){var c,a=this.node.id;a||(a=this.id,v(this.node,{id:a}));c=\"linearGradient\"==this.type||\"radialGradient\"==this.type||\"pattern\"==this.type?r(this.type,this.node.parentNode):r(\"use\",this.node.parentNode);v(c.node,{\"xlink:href\":\"#\"+a});c.original=this;return c};var l=/\\S+/g;c.addClass=function(c){var a=(c||\n",
       "\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h,d;if(a.length){for(e=0;d=a[e++];)h=m.indexOf(d),~h||m.push(d);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.removeClass=function(c){var a=(c||\"\").match(l)||[];c=this.node;var b=c.className.baseVal,m=b.match(l)||[],e,h;if(m.length){for(e=0;h=a[e++];)h=m.indexOf(h),~h&&m.splice(h,1);a=m.join(\" \");b!=a&&(c.className.baseVal=a)}return this};c.hasClass=function(c){return!!~(this.node.className.baseVal.match(l)||[]).indexOf(c)};\n",
       "c.toggleClass=function(c,a){if(null!=a)return a?this.addClass(c):this.removeClass(c);var b=(c||\"\").match(l)||[],m=this.node,e=m.className.baseVal,h=e.match(l)||[],d,f,E;for(d=0;E=b[d++];)f=h.indexOf(E),~f?h.splice(f,1):h.push(E);b=h.join(\" \");e!=b&&(m.className.baseVal=b);return this};c.clone=function(){var c=x(this.node.cloneNode(!0));v(c.node,\"id\")&&v(c.node,{id:c.id});m(c);c.insertAfter(this);return c};c.toDefs=function(){u(this).appendChild(this.node);return this};c.pattern=c.toPattern=function(c,\n",
       "a,b,m){var e=r(\"pattern\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,c=c.x);v(e.node,{x:c,y:a,width:b,height:m,patternUnits:\"userSpaceOnUse\",id:e.id,viewBox:[c,a,b,m].join(\" \")});e.node.appendChild(this.node);return e};c.marker=function(c,a,b,m,e,h){var d=r(\"marker\",u(this));null==c&&(c=this.getBBox());y(c,\"object\")&&\"x\"in c&&(a=c.y,b=c.width,m=c.height,e=c.refX||c.cx,h=c.refY||c.cy,c=c.x);v(d.node,{viewBox:[c,a,b,m].join(\" \"),markerWidth:b,markerHeight:m,\n",
       "orient:\"auto\",refX:e||0,refY:h||0,id:d.id});d.node.appendChild(this.node);return d};var E=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);this.attr=c;this.dur=a;b&&(this.easing=b);m&&(this.callback=m)};a._.Animation=E;a.animation=function(c,a,b,m){return new E(c,a,b,m)};c.inAnim=function(){var c=[],a;for(a in this.anims)this.anims[h](a)&&function(a){c.push({anim:new E(a._attrs,a.dur,a.easing,a._callback),mina:a,curStatus:a.status(),status:function(c){return a.status(c)},stop:function(){a.stop()}})}(this.anims[a]);\n",
       "return c};a.animate=function(c,a,b,m,e,h){\"function\"!=typeof e||e.length||(h=e,e=L.linear);var d=L.time();c=L(c,a,d,d+m,L.time,b,e);h&&k.once(\"mina.finish.\"+c.id,h);return c};c.stop=function(){for(var c=this.inAnim(),a=0,b=c.length;a<b;a++)c[a].stop();return this};c.animate=function(c,a,b,m){\"function\"!=typeof b||b.length||(m=b,b=L.linear);c instanceof E&&(m=c.callback,b=c.easing,a=b.dur,c=c.attr);var d=[],f=[],l={},t,ca,n,T=this,q;for(q in c)if(c[h](q)){T.equal?(n=T.equal(q,J(c[q])),t=n.from,ca=\n",
       "n.to,n=n.f):(t=+T.attr(q),ca=+c[q]);var la=y(t,\"array\")?t.length:1;l[q]=e(d.length,d.length+la,n);d=d.concat(t);f=f.concat(ca)}t=L.time();var p=L(d,f,t,t+a,L.time,function(c){var a={},b;for(b in l)l[h](b)&&(a[b]=l[b](c));T.attr(a)},b);T.anims[p.id]=p;p._attrs=c;p._callback=m;k(\"snap.animcreated.\"+T.id,p);k.once(\"mina.finish.\"+p.id,function(){delete T.anims[p.id];m&&m.call(T)});k.once(\"mina.stop.\"+p.id,function(){delete T.anims[p.id]});return T};var T={};c.data=function(c,b){var m=T[this.id]=T[this.id]||\n",
       "{};if(0==arguments.length)return k(\"snap.data.get.\"+this.id,this,m,null),m;if(1==arguments.length){if(a.is(c,\"object\")){for(var e in c)c[h](e)&&this.data(e,c[e]);return this}k(\"snap.data.get.\"+this.id,this,m[c],c);return m[c]}m[c]=b;k(\"snap.data.set.\"+this.id,this,b,c);return this};c.removeData=function(c){null==c?T[this.id]={}:T[this.id]&&delete T[this.id][c];return this};c.outerSVG=c.toString=d(1);c.innerSVG=d()})(e.prototype);a.parse=function(c){var a=G.doc.createDocumentFragment(),b=!0,m=G.doc.createElement(\"div\");\n",
       "c=J(c);c.match(/^\\s*<\\s*svg(?:\\s|>)/)||(c=\"<svg>\"+c+\"</svg>\",b=!1);m.innerHTML=c;if(c=m.getElementsByTagName(\"svg\")[0])if(b)a=c;else for(;c.firstChild;)a.appendChild(c.firstChild);m.innerHTML=aa;return new l(a)};l.prototype.select=e.prototype.select;l.prototype.selectAll=e.prototype.selectAll;a.fragment=function(){for(var c=Array.prototype.slice.call(arguments,0),b=G.doc.createDocumentFragment(),m=0,e=c.length;m<e;m++){var h=c[m];h.node&&h.node.nodeType&&b.appendChild(h.node);h.nodeType&&b.appendChild(h);\n",
       "\"string\"==typeof h&&b.appendChild(a.parse(h).node)}return new l(b)};a._.make=r;a._.wrap=x;s.prototype.el=function(c,a){var b=r(c,this.node);a&&b.attr(a);return b};k.on(\"snap.util.getattr\",function(){var c=k.nt(),c=c.substring(c.lastIndexOf(\".\")+1),a=c.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});return pa[h](a)?this.node.ownerDocument.defaultView.getComputedStyle(this.node,null).getPropertyValue(a):v(this.node,c)});var pa={\"alignment-baseline\":0,\"baseline-shift\":0,clip:0,\"clip-path\":0,\n",
       "\"clip-rule\":0,color:0,\"color-interpolation\":0,\"color-interpolation-filters\":0,\"color-profile\":0,\"color-rendering\":0,cursor:0,direction:0,display:0,\"dominant-baseline\":0,\"enable-background\":0,fill:0,\"fill-opacity\":0,\"fill-rule\":0,filter:0,\"flood-color\":0,\"flood-opacity\":0,font:0,\"font-family\":0,\"font-size\":0,\"font-size-adjust\":0,\"font-stretch\":0,\"font-style\":0,\"font-variant\":0,\"font-weight\":0,\"glyph-orientation-horizontal\":0,\"glyph-orientation-vertical\":0,\"image-rendering\":0,kerning:0,\"letter-spacing\":0,\n",
       "\"lighting-color\":0,marker:0,\"marker-end\":0,\"marker-mid\":0,\"marker-start\":0,mask:0,opacity:0,overflow:0,\"pointer-events\":0,\"shape-rendering\":0,\"stop-color\":0,\"stop-opacity\":0,stroke:0,\"stroke-dasharray\":0,\"stroke-dashoffset\":0,\"stroke-linecap\":0,\"stroke-linejoin\":0,\"stroke-miterlimit\":0,\"stroke-opacity\":0,\"stroke-width\":0,\"text-anchor\":0,\"text-decoration\":0,\"text-rendering\":0,\"unicode-bidi\":0,visibility:0,\"word-spacing\":0,\"writing-mode\":0};k.on(\"snap.util.attr\",function(c){var a=k.nt(),b={},a=a.substring(a.lastIndexOf(\".\")+\n",
       "1);b[a]=c;var m=a.replace(/-(\\w)/gi,function(c,a){return a.toUpperCase()}),a=a.replace(/[A-Z]/g,function(c){return\"-\"+c.toLowerCase()});pa[h](a)?this.node.style[m]=null==c?aa:c:v(this.node,b)});a.ajax=function(c,a,b,m){var e=new XMLHttpRequest,h=V();if(e){if(y(a,\"function\"))m=b,b=a,a=null;else if(y(a,\"object\")){var d=[],f;for(f in a)a.hasOwnProperty(f)&&d.push(encodeURIComponent(f)+\"=\"+encodeURIComponent(a[f]));a=d.join(\"&\")}e.open(a?\"POST\":\"GET\",c,!0);a&&(e.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\n",
       "e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"));b&&(k.once(\"snap.ajax.\"+h+\".0\",b),k.once(\"snap.ajax.\"+h+\".200\",b),k.once(\"snap.ajax.\"+h+\".304\",b));e.onreadystatechange=function(){4==e.readyState&&k(\"snap.ajax.\"+h+\".\"+e.status,m,e)};if(4==e.readyState)return e;e.send(a);return e}};a.load=function(c,b,m){a.ajax(c,function(c){c=a.parse(c.responseText);m?b.call(m,c):b(c)})};a.getElementByPoint=function(c,a){var b,m,e=G.doc.elementFromPoint(c,a);if(G.win.opera&&\"svg\"==e.tagName){b=\n",
       "e;m=b.getBoundingClientRect();b=b.ownerDocument;var h=b.body,d=b.documentElement;b=m.top+(g.win.pageYOffset||d.scrollTop||h.scrollTop)-(d.clientTop||h.clientTop||0);m=m.left+(g.win.pageXOffset||d.scrollLeft||h.scrollLeft)-(d.clientLeft||h.clientLeft||0);h=e.createSVGRect();h.x=c-m;h.y=a-b;h.width=h.height=1;b=e.getIntersectionList(h,null);b.length&&(e=b[b.length-1])}return e?x(e):null};a.plugin=function(c){c(a,e,s,G,l)};return G.win.Snap=a}();C.plugin(function(a,k,y,M,A){function w(a,d,f,b,q,e){null==\n",
       "d&&\"[object SVGMatrix]\"==z.call(a)?(this.a=a.a,this.b=a.b,this.c=a.c,this.d=a.d,this.e=a.e,this.f=a.f):null!=a?(this.a=+a,this.b=+d,this.c=+f,this.d=+b,this.e=+q,this.f=+e):(this.a=1,this.c=this.b=0,this.d=1,this.f=this.e=0)}var z=Object.prototype.toString,d=String,f=Math;(function(n){function k(a){return a[0]*a[0]+a[1]*a[1]}function p(a){var d=f.sqrt(k(a));a[0]&&(a[0]/=d);a[1]&&(a[1]/=d)}n.add=function(a,d,e,f,n,p){var k=[[],[],[] ],u=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1] ];d=[[a,\n",
       "e,n],[d,f,p],[0,0,1] ];a&&a instanceof w&&(d=[[a.a,a.c,a.e],[a.b,a.d,a.f],[0,0,1] ]);for(a=0;3>a;a++)for(e=0;3>e;e++){for(f=n=0;3>f;f++)n+=u[a][f]*d[f][e];k[a][e]=n}this.a=k[0][0];this.b=k[1][0];this.c=k[0][1];this.d=k[1][1];this.e=k[0][2];this.f=k[1][2];return this};n.invert=function(){var a=this.a*this.d-this.b*this.c;return new w(this.d/a,-this.b/a,-this.c/a,this.a/a,(this.c*this.f-this.d*this.e)/a,(this.b*this.e-this.a*this.f)/a)};n.clone=function(){return new w(this.a,this.b,this.c,this.d,this.e,\n",
       "this.f)};n.translate=function(a,d){return this.add(1,0,0,1,a,d)};n.scale=function(a,d,e,f){null==d&&(d=a);(e||f)&&this.add(1,0,0,1,e,f);this.add(a,0,0,d,0,0);(e||f)&&this.add(1,0,0,1,-e,-f);return this};n.rotate=function(b,d,e){b=a.rad(b);d=d||0;e=e||0;var l=+f.cos(b).toFixed(9);b=+f.sin(b).toFixed(9);this.add(l,b,-b,l,d,e);return this.add(1,0,0,1,-d,-e)};n.x=function(a,d){return a*this.a+d*this.c+this.e};n.y=function(a,d){return a*this.b+d*this.d+this.f};n.get=function(a){return+this[d.fromCharCode(97+\n",
       "a)].toFixed(4)};n.toString=function(){return\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\"};n.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]};n.determinant=function(){return this.a*this.d-this.b*this.c};n.split=function(){var b={};b.dx=this.e;b.dy=this.f;var d=[[this.a,this.c],[this.b,this.d] ];b.scalex=f.sqrt(k(d[0]));p(d[0]);b.shear=d[0][0]*d[1][0]+d[0][1]*d[1][1];d[1]=[d[1][0]-d[0][0]*b.shear,d[1][1]-d[0][1]*b.shear];b.scaley=f.sqrt(k(d[1]));\n",
       "p(d[1]);b.shear/=b.scaley;0>this.determinant()&&(b.scalex=-b.scalex);var e=-d[0][1],d=d[1][1];0>d?(b.rotate=a.deg(f.acos(d)),0>e&&(b.rotate=360-b.rotate)):b.rotate=a.deg(f.asin(e));b.isSimple=!+b.shear.toFixed(9)&&(b.scalex.toFixed(9)==b.scaley.toFixed(9)||!b.rotate);b.isSuperSimple=!+b.shear.toFixed(9)&&b.scalex.toFixed(9)==b.scaley.toFixed(9)&&!b.rotate;b.noRotation=!+b.shear.toFixed(9)&&!b.rotate;return b};n.toTransformString=function(a){a=a||this.split();if(+a.shear.toFixed(9))return\"m\"+[this.get(0),\n",
       "this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)];a.scalex=+a.scalex.toFixed(4);a.scaley=+a.scaley.toFixed(4);a.rotate=+a.rotate.toFixed(4);return(a.dx||a.dy?\"t\"+[+a.dx.toFixed(4),+a.dy.toFixed(4)]:\"\")+(1!=a.scalex||1!=a.scaley?\"s\"+[a.scalex,a.scaley,0,0]:\"\")+(a.rotate?\"r\"+[+a.rotate.toFixed(4),0,0]:\"\")}})(w.prototype);a.Matrix=w;a.matrix=function(a,d,f,b,k,e){return new w(a,d,f,b,k,e)}});C.plugin(function(a,v,y,M,A){function w(h){return function(d){k.stop();d instanceof A&&1==d.node.childNodes.length&&\n",
       "(\"radialGradient\"==d.node.firstChild.tagName||\"linearGradient\"==d.node.firstChild.tagName||\"pattern\"==d.node.firstChild.tagName)&&(d=d.node.firstChild,b(this).appendChild(d),d=u(d));if(d instanceof v)if(\"radialGradient\"==d.type||\"linearGradient\"==d.type||\"pattern\"==d.type){d.node.id||e(d.node,{id:d.id});var f=l(d.node.id)}else f=d.attr(h);else f=a.color(d),f.error?(f=a(b(this).ownerSVGElement).gradient(d))?(f.node.id||e(f.node,{id:f.id}),f=l(f.node.id)):f=d:f=r(f);d={};d[h]=f;e(this.node,d);this.node.style[h]=\n",
       "x}}function z(a){k.stop();a==+a&&(a+=\"px\");this.node.style.fontSize=a}function d(a){var b=[];a=a.childNodes;for(var e=0,f=a.length;e<f;e++){var l=a[e];3==l.nodeType&&b.push(l.nodeValue);\"tspan\"==l.tagName&&(1==l.childNodes.length&&3==l.firstChild.nodeType?b.push(l.firstChild.nodeValue):b.push(d(l)))}return b}function f(){k.stop();return this.node.style.fontSize}var n=a._.make,u=a._.wrap,p=a.is,b=a._.getSomeDefs,q=/^url\\(#?([^)]+)\\)$/,e=a._.$,l=a.url,r=String,s=a._.separator,x=\"\";k.on(\"snap.util.attr.mask\",\n",
       "function(a){if(a instanceof v||a instanceof A){k.stop();a instanceof A&&1==a.node.childNodes.length&&(a=a.node.firstChild,b(this).appendChild(a),a=u(a));if(\"mask\"==a.type)var d=a;else d=n(\"mask\",b(this)),d.node.appendChild(a.node);!d.node.id&&e(d.node,{id:d.id});e(this.node,{mask:l(d.id)})}});(function(a){k.on(\"snap.util.attr.clip\",a);k.on(\"snap.util.attr.clip-path\",a);k.on(\"snap.util.attr.clipPath\",a)})(function(a){if(a instanceof v||a instanceof A){k.stop();if(\"clipPath\"==a.type)var d=a;else d=\n",
       "n(\"clipPath\",b(this)),d.node.appendChild(a.node),!d.node.id&&e(d.node,{id:d.id});e(this.node,{\"clip-path\":l(d.id)})}});k.on(\"snap.util.attr.fill\",w(\"fill\"));k.on(\"snap.util.attr.stroke\",w(\"stroke\"));var G=/^([lr])(?:\\(([^)]*)\\))?(.*)$/i;k.on(\"snap.util.grad.parse\",function(a){a=r(a);var b=a.match(G);if(!b)return null;a=b[1];var e=b[2],b=b[3],e=e.split(/\\s*,\\s*/).map(function(a){return+a==a?+a:a});1==e.length&&0==e[0]&&(e=[]);b=b.split(\"-\");b=b.map(function(a){a=a.split(\":\");var b={color:a[0]};a[1]&&\n",
       "(b.offset=parseFloat(a[1]));return b});return{type:a,params:e,stops:b}});k.on(\"snap.util.attr.d\",function(b){k.stop();p(b,\"array\")&&p(b[0],\"array\")&&(b=a.path.toString.call(b));b=r(b);b.match(/[ruo]/i)&&(b=a.path.toAbsolute(b));e(this.node,{d:b})})(-1);k.on(\"snap.util.attr.#text\",function(a){k.stop();a=r(a);for(a=M.doc.createTextNode(a);this.node.firstChild;)this.node.removeChild(this.node.firstChild);this.node.appendChild(a)})(-1);k.on(\"snap.util.attr.path\",function(a){k.stop();this.attr({d:a})})(-1);\n",
       "k.on(\"snap.util.attr.class\",function(a){k.stop();this.node.className.baseVal=a})(-1);k.on(\"snap.util.attr.viewBox\",function(a){a=p(a,\"object\")&&\"x\"in a?[a.x,a.y,a.width,a.height].join(\" \"):p(a,\"array\")?a.join(\" \"):a;e(this.node,{viewBox:a});k.stop()})(-1);k.on(\"snap.util.attr.transform\",function(a){this.transform(a);k.stop()})(-1);k.on(\"snap.util.attr.r\",function(a){\"rect\"==this.type&&(k.stop(),e(this.node,{rx:a,ry:a}))})(-1);k.on(\"snap.util.attr.textpath\",function(a){k.stop();if(\"text\"==this.type){var d,\n",
       "f;if(!a&&this.textPath){for(a=this.textPath;a.node.firstChild;)this.node.appendChild(a.node.firstChild);a.remove();delete this.textPath}else if(p(a,\"string\")?(d=b(this),a=u(d.parentNode).path(a),d.appendChild(a.node),d=a.id,a.attr({id:d})):(a=u(a),a instanceof v&&(d=a.attr(\"id\"),d||(d=a.id,a.attr({id:d})))),d)if(a=this.textPath,f=this.node,a)a.attr({\"xlink:href\":\"#\"+d});else{for(a=e(\"textPath\",{\"xlink:href\":\"#\"+d});f.firstChild;)a.appendChild(f.firstChild);f.appendChild(a);this.textPath=u(a)}}})(-1);\n",
       "k.on(\"snap.util.attr.text\",function(a){if(\"text\"==this.type){for(var b=this.node,d=function(a){var b=e(\"tspan\");if(p(a,\"array\"))for(var f=0;f<a.length;f++)b.appendChild(d(a[f]));else b.appendChild(M.doc.createTextNode(a));b.normalize&&b.normalize();return b};b.firstChild;)b.removeChild(b.firstChild);for(a=d(a);a.firstChild;)b.appendChild(a.firstChild)}k.stop()})(-1);k.on(\"snap.util.attr.fontSize\",z)(-1);k.on(\"snap.util.attr.font-size\",z)(-1);k.on(\"snap.util.getattr.transform\",function(){k.stop();\n",
       "return this.transform()})(-1);k.on(\"snap.util.getattr.textpath\",function(){k.stop();return this.textPath})(-1);(function(){function b(d){return function(){k.stop();var b=M.doc.defaultView.getComputedStyle(this.node,null).getPropertyValue(\"marker-\"+d);return\"none\"==b?b:a(M.doc.getElementById(b.match(q)[1]))}}function d(a){return function(b){k.stop();var d=\"marker\"+a.charAt(0).toUpperCase()+a.substring(1);if(\"\"==b||!b)this.node.style[d]=\"none\";else if(\"marker\"==b.type){var f=b.node.id;f||e(b.node,{id:b.id});\n",
       "this.node.style[d]=l(f)}}}k.on(\"snap.util.getattr.marker-end\",b(\"end\"))(-1);k.on(\"snap.util.getattr.markerEnd\",b(\"end\"))(-1);k.on(\"snap.util.getattr.marker-start\",b(\"start\"))(-1);k.on(\"snap.util.getattr.markerStart\",b(\"start\"))(-1);k.on(\"snap.util.getattr.marker-mid\",b(\"mid\"))(-1);k.on(\"snap.util.getattr.markerMid\",b(\"mid\"))(-1);k.on(\"snap.util.attr.marker-end\",d(\"end\"))(-1);k.on(\"snap.util.attr.markerEnd\",d(\"end\"))(-1);k.on(\"snap.util.attr.marker-start\",d(\"start\"))(-1);k.on(\"snap.util.attr.markerStart\",\n",
       "d(\"start\"))(-1);k.on(\"snap.util.attr.marker-mid\",d(\"mid\"))(-1);k.on(\"snap.util.attr.markerMid\",d(\"mid\"))(-1)})();k.on(\"snap.util.getattr.r\",function(){if(\"rect\"==this.type&&e(this.node,\"rx\")==e(this.node,\"ry\"))return k.stop(),e(this.node,\"rx\")})(-1);k.on(\"snap.util.getattr.text\",function(){if(\"text\"==this.type||\"tspan\"==this.type){k.stop();var a=d(this.node);return 1==a.length?a[0]:a}})(-1);k.on(\"snap.util.getattr.#text\",function(){return this.node.textContent})(-1);k.on(\"snap.util.getattr.viewBox\",\n",
       "function(){k.stop();var b=e(this.node,\"viewBox\");if(b)return b=b.split(s),a._.box(+b[0],+b[1],+b[2],+b[3])})(-1);k.on(\"snap.util.getattr.points\",function(){var a=e(this.node,\"points\");k.stop();if(a)return a.split(s)})(-1);k.on(\"snap.util.getattr.path\",function(){var a=e(this.node,\"d\");k.stop();return a})(-1);k.on(\"snap.util.getattr.class\",function(){return this.node.className.baseVal})(-1);k.on(\"snap.util.getattr.fontSize\",f)(-1);k.on(\"snap.util.getattr.font-size\",f)(-1)});C.plugin(function(a,v,y,\n",
       "M,A){function w(a){return a}function z(a){return function(b){return+b.toFixed(3)+a}}var d={\"+\":function(a,b){return a+b},\"-\":function(a,b){return a-b},\"/\":function(a,b){return a/b},\"*\":function(a,b){return a*b}},f=String,n=/[a-z]+$/i,u=/^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;k.on(\"snap.util.attr\",function(a){if(a=f(a).match(u)){var b=k.nt(),b=b.substring(b.lastIndexOf(\".\")+1),q=this.attr(b),e={};k.stop();var l=a[3]||\"\",r=q.match(n),s=d[a[1] ];r&&r==l?a=s(parseFloat(q),+a[2]):(q=this.asPX(b),\n",
       "a=s(this.asPX(b),this.asPX(b,a[2]+l)));isNaN(q)||isNaN(a)||(e[b]=a,this.attr(e))}})(-10);k.on(\"snap.util.equal\",function(a,b){var q=f(this.attr(a)||\"\"),e=f(b).match(u);if(e){k.stop();var l=e[3]||\"\",r=q.match(n),s=d[e[1] ];if(r&&r==l)return{from:parseFloat(q),to:s(parseFloat(q),+e[2]),f:z(r)};q=this.asPX(a);return{from:q,to:s(q,this.asPX(a,e[2]+l)),f:w}}})(-10)});C.plugin(function(a,v,y,M,A){var w=y.prototype,z=a.is;w.rect=function(a,d,k,p,b,q){var e;null==q&&(q=b);z(a,\"object\")&&\"[object Object]\"==\n",
       "a?e=a:null!=a&&(e={x:a,y:d,width:k,height:p},null!=b&&(e.rx=b,e.ry=q));return this.el(\"rect\",e)};w.circle=function(a,d,k){var p;z(a,\"object\")&&\"[object Object]\"==a?p=a:null!=a&&(p={cx:a,cy:d,r:k});return this.el(\"circle\",p)};var d=function(){function a(){this.parentNode.removeChild(this)}return function(d,k){var p=M.doc.createElement(\"img\"),b=M.doc.body;p.style.cssText=\"position:absolute;left:-9999em;top:-9999em\";p.onload=function(){k.call(p);p.onload=p.onerror=null;b.removeChild(p)};p.onerror=a;\n",
       "b.appendChild(p);p.src=d}}();w.image=function(f,n,k,p,b){var q=this.el(\"image\");if(z(f,\"object\")&&\"src\"in f)q.attr(f);else if(null!=f){var e={\"xlink:href\":f,preserveAspectRatio:\"none\"};null!=n&&null!=k&&(e.x=n,e.y=k);null!=p&&null!=b?(e.width=p,e.height=b):d(f,function(){a._.$(q.node,{width:this.offsetWidth,height:this.offsetHeight})});a._.$(q.node,e)}return q};w.ellipse=function(a,d,k,p){var b;z(a,\"object\")&&\"[object Object]\"==a?b=a:null!=a&&(b={cx:a,cy:d,rx:k,ry:p});return this.el(\"ellipse\",b)};\n",
       "w.path=function(a){var d;z(a,\"object\")&&!z(a,\"array\")?d=a:a&&(d={d:a});return this.el(\"path\",d)};w.group=w.g=function(a){var d=this.el(\"g\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.svg=function(a,d,k,p,b,q,e,l){var r={};z(a,\"object\")&&null==d?r=a:(null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l]));return this.el(\"svg\",r)};w.mask=function(a){var d=\n",
       "this.el(\"mask\");1==arguments.length&&a&&!a.type?d.attr(a):arguments.length&&d.add(Array.prototype.slice.call(arguments,0));return d};w.ptrn=function(a,d,k,p,b,q,e,l){if(z(a,\"object\"))var r=a;else arguments.length?(r={},null!=a&&(r.x=a),null!=d&&(r.y=d),null!=k&&(r.width=k),null!=p&&(r.height=p),null!=b&&null!=q&&null!=e&&null!=l&&(r.viewBox=[b,q,e,l])):r={patternUnits:\"userSpaceOnUse\"};return this.el(\"pattern\",r)};w.use=function(a){return null!=a?(make(\"use\",this.node),a instanceof v&&(a.attr(\"id\")||\n",
       "a.attr({id:ID()}),a=a.attr(\"id\")),this.el(\"use\",{\"xlink:href\":a})):v.prototype.use.call(this)};w.text=function(a,d,k){var p={};z(a,\"object\")?p=a:null!=a&&(p={x:a,y:d,text:k||\"\"});return this.el(\"text\",p)};w.line=function(a,d,k,p){var b={};z(a,\"object\")?b=a:null!=a&&(b={x1:a,x2:k,y1:d,y2:p});return this.el(\"line\",b)};w.polyline=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polyline\",d)};\n",
       "w.polygon=function(a){1<arguments.length&&(a=Array.prototype.slice.call(arguments,0));var d={};z(a,\"object\")&&!z(a,\"array\")?d=a:null!=a&&(d={points:a});return this.el(\"polygon\",d)};(function(){function d(){return this.selectAll(\"stop\")}function n(b,d){var f=e(\"stop\"),k={offset:+d+\"%\"};b=a.color(b);k[\"stop-color\"]=b.hex;1>b.opacity&&(k[\"stop-opacity\"]=b.opacity);e(f,k);this.node.appendChild(f);return this}function u(){if(\"linearGradient\"==this.type){var b=e(this.node,\"x1\")||0,d=e(this.node,\"x2\")||\n",
       "1,f=e(this.node,\"y1\")||0,k=e(this.node,\"y2\")||0;return a._.box(b,f,math.abs(d-b),math.abs(k-f))}b=this.node.r||0;return a._.box((this.node.cx||0.5)-b,(this.node.cy||0.5)-b,2*b,2*b)}function p(a,d){function f(a,b){for(var d=(b-u)/(a-w),e=w;e<a;e++)h[e].offset=+(+u+d*(e-w)).toFixed(2);w=a;u=b}var n=k(\"snap.util.grad.parse\",null,d).firstDefined(),p;if(!n)return null;n.params.unshift(a);p=\"l\"==n.type.toLowerCase()?b.apply(0,n.params):q.apply(0,n.params);n.type!=n.type.toLowerCase()&&e(p.node,{gradientUnits:\"userSpaceOnUse\"});\n",
       "var h=n.stops,n=h.length,u=0,w=0;n--;for(var v=0;v<n;v++)\"offset\"in h[v]&&f(v,h[v].offset);h[n].offset=h[n].offset||100;f(n,h[n].offset);for(v=0;v<=n;v++){var y=h[v];p.addStop(y.color,y.offset)}return p}function b(b,k,p,q,w){b=a._.make(\"linearGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{x1:k,y1:p,x2:q,y2:w});return b}function q(b,k,p,q,w,h){b=a._.make(\"radialGradient\",b);b.stops=d;b.addStop=n;b.getBBox=u;null!=k&&e(b.node,{cx:k,cy:p,r:q});null!=w&&null!=h&&e(b.node,{fx:w,fy:h});\n",
       "return b}var e=a._.$;w.gradient=function(a){return p(this.defs,a)};w.gradientLinear=function(a,d,e,f){return b(this.defs,a,d,e,f)};w.gradientRadial=function(a,b,d,e,f){return q(this.defs,a,b,d,e,f)};w.toString=function(){var b=this.node.ownerDocument,d=b.createDocumentFragment(),b=b.createElement(\"div\"),e=this.node.cloneNode(!0);d.appendChild(b);b.appendChild(e);a._.$(e,{xmlns:\"http://www.w3.org/2000/svg\"});b=b.innerHTML;d.removeChild(d.firstChild);return b};w.clear=function(){for(var a=this.node.firstChild,\n",
       "b;a;)b=a.nextSibling,\"defs\"!=a.tagName?a.parentNode.removeChild(a):w.clear.call({node:a}),a=b}})()});C.plugin(function(a,k,y,M){function A(a){var b=A.ps=A.ps||{};b[a]?b[a].sleep=100:b[a]={sleep:100};setTimeout(function(){for(var d in b)b[L](d)&&d!=a&&(b[d].sleep--,!b[d].sleep&&delete b[d])});return b[a]}function w(a,b,d,e){null==a&&(a=b=d=e=0);null==b&&(b=a.y,d=a.width,e=a.height,a=a.x);return{x:a,y:b,width:d,w:d,height:e,h:e,x2:a+d,y2:b+e,cx:a+d/2,cy:b+e/2,r1:F.min(d,e)/2,r2:F.max(d,e)/2,r0:F.sqrt(d*\n",
       "d+e*e)/2,path:s(a,b,d,e),vb:[a,b,d,e].join(\" \")}}function z(){return this.join(\",\").replace(N,\"$1\")}function d(a){a=C(a);a.toString=z;return a}function f(a,b,d,h,f,k,l,n,p){if(null==p)return e(a,b,d,h,f,k,l,n);if(0>p||e(a,b,d,h,f,k,l,n)<p)p=void 0;else{var q=0.5,O=1-q,s;for(s=e(a,b,d,h,f,k,l,n,O);0.01<Z(s-p);)q/=2,O+=(s<p?1:-1)*q,s=e(a,b,d,h,f,k,l,n,O);p=O}return u(a,b,d,h,f,k,l,n,p)}function n(b,d){function e(a){return+(+a).toFixed(3)}return a._.cacher(function(a,h,l){a instanceof k&&(a=a.attr(\"d\"));\n",
       "a=I(a);for(var n,p,D,q,O=\"\",s={},c=0,t=0,r=a.length;t<r;t++){D=a[t];if(\"M\"==D[0])n=+D[1],p=+D[2];else{q=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6]);if(c+q>h){if(d&&!s.start){n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c);O+=[\"C\"+e(n.start.x),e(n.start.y),e(n.m.x),e(n.m.y),e(n.x),e(n.y)];if(l)return O;s.start=O;O=[\"M\"+e(n.x),e(n.y)+\"C\"+e(n.n.x),e(n.n.y),e(n.end.x),e(n.end.y),e(D[5]),e(D[6])].join();c+=q;n=+D[5];p=+D[6];continue}if(!b&&!d)return n=f(n,p,D[1],D[2],D[3],D[4],D[5],D[6],h-c)}c+=q;n=+D[5];p=+D[6]}O+=\n",
       "D.shift()+D}s.end=O;return n=b?c:d?s:u(n,p,D[0],D[1],D[2],D[3],D[4],D[5],1)},null,a._.clone)}function u(a,b,d,e,h,f,k,l,n){var p=1-n,q=ma(p,3),s=ma(p,2),c=n*n,t=c*n,r=q*a+3*s*n*d+3*p*n*n*h+t*k,q=q*b+3*s*n*e+3*p*n*n*f+t*l,s=a+2*n*(d-a)+c*(h-2*d+a),t=b+2*n*(e-b)+c*(f-2*e+b),x=d+2*n*(h-d)+c*(k-2*h+d),c=e+2*n*(f-e)+c*(l-2*f+e);a=p*a+n*d;b=p*b+n*e;h=p*h+n*k;f=p*f+n*l;l=90-180*F.atan2(s-x,t-c)/S;return{x:r,y:q,m:{x:s,y:t},n:{x:x,y:c},start:{x:a,y:b},end:{x:h,y:f},alpha:l}}function p(b,d,e,h,f,n,k,l){a.is(b,\n",
       "\"array\")||(b=[b,d,e,h,f,n,k,l]);b=U.apply(null,b);return w(b.min.x,b.min.y,b.max.x-b.min.x,b.max.y-b.min.y)}function b(a,b,d){return b>=a.x&&b<=a.x+a.width&&d>=a.y&&d<=a.y+a.height}function q(a,d){a=w(a);d=w(d);return b(d,a.x,a.y)||b(d,a.x2,a.y)||b(d,a.x,a.y2)||b(d,a.x2,a.y2)||b(a,d.x,d.y)||b(a,d.x2,d.y)||b(a,d.x,d.y2)||b(a,d.x2,d.y2)||(a.x<d.x2&&a.x>d.x||d.x<a.x2&&d.x>a.x)&&(a.y<d.y2&&a.y>d.y||d.y<a.y2&&d.y>a.y)}function e(a,b,d,e,h,f,n,k,l){null==l&&(l=1);l=(1<l?1:0>l?0:l)/2;for(var p=[-0.1252,\n",
       "0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],q=[0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],s=0,c=0;12>c;c++)var t=l*p[c]+l,r=t*(t*(-3*a+9*d-9*h+3*n)+6*a-12*d+6*h)-3*a+3*d,t=t*(t*(-3*b+9*e-9*f+3*k)+6*b-12*e+6*f)-3*b+3*e,s=s+q[c]*F.sqrt(r*r+t*t);return l*s}function l(a,b,d){a=I(a);b=I(b);for(var h,f,l,n,k,s,r,O,x,c,t=d?0:[],w=0,v=a.length;w<v;w++)if(x=a[w],\"M\"==x[0])h=k=x[1],f=s=x[2];else{\"C\"==x[0]?(x=[h,f].concat(x.slice(1)),\n",
       "h=x[6],f=x[7]):(x=[h,f,h,f,k,s,k,s],h=k,f=s);for(var G=0,y=b.length;G<y;G++)if(c=b[G],\"M\"==c[0])l=r=c[1],n=O=c[2];else{\"C\"==c[0]?(c=[l,n].concat(c.slice(1)),l=c[6],n=c[7]):(c=[l,n,l,n,r,O,r,O],l=r,n=O);var z;var K=x,B=c;z=d;var H=p(K),J=p(B);if(q(H,J)){for(var H=e.apply(0,K),J=e.apply(0,B),H=~~(H/8),J=~~(J/8),U=[],A=[],F={},M=z?0:[],P=0;P<H+1;P++){var C=u.apply(0,K.concat(P/H));U.push({x:C.x,y:C.y,t:P/H})}for(P=0;P<J+1;P++)C=u.apply(0,B.concat(P/J)),A.push({x:C.x,y:C.y,t:P/J});for(P=0;P<H;P++)for(K=\n",
       "0;K<J;K++){var Q=U[P],L=U[P+1],B=A[K],C=A[K+1],N=0.001>Z(L.x-Q.x)?\"y\":\"x\",S=0.001>Z(C.x-B.x)?\"y\":\"x\",R;R=Q.x;var Y=Q.y,V=L.x,ea=L.y,fa=B.x,ga=B.y,ha=C.x,ia=C.y;if(W(R,V)<X(fa,ha)||X(R,V)>W(fa,ha)||W(Y,ea)<X(ga,ia)||X(Y,ea)>W(ga,ia))R=void 0;else{var $=(R*ea-Y*V)*(fa-ha)-(R-V)*(fa*ia-ga*ha),aa=(R*ea-Y*V)*(ga-ia)-(Y-ea)*(fa*ia-ga*ha),ja=(R-V)*(ga-ia)-(Y-ea)*(fa-ha);if(ja){var $=$/ja,aa=aa/ja,ja=+$.toFixed(2),ba=+aa.toFixed(2);R=ja<+X(R,V).toFixed(2)||ja>+W(R,V).toFixed(2)||ja<+X(fa,ha).toFixed(2)||\n",
       "ja>+W(fa,ha).toFixed(2)||ba<+X(Y,ea).toFixed(2)||ba>+W(Y,ea).toFixed(2)||ba<+X(ga,ia).toFixed(2)||ba>+W(ga,ia).toFixed(2)?void 0:{x:$,y:aa}}else R=void 0}R&&F[R.x.toFixed(4)]!=R.y.toFixed(4)&&(F[R.x.toFixed(4)]=R.y.toFixed(4),Q=Q.t+Z((R[N]-Q[N])/(L[N]-Q[N]))*(L.t-Q.t),B=B.t+Z((R[S]-B[S])/(C[S]-B[S]))*(C.t-B.t),0<=Q&&1>=Q&&0<=B&&1>=B&&(z?M++:M.push({x:R.x,y:R.y,t1:Q,t2:B})))}z=M}else z=z?0:[];if(d)t+=z;else{H=0;for(J=z.length;H<J;H++)z[H].segment1=w,z[H].segment2=G,z[H].bez1=x,z[H].bez2=c;t=t.concat(z)}}}return t}\n",
       "function r(a){var b=A(a);if(b.bbox)return C(b.bbox);if(!a)return w();a=I(a);for(var d=0,e=0,h=[],f=[],l,n=0,k=a.length;n<k;n++)l=a[n],\"M\"==l[0]?(d=l[1],e=l[2],h.push(d),f.push(e)):(d=U(d,e,l[1],l[2],l[3],l[4],l[5],l[6]),h=h.concat(d.min.x,d.max.x),f=f.concat(d.min.y,d.max.y),d=l[5],e=l[6]);a=X.apply(0,h);l=X.apply(0,f);h=W.apply(0,h);f=W.apply(0,f);f=w(a,l,h-a,f-l);b.bbox=C(f);return f}function s(a,b,d,e,h){if(h)return[[\"M\",+a+ +h,b],[\"l\",d-2*h,0],[\"a\",h,h,0,0,1,h,h],[\"l\",0,e-2*h],[\"a\",h,h,0,0,1,\n",
       "-h,h],[\"l\",2*h-d,0],[\"a\",h,h,0,0,1,-h,-h],[\"l\",0,2*h-e],[\"a\",h,h,0,0,1,h,-h],[\"z\"] ];a=[[\"M\",a,b],[\"l\",d,0],[\"l\",0,e],[\"l\",-d,0],[\"z\"] ];a.toString=z;return a}function x(a,b,d,e,h){null==h&&null==e&&(e=d);a=+a;b=+b;d=+d;e=+e;if(null!=h){var f=Math.PI/180,l=a+d*Math.cos(-e*f);a+=d*Math.cos(-h*f);var n=b+d*Math.sin(-e*f);b+=d*Math.sin(-h*f);d=[[\"M\",l,n],[\"A\",d,d,0,+(180<h-e),0,a,b] ]}else d=[[\"M\",a,b],[\"m\",0,-e],[\"a\",d,e,0,1,1,0,2*e],[\"a\",d,e,0,1,1,0,-2*e],[\"z\"] ];d.toString=z;return d}function G(b){var e=\n",
       "A(b);if(e.abs)return d(e.abs);Q(b,\"array\")&&Q(b&&b[0],\"array\")||(b=a.parsePathString(b));if(!b||!b.length)return[[\"M\",0,0] ];var h=[],f=0,l=0,n=0,k=0,p=0;\"M\"==b[0][0]&&(f=+b[0][1],l=+b[0][2],n=f,k=l,p++,h[0]=[\"M\",f,l]);for(var q=3==b.length&&\"M\"==b[0][0]&&\"R\"==b[1][0].toUpperCase()&&\"Z\"==b[2][0].toUpperCase(),s,r,w=p,c=b.length;w<c;w++){h.push(s=[]);r=b[w];p=r[0];if(p!=p.toUpperCase())switch(s[0]=p.toUpperCase(),s[0]){case \"A\":s[1]=r[1];s[2]=r[2];s[3]=r[3];s[4]=r[4];s[5]=r[5];s[6]=+r[6]+f;s[7]=+r[7]+\n",
       "l;break;case \"V\":s[1]=+r[1]+l;break;case \"H\":s[1]=+r[1]+f;break;case \"R\":for(var t=[f,l].concat(r.slice(1)),u=2,v=t.length;u<v;u++)t[u]=+t[u]+f,t[++u]=+t[u]+l;h.pop();h=h.concat(P(t,q));break;case \"O\":h.pop();t=x(f,l,r[1],r[2]);t.push(t[0]);h=h.concat(t);break;case \"U\":h.pop();h=h.concat(x(f,l,r[1],r[2],r[3]));s=[\"U\"].concat(h[h.length-1].slice(-2));break;case \"M\":n=+r[1]+f,k=+r[2]+l;default:for(u=1,v=r.length;u<v;u++)s[u]=+r[u]+(u%2?f:l)}else if(\"R\"==p)t=[f,l].concat(r.slice(1)),h.pop(),h=h.concat(P(t,\n",
       "q)),s=[\"R\"].concat(r.slice(-2));else if(\"O\"==p)h.pop(),t=x(f,l,r[1],r[2]),t.push(t[0]),h=h.concat(t);else if(\"U\"==p)h.pop(),h=h.concat(x(f,l,r[1],r[2],r[3])),s=[\"U\"].concat(h[h.length-1].slice(-2));else for(t=0,u=r.length;t<u;t++)s[t]=r[t];p=p.toUpperCase();if(\"O\"!=p)switch(s[0]){case \"Z\":f=+n;l=+k;break;case \"H\":f=s[1];break;case \"V\":l=s[1];break;case \"M\":n=s[s.length-2],k=s[s.length-1];default:f=s[s.length-2],l=s[s.length-1]}}h.toString=z;e.abs=d(h);return h}function h(a,b,d,e){return[a,b,d,e,d,\n",
       "e]}function J(a,b,d,e,h,f){var l=1/3,n=2/3;return[l*a+n*d,l*b+n*e,l*h+n*d,l*f+n*e,h,f]}function K(b,d,e,h,f,l,n,k,p,s){var r=120*S/180,q=S/180*(+f||0),c=[],t,x=a._.cacher(function(a,b,c){var d=a*F.cos(c)-b*F.sin(c);a=a*F.sin(c)+b*F.cos(c);return{x:d,y:a}});if(s)v=s[0],t=s[1],l=s[2],u=s[3];else{t=x(b,d,-q);b=t.x;d=t.y;t=x(k,p,-q);k=t.x;p=t.y;F.cos(S/180*f);F.sin(S/180*f);t=(b-k)/2;v=(d-p)/2;u=t*t/(e*e)+v*v/(h*h);1<u&&(u=F.sqrt(u),e*=u,h*=u);var u=e*e,w=h*h,u=(l==n?-1:1)*F.sqrt(Z((u*w-u*v*v-w*t*t)/\n",
       "(u*v*v+w*t*t)));l=u*e*v/h+(b+k)/2;var u=u*-h*t/e+(d+p)/2,v=F.asin(((d-u)/h).toFixed(9));t=F.asin(((p-u)/h).toFixed(9));v=b<l?S-v:v;t=k<l?S-t:t;0>v&&(v=2*S+v);0>t&&(t=2*S+t);n&&v>t&&(v-=2*S);!n&&t>v&&(t-=2*S)}if(Z(t-v)>r){var c=t,w=k,G=p;t=v+r*(n&&t>v?1:-1);k=l+e*F.cos(t);p=u+h*F.sin(t);c=K(k,p,e,h,f,0,n,w,G,[t,c,l,u])}l=t-v;f=F.cos(v);r=F.sin(v);n=F.cos(t);t=F.sin(t);l=F.tan(l/4);e=4/3*e*l;l*=4/3*h;h=[b,d];b=[b+e*r,d-l*f];d=[k+e*t,p-l*n];k=[k,p];b[0]=2*h[0]-b[0];b[1]=2*h[1]-b[1];if(s)return[b,d,k].concat(c);\n",
       "c=[b,d,k].concat(c).join().split(\",\");s=[];k=0;for(p=c.length;k<p;k++)s[k]=k%2?x(c[k-1],c[k],q).y:x(c[k],c[k+1],q).x;return s}function U(a,b,d,e,h,f,l,k){for(var n=[],p=[[],[] ],s,r,c,t,q=0;2>q;++q)0==q?(r=6*a-12*d+6*h,s=-3*a+9*d-9*h+3*l,c=3*d-3*a):(r=6*b-12*e+6*f,s=-3*b+9*e-9*f+3*k,c=3*e-3*b),1E-12>Z(s)?1E-12>Z(r)||(s=-c/r,0<s&&1>s&&n.push(s)):(t=r*r-4*c*s,c=F.sqrt(t),0>t||(t=(-r+c)/(2*s),0<t&&1>t&&n.push(t),s=(-r-c)/(2*s),0<s&&1>s&&n.push(s)));for(r=q=n.length;q--;)s=n[q],c=1-s,p[0][q]=c*c*c*a+3*\n",
       "c*c*s*d+3*c*s*s*h+s*s*s*l,p[1][q]=c*c*c*b+3*c*c*s*e+3*c*s*s*f+s*s*s*k;p[0][r]=a;p[1][r]=b;p[0][r+1]=l;p[1][r+1]=k;p[0].length=p[1].length=r+2;return{min:{x:X.apply(0,p[0]),y:X.apply(0,p[1])},max:{x:W.apply(0,p[0]),y:W.apply(0,p[1])}}}function I(a,b){var e=!b&&A(a);if(!b&&e.curve)return d(e.curve);var f=G(a),l=b&&G(b),n={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},k={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},p=function(a,b,c){if(!a)return[\"C\",b.x,b.y,b.x,b.y,b.x,b.y];a[0]in{T:1,Q:1}||(b.qx=b.qy=null);\n",
       "switch(a[0]){case \"M\":b.X=a[1];b.Y=a[2];break;case \"A\":a=[\"C\"].concat(K.apply(0,[b.x,b.y].concat(a.slice(1))));break;case \"S\":\"C\"==c||\"S\"==c?(c=2*b.x-b.bx,b=2*b.y-b.by):(c=b.x,b=b.y);a=[\"C\",c,b].concat(a.slice(1));break;case \"T\":\"Q\"==c||\"T\"==c?(b.qx=2*b.x-b.qx,b.qy=2*b.y-b.qy):(b.qx=b.x,b.qy=b.y);a=[\"C\"].concat(J(b.x,b.y,b.qx,b.qy,a[1],a[2]));break;case \"Q\":b.qx=a[1];b.qy=a[2];a=[\"C\"].concat(J(b.x,b.y,a[1],a[2],a[3],a[4]));break;case \"L\":a=[\"C\"].concat(h(b.x,b.y,a[1],a[2]));break;case \"H\":a=[\"C\"].concat(h(b.x,\n",
       "b.y,a[1],b.y));break;case \"V\":a=[\"C\"].concat(h(b.x,b.y,b.x,a[1]));break;case \"Z\":a=[\"C\"].concat(h(b.x,b.y,b.X,b.Y))}return a},s=function(a,b){if(7<a[b].length){a[b].shift();for(var c=a[b];c.length;)q[b]=\"A\",l&&(u[b]=\"A\"),a.splice(b++,0,[\"C\"].concat(c.splice(0,6)));a.splice(b,1);v=W(f.length,l&&l.length||0)}},r=function(a,b,c,d,e){a&&b&&\"M\"==a[e][0]&&\"M\"!=b[e][0]&&(b.splice(e,0,[\"M\",d.x,d.y]),c.bx=0,c.by=0,c.x=a[e][1],c.y=a[e][2],v=W(f.length,l&&l.length||0))},q=[],u=[],c=\"\",t=\"\",x=0,v=W(f.length,\n",
       "l&&l.length||0);for(;x<v;x++){f[x]&&(c=f[x][0]);\"C\"!=c&&(q[x]=c,x&&(t=q[x-1]));f[x]=p(f[x],n,t);\"A\"!=q[x]&&\"C\"==c&&(q[x]=\"C\");s(f,x);l&&(l[x]&&(c=l[x][0]),\"C\"!=c&&(u[x]=c,x&&(t=u[x-1])),l[x]=p(l[x],k,t),\"A\"!=u[x]&&\"C\"==c&&(u[x]=\"C\"),s(l,x));r(f,l,n,k,x);r(l,f,k,n,x);var w=f[x],z=l&&l[x],y=w.length,U=l&&z.length;n.x=w[y-2];n.y=w[y-1];n.bx=$(w[y-4])||n.x;n.by=$(w[y-3])||n.y;k.bx=l&&($(z[U-4])||k.x);k.by=l&&($(z[U-3])||k.y);k.x=l&&z[U-2];k.y=l&&z[U-1]}l||(e.curve=d(f));return l?[f,l]:f}function P(a,\n",
       "b){for(var d=[],e=0,h=a.length;h-2*!b>e;e+=2){var f=[{x:+a[e-2],y:+a[e-1]},{x:+a[e],y:+a[e+1]},{x:+a[e+2],y:+a[e+3]},{x:+a[e+4],y:+a[e+5]}];b?e?h-4==e?f[3]={x:+a[0],y:+a[1]}:h-2==e&&(f[2]={x:+a[0],y:+a[1]},f[3]={x:+a[2],y:+a[3]}):f[0]={x:+a[h-2],y:+a[h-1]}:h-4==e?f[3]=f[2]:e||(f[0]={x:+a[e],y:+a[e+1]});d.push([\"C\",(-f[0].x+6*f[1].x+f[2].x)/6,(-f[0].y+6*f[1].y+f[2].y)/6,(f[1].x+6*f[2].x-f[3].x)/6,(f[1].y+6*f[2].y-f[3].y)/6,f[2].x,f[2].y])}return d}y=k.prototype;var Q=a.is,C=a._.clone,L=\"hasOwnProperty\",\n",
       "N=/,?([a-z]),?/gi,$=parseFloat,F=Math,S=F.PI,X=F.min,W=F.max,ma=F.pow,Z=F.abs;M=n(1);var na=n(),ba=n(0,1),V=a._unit2px;a.path=A;a.path.getTotalLength=M;a.path.getPointAtLength=na;a.path.getSubpath=function(a,b,d){if(1E-6>this.getTotalLength(a)-d)return ba(a,b).end;a=ba(a,d,1);return b?ba(a,b).end:a};y.getTotalLength=function(){if(this.node.getTotalLength)return this.node.getTotalLength()};y.getPointAtLength=function(a){return na(this.attr(\"d\"),a)};y.getSubpath=function(b,d){return a.path.getSubpath(this.attr(\"d\"),\n",
       "b,d)};a._.box=w;a.path.findDotsAtSegment=u;a.path.bezierBBox=p;a.path.isPointInsideBBox=b;a.path.isBBoxIntersect=q;a.path.intersection=function(a,b){return l(a,b)};a.path.intersectionNumber=function(a,b){return l(a,b,1)};a.path.isPointInside=function(a,d,e){var h=r(a);return b(h,d,e)&&1==l(a,[[\"M\",d,e],[\"H\",h.x2+10] ],1)%2};a.path.getBBox=r;a.path.get={path:function(a){return a.attr(\"path\")},circle:function(a){a=V(a);return x(a.cx,a.cy,a.r)},ellipse:function(a){a=V(a);return x(a.cx||0,a.cy||0,a.rx,\n",
       "a.ry)},rect:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height,a.rx,a.ry)},image:function(a){a=V(a);return s(a.x||0,a.y||0,a.width,a.height)},line:function(a){return\"M\"+[a.attr(\"x1\")||0,a.attr(\"y1\")||0,a.attr(\"x2\"),a.attr(\"y2\")]},polyline:function(a){return\"M\"+a.attr(\"points\")},polygon:function(a){return\"M\"+a.attr(\"points\")+\"z\"},deflt:function(a){a=a.node.getBBox();return s(a.x,a.y,a.width,a.height)}};a.path.toRelative=function(b){var e=A(b),h=String.prototype.toLowerCase;if(e.rel)return d(e.rel);\n",
       "a.is(b,\"array\")&&a.is(b&&b[0],\"array\")||(b=a.parsePathString(b));var f=[],l=0,n=0,k=0,p=0,s=0;\"M\"==b[0][0]&&(l=b[0][1],n=b[0][2],k=l,p=n,s++,f.push([\"M\",l,n]));for(var r=b.length;s<r;s++){var q=f[s]=[],x=b[s];if(x[0]!=h.call(x[0]))switch(q[0]=h.call(x[0]),q[0]){case \"a\":q[1]=x[1];q[2]=x[2];q[3]=x[3];q[4]=x[4];q[5]=x[5];q[6]=+(x[6]-l).toFixed(3);q[7]=+(x[7]-n).toFixed(3);break;case \"v\":q[1]=+(x[1]-n).toFixed(3);break;case \"m\":k=x[1],p=x[2];default:for(var c=1,t=x.length;c<t;c++)q[c]=+(x[c]-(c%2?l:\n",
       "n)).toFixed(3)}else for(f[s]=[],\"m\"==x[0]&&(k=x[1]+l,p=x[2]+n),q=0,c=x.length;q<c;q++)f[s][q]=x[q];x=f[s].length;switch(f[s][0]){case \"z\":l=k;n=p;break;case \"h\":l+=+f[s][x-1];break;case \"v\":n+=+f[s][x-1];break;default:l+=+f[s][x-2],n+=+f[s][x-1]}}f.toString=z;e.rel=d(f);return f};a.path.toAbsolute=G;a.path.toCubic=I;a.path.map=function(a,b){if(!b)return a;var d,e,h,f,l,n,k;a=I(a);h=0;for(l=a.length;h<l;h++)for(k=a[h],f=1,n=k.length;f<n;f+=2)d=b.x(k[f],k[f+1]),e=b.y(k[f],k[f+1]),k[f]=d,k[f+1]=e;return a};\n",
       "a.path.toString=z;a.path.clone=d});C.plugin(function(a,v,y,C){var A=Math.max,w=Math.min,z=function(a){this.items=[];this.bindings={};this.length=0;this.type=\"set\";if(a)for(var f=0,n=a.length;f<n;f++)a[f]&&(this[this.items.length]=this.items[this.items.length]=a[f],this.length++)};v=z.prototype;v.push=function(){for(var a,f,n=0,k=arguments.length;n<k;n++)if(a=arguments[n])f=this.items.length,this[f]=this.items[f]=a,this.length++;return this};v.pop=function(){this.length&&delete this[this.length--];\n",
       "return this.items.pop()};v.forEach=function(a,f){for(var n=0,k=this.items.length;n<k&&!1!==a.call(f,this.items[n],n);n++);return this};v.animate=function(d,f,n,u){\"function\"!=typeof n||n.length||(u=n,n=L.linear);d instanceof a._.Animation&&(u=d.callback,n=d.easing,f=n.dur,d=d.attr);var p=arguments;if(a.is(d,\"array\")&&a.is(p[p.length-1],\"array\"))var b=!0;var q,e=function(){q?this.b=q:q=this.b},l=0,r=u&&function(){l++==this.length&&u.call(this)};return this.forEach(function(a,l){k.once(\"snap.animcreated.\"+\n",
       "a.id,e);b?p[l]&&a.animate.apply(a,p[l]):a.animate(d,f,n,r)})};v.remove=function(){for(;this.length;)this.pop().remove();return this};v.bind=function(a,f,k){var u={};if(\"function\"==typeof f)this.bindings[a]=f;else{var p=k||a;this.bindings[a]=function(a){u[p]=a;f.attr(u)}}return this};v.attr=function(a){var f={},k;for(k in a)if(this.bindings[k])this.bindings[k](a[k]);else f[k]=a[k];a=0;for(k=this.items.length;a<k;a++)this.items[a].attr(f);return this};v.clear=function(){for(;this.length;)this.pop()};\n",
       "v.splice=function(a,f,k){a=0>a?A(this.length+a,0):a;f=A(0,w(this.length-a,f));var u=[],p=[],b=[],q;for(q=2;q<arguments.length;q++)b.push(arguments[q]);for(q=0;q<f;q++)p.push(this[a+q]);for(;q<this.length-a;q++)u.push(this[a+q]);var e=b.length;for(q=0;q<e+u.length;q++)this.items[a+q]=this[a+q]=q<e?b[q]:u[q-e];for(q=this.items.length=this.length-=f-e;this[q];)delete this[q++];return new z(p)};v.exclude=function(a){for(var f=0,k=this.length;f<k;f++)if(this[f]==a)return this.splice(f,1),!0;return!1};\n",
       "v.insertAfter=function(a){for(var f=this.items.length;f--;)this.items[f].insertAfter(a);return this};v.getBBox=function(){for(var a=[],f=[],k=[],u=[],p=this.items.length;p--;)if(!this.items[p].removed){var b=this.items[p].getBBox();a.push(b.x);f.push(b.y);k.push(b.x+b.width);u.push(b.y+b.height)}a=w.apply(0,a);f=w.apply(0,f);k=A.apply(0,k);u=A.apply(0,u);return{x:a,y:f,x2:k,y2:u,width:k-a,height:u-f,cx:a+(k-a)/2,cy:f+(u-f)/2}};v.clone=function(a){a=new z;for(var f=0,k=this.items.length;f<k;f++)a.push(this.items[f].clone());\n",
       "return a};v.toString=function(){return\"Snap\\u2018s set\"};v.type=\"set\";a.set=function(){var a=new z;arguments.length&&a.push.apply(a,Array.prototype.slice.call(arguments,0));return a}});C.plugin(function(a,v,y,C){function A(a){var b=a[0];switch(b.toLowerCase()){case \"t\":return[b,0,0];case \"m\":return[b,1,0,0,1,0,0];case \"r\":return 4==a.length?[b,0,a[2],a[3] ]:[b,0];case \"s\":return 5==a.length?[b,1,1,a[3],a[4] ]:3==a.length?[b,1,1]:[b,1]}}function w(b,d,f){d=q(d).replace(/\\.{3}|\\u2026/g,b);b=a.parseTransformString(b)||\n",
       "[];d=a.parseTransformString(d)||[];for(var k=Math.max(b.length,d.length),p=[],v=[],h=0,w,z,y,I;h<k;h++){y=b[h]||A(d[h]);I=d[h]||A(y);if(y[0]!=I[0]||\"r\"==y[0].toLowerCase()&&(y[2]!=I[2]||y[3]!=I[3])||\"s\"==y[0].toLowerCase()&&(y[3]!=I[3]||y[4]!=I[4])){b=a._.transform2matrix(b,f());d=a._.transform2matrix(d,f());p=[[\"m\",b.a,b.b,b.c,b.d,b.e,b.f] ];v=[[\"m\",d.a,d.b,d.c,d.d,d.e,d.f] ];break}p[h]=[];v[h]=[];w=0;for(z=Math.max(y.length,I.length);w<z;w++)w in y&&(p[h][w]=y[w]),w in I&&(v[h][w]=I[w])}return{from:u(p),\n",
       "to:u(v),f:n(p)}}function z(a){return a}function d(a){return function(b){return+b.toFixed(3)+a}}function f(b){return a.rgb(b[0],b[1],b[2])}function n(a){var b=0,d,f,k,n,h,p,q=[];d=0;for(f=a.length;d<f;d++){h=\"[\";p=['\"'+a[d][0]+'\"'];k=1;for(n=a[d].length;k<n;k++)p[k]=\"val[\"+b++ +\"]\";h+=p+\"]\";q[d]=h}return Function(\"val\",\"return Snap.path.toString.call([\"+q+\"])\")}function u(a){for(var b=[],d=0,f=a.length;d<f;d++)for(var k=1,n=a[d].length;k<n;k++)b.push(a[d][k]);return b}var p={},b=/[a-z]+$/i,q=String;\n",
       "p.stroke=p.fill=\"colour\";v.prototype.equal=function(a,b){return k(\"snap.util.equal\",this,a,b).firstDefined()};k.on(\"snap.util.equal\",function(e,k){var r,s;r=q(this.attr(e)||\"\");var x=this;if(r==+r&&k==+k)return{from:+r,to:+k,f:z};if(\"colour\"==p[e])return r=a.color(r),s=a.color(k),{from:[r.r,r.g,r.b,r.opacity],to:[s.r,s.g,s.b,s.opacity],f:f};if(\"transform\"==e||\"gradientTransform\"==e||\"patternTransform\"==e)return k instanceof a.Matrix&&(k=k.toTransformString()),a._.rgTransform.test(k)||(k=a._.svgTransform2string(k)),\n",
       "w(r,k,function(){return x.getBBox(1)});if(\"d\"==e||\"path\"==e)return r=a.path.toCubic(r,k),{from:u(r[0]),to:u(r[1]),f:n(r[0])};if(\"points\"==e)return r=q(r).split(a._.separator),s=q(k).split(a._.separator),{from:r,to:s,f:function(a){return a}};aUnit=r.match(b);s=q(k).match(b);return aUnit&&aUnit==s?{from:parseFloat(r),to:parseFloat(k),f:d(aUnit)}:{from:this.asPX(e),to:this.asPX(e,k),f:z}})});C.plugin(function(a,v,y,C){var A=v.prototype,w=\"createTouch\"in C.doc;v=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\".split(\" \");\n",
       "var z={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},d=function(a,b){var d=\"y\"==a?\"scrollTop\":\"scrollLeft\",e=b&&b.node?b.node.ownerDocument:C.doc;return e[d in e.documentElement?\"documentElement\":\"body\"][d]},f=function(){this.returnValue=!1},n=function(){return this.originalEvent.preventDefault()},u=function(){this.cancelBubble=!0},p=function(){return this.originalEvent.stopPropagation()},b=function(){if(C.doc.addEventListener)return function(a,b,e,f){var k=w&&z[b]?z[b]:b,l=function(k){var l=\n",
       "d(\"y\",f),q=d(\"x\",f);if(w&&z.hasOwnProperty(b))for(var r=0,u=k.targetTouches&&k.targetTouches.length;r<u;r++)if(k.targetTouches[r].target==a||a.contains(k.targetTouches[r].target)){u=k;k=k.targetTouches[r];k.originalEvent=u;k.preventDefault=n;k.stopPropagation=p;break}return e.call(f,k,k.clientX+q,k.clientY+l)};b!==k&&a.addEventListener(b,l,!1);a.addEventListener(k,l,!1);return function(){b!==k&&a.removeEventListener(b,l,!1);a.removeEventListener(k,l,!1);return!0}};if(C.doc.attachEvent)return function(a,\n",
       "b,e,h){var k=function(a){a=a||h.node.ownerDocument.window.event;var b=d(\"y\",h),k=d(\"x\",h),k=a.clientX+k,b=a.clientY+b;a.preventDefault=a.preventDefault||f;a.stopPropagation=a.stopPropagation||u;return e.call(h,a,k,b)};a.attachEvent(\"on\"+b,k);return function(){a.detachEvent(\"on\"+b,k);return!0}}}(),q=[],e=function(a){for(var b=a.clientX,e=a.clientY,f=d(\"y\"),l=d(\"x\"),n,p=q.length;p--;){n=q[p];if(w)for(var r=a.touches&&a.touches.length,u;r--;){if(u=a.touches[r],u.identifier==n.el._drag.id||n.el.node.contains(u.target)){b=\n",
       "u.clientX;e=u.clientY;(a.originalEvent?a.originalEvent:a).preventDefault();break}}else a.preventDefault();b+=l;e+=f;k(\"snap.drag.move.\"+n.el.id,n.move_scope||n.el,b-n.el._drag.x,e-n.el._drag.y,b,e,a)}},l=function(b){a.unmousemove(e).unmouseup(l);for(var d=q.length,f;d--;)f=q[d],f.el._drag={},k(\"snap.drag.end.\"+f.el.id,f.end_scope||f.start_scope||f.move_scope||f.el,b);q=[]};for(y=v.length;y--;)(function(d){a[d]=A[d]=function(e,f){a.is(e,\"function\")&&(this.events=this.events||[],this.events.push({name:d,\n",
       "f:e,unbind:b(this.node||document,d,e,f||this)}));return this};a[\"un\"+d]=A[\"un\"+d]=function(a){for(var b=this.events||[],e=b.length;e--;)if(b[e].name==d&&(b[e].f==a||!a)){b[e].unbind();b.splice(e,1);!b.length&&delete this.events;break}return this}})(v[y]);A.hover=function(a,b,d,e){return this.mouseover(a,d).mouseout(b,e||d)};A.unhover=function(a,b){return this.unmouseover(a).unmouseout(b)};var r=[];A.drag=function(b,d,f,h,n,p){function u(r,v,w){(r.originalEvent||r).preventDefault();this._drag.x=v;\n",
       "this._drag.y=w;this._drag.id=r.identifier;!q.length&&a.mousemove(e).mouseup(l);q.push({el:this,move_scope:h,start_scope:n,end_scope:p});d&&k.on(\"snap.drag.start.\"+this.id,d);b&&k.on(\"snap.drag.move.\"+this.id,b);f&&k.on(\"snap.drag.end.\"+this.id,f);k(\"snap.drag.start.\"+this.id,n||h||this,v,w,r)}if(!arguments.length){var v;return this.drag(function(a,b){this.attr({transform:v+(v?\"T\":\"t\")+[a,b]})},function(){v=this.transform().local})}this._drag={};r.push({el:this,start:u});this.mousedown(u);return this};\n",
       "A.undrag=function(){for(var b=r.length;b--;)r[b].el==this&&(this.unmousedown(r[b].start),r.splice(b,1),k.unbind(\"snap.drag.*.\"+this.id));!r.length&&a.unmousemove(e).unmouseup(l);return this}});C.plugin(function(a,v,y,C){y=y.prototype;var A=/^\\s*url\\((.+)\\)/,w=String,z=a._.$;a.filter={};y.filter=function(d){var f=this;\"svg\"!=f.type&&(f=f.paper);d=a.parse(w(d));var k=a._.id(),u=z(\"filter\");z(u,{id:k,filterUnits:\"userSpaceOnUse\"});u.appendChild(d.node);f.defs.appendChild(u);return new v(u)};k.on(\"snap.util.getattr.filter\",\n",
       "function(){k.stop();var d=z(this.node,\"filter\");if(d)return(d=w(d).match(A))&&a.select(d[1])});k.on(\"snap.util.attr.filter\",function(d){if(d instanceof v&&\"filter\"==d.type){k.stop();var f=d.node.id;f||(z(d.node,{id:d.id}),f=d.id);z(this.node,{filter:a.url(f)})}d&&\"none\"!=d||(k.stop(),this.node.removeAttribute(\"filter\"))});a.filter.blur=function(d,f){null==d&&(d=2);return a.format('<feGaussianBlur stdDeviation=\"{def}\"/>',{def:null==f?d:[d,f]})};a.filter.blur.toString=function(){return this()};a.filter.shadow=\n",
       "function(d,f,k,u,p){\"string\"==typeof k&&(p=u=k,k=4);\"string\"!=typeof u&&(p=u,u=\"#000\");null==k&&(k=4);null==p&&(p=1);null==d&&(d=0,f=2);null==f&&(f=d);u=a.color(u||\"#000\");return a.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>',\n",
       "{color:u,dx:d,dy:f,blur:k,opacity:p})};a.filter.shadow.toString=function(){return this()};a.filter.grayscale=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>',{a:0.2126+0.7874*(1-d),b:0.7152-0.7152*(1-d),c:0.0722-0.0722*(1-d),d:0.2126-0.2126*(1-d),e:0.7152+0.2848*(1-d),f:0.0722-0.0722*(1-d),g:0.2126-0.2126*(1-d),h:0.0722+0.9278*(1-d)})};a.filter.grayscale.toString=function(){return this()};a.filter.sepia=\n",
       "function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>',{a:0.393+0.607*(1-d),b:0.769-0.769*(1-d),c:0.189-0.189*(1-d),d:0.349-0.349*(1-d),e:0.686+0.314*(1-d),f:0.168-0.168*(1-d),g:0.272-0.272*(1-d),h:0.534-0.534*(1-d),i:0.131+0.869*(1-d)})};a.filter.sepia.toString=function(){return this()};a.filter.saturate=function(d){null==d&&(d=1);return a.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>',{amount:1-\n",
       "d})};a.filter.saturate.toString=function(){return this()};a.filter.hueRotate=function(d){return a.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>',{angle:d||0})};a.filter.hueRotate.toString=function(){return this()};a.filter.invert=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>',{amount:d,\n",
       "amount2:1-d})};a.filter.invert.toString=function(){return this()};a.filter.brightness=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>',{amount:d})};a.filter.brightness.toString=function(){return this()};a.filter.contrast=function(d){null==d&&(d=1);return a.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>',\n",
       "{amount:d,amount2:0.5-d/2})};a.filter.contrast.toString=function(){return this()}});return C});\n",
       "\n",
       "]]> </script>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.24531268595565908cx, -0.5784828429610814cy), (-0.24249116731380066cx, 0.1324318425847991cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2663045450343075cx, 0.5950573966704097cy), (0.2863857216813604cx, 0.33989728688549914cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.24097922255507584cx, 0.6050546132380323cy), (-0.21947564676829565cx, 0.18435616307663794cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.33808271202234785cx, 0.4803495957345638cy), (0.2973859695937361cx, 0.33878584184474403cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3199271994668305cx, 0.49442148080745657cy), (-0.21564520877963425cx, 0.17917004953061272cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.5149364216909293cx, -0.3626967207160038cy), (0.07958234721673502cx, -0.3169015294782529cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.5304123690108636cx, -0.3381875409364677cy), (-0.2578092484359519cx, 0.13654958894807973cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.42636590073273156cx, -0.23053658801850768cy), (0.07986334648918207cx, -0.3097275212072394cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.4420271401528931cx, -0.19859096991303604cy), (-0.2573429570632776cx, 0.13628715889315768cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.08059039842992297cx, -0.306335428753217cy), (-0.5530980996919946cx, -0.1329270543835755cy)])  …  Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.6355458264603132cx, 0.7577381360557934cy), (-0.25947750847170387cx, 0.18930157698889025cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.5792408769007191cx, -0.2313685809414811cy), (-0.2624953690215435cx, 0.139851482270484cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.13994578627935172cx, 0.691299922531818cy), (-0.22417899560588528cx, 0.18855392312643032cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.13826989528723693cx, 0.7050302125782639cy), (-0.23651510214953814cx, 0.1938915691193565cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.15641125849338244cx, 0.4696822801115982cy), (-0.2177746401950731cx, 0.18232679129843177cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.33837408416813525cx, -0.08367480639340873cy), (-0.2535974964274151cx, 0.13453631860522328cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.01225800101875225cx, -0.03779979826942606cy), (-0.21804011977749355cx, 0.14421301293910763cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.24971926267669953cx, 0.19356500371981725cy), (-0.3426735962001016cx, 0.5744874874679028cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.23499168036424187cx, 0.133321734473996cy), (-0.13391046299435508cx, -0.27940149823946314cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2469248305832837cx, 0.13276823185121928cy), (-0.3336589089432861cx, -0.45105201360702935cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.3721042037676254mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.2454357540138682cx, -0.6094912823895904cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.26387167504237174cx, 0.6259704943013622cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.3466500899427878cx, 0.5101512483247612cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.545853518191224cx, -0.36507823400169603cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.45700199796057916cx, -0.22574409303318643cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.11049944371702969cx, -0.31452001619256065cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.5830071449791013cx, -0.12474246694423186cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8248346310913424cx, 0.7794109594529575cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.37179419371148914cx, -0.3478949034498273cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.26007627848665704cx, -0.23978221275364575cy), 0.012403473458920847w)  …  Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.1810047175539009cx, 0.4885687893967219cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3496034813399588cx, -0.1125787698014935cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.19214865209584242cx, -0.9932020247897582cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.036585980496850246cx, -0.0570270673436265cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7061746195661649cx, 0.09667205151281566cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, 0.49143186659646987cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.24236809925559155cx, 0.16344028201330807cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3500247596212096cx, 0.6046122091744119cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.1265340441030054cx, -0.30952004577877523cy), 0.012403473458920847w), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3382156402709783cx, -0.48172406376911814cy), 0.012403473458920847w)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(BBox{l,t,r,b,w,h = 0.0w,0.0h, 1.0w,1.0h, 1.0w,1.0h}, nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.2454357540138682cx, -0.6094912823895904cy), \"1\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.26387167504237174cx, 0.6259704943013622cy), \"2\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.3466500899427878cx, 0.5101512483247612cy), \"3\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.545853518191224cx, -0.36507823400169603cy), \"4\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.45700199796057916cx, -0.22574409303318643cy), \"5\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.11049944371702969cx, -0.31452001619256065cy), \"6\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5830071449791013cx, -0.12474246694423186cy), \"7\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8248346310913424cx, 0.7794109594529575cy), \"8\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.37179419371148914cx, -0.3478949034498273cy), \"9\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.26007627848665704cx, -0.23978221275364575cy), \"10\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))  …  Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.1810047175539009cx, 0.4885687893967219cy), \"56\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3496034813399588cx, -0.1125787698014935cy), \"57\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.19214865209584242cx, -0.9932020247897582cy), \"58\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.036585980496850246cx, -0.0570270673436265cy), \"59\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7061746195661649cx, 0.09667205151281566cy), \"60\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, 0.49143186659646987cy), \"61\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.24236809925559155cx, 0.16344028201330807cy), \"62\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3500247596212096cx, 0.6046122091744119cy), \"63\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.1265340441030054cx, -0.30952004577877523cy), \"64\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3382156402709783cx, -0.48172406376911814cy), \"65\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "using CSV\n",
    "using DataFrames\n",
    "\n",
    "\n",
    "f=CSV.read(\"dataset_updated.csv\",DataFrame)\n",
    "\n",
    "data_2020_2021 = filter(row -> row[\"Connected On\"] in [2020,2021,2022,2023], f)\n",
    "\n",
    "h=unique(data_2020_2021[!,2])\n",
    "y=unique(data_2020_2021[!,1])\n",
    "\n",
    "\n",
    "s=Set()\n",
    "\n",
    "for i in h\n",
    "    push!(s,i)\n",
    "end\n",
    "\n",
    "for i in y\n",
    "    push!(s,i)\n",
    "end\n",
    "\n",
    "ed = Dict()\n",
    "\n",
    "count=0\n",
    "\n",
    "for i in s\n",
    "    count+=1\n",
    "    ed[i]=count\n",
    "end\n",
    "\n",
    "\n",
    "tu=()\n",
    "\n",
    "\n",
    "l=[]\n",
    "\n",
    "for i in eachrow(data_2020_2021)\n",
    "    push!(l, (ed[i[:1]],ed[i[:2]]))\n",
    "end\n",
    "\n",
    "\n",
    "for i in eachrow(data_2020_2021)\n",
    "    push!(l, (ed[i[:1]],ed[i[:2]]))\n",
    "end\n",
    "\n",
    "\n",
    "\n",
    "using Graphs, GraphPlot\n",
    "\n",
    "g = let \n",
    "    edges = Edge.(l)\n",
    "    Graph(edges)\n",
    "end\n",
    "\n",
    "gplot(g, nodelabel=1:count)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e028bc04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><div style = \"float: left;\"><span>120×8 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">95 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">source</th><th style = \"text-align: left;\">Target</th><th style = \"text-align: left;\">Company</th><th style = \"text-align: left;\">Position</th><th style = \"text-align: left;\">Connected On</th><th style = \"text-align: left;\">University</th><th style = \"text-align: left;\">Skills</th><th style = \"text-align: left;\">City</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String15\" style = \"text-align: left;\">String15</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Student Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Barath</td><td style = \"text-align: left;\">Trimble Inc.</td><td style = \"text-align: left;\">Working Student (Automotive GNSS / INS )</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Sri Krishna College of Technology</td><td style = \"text-align: left;\">Python, Java, SQL</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Maria</td><td style = \"text-align: left;\">Amazon FC Graben GmbH</td><td style = \"text-align: left;\">Automation Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">Amazon</td><td style = \"text-align: left;\">Digital Associate</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: left;\">DiFACTO Robotics and Automation</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: left;\">Stealth Mode Startup - Data and Analytics</td><td style = \"text-align: left;\">Founder</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Senior Software Engineer - L3</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: left;\">Wells Fargo</td><td style = \"text-align: left;\">Vice President  - Systems Operations Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: left;\">ST JOHNS RIVER-TO-SEA LOOP ALLIANCE</td><td style = \"text-align: left;\">Data Analyst Intern</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Tamilmani</td><td style = \"text-align: left;\">Cognizant</td><td style = \"text-align: left;\">Associate - Projects</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Meril</td><td style = \"text-align: left;\">Higher Education Forum</td><td style = \"text-align: left;\">Content Team</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Anna University</td><td style = \"text-align: left;\">R, Html, JavaScript</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Lakshman</td><td style = \"text-align: left;\">Hitachi Energy</td><td style = \"text-align: left;\">Intern</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Gowtham</td><td style = \"text-align: left;\">Santhosh</td><td style = \"text-align: left;\">Ford Motor Company</td><td style = \"text-align: left;\">Data Strategy Analyst</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">109</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Vignesh</td><td style = \"text-align: left;\">Accenture</td><td style = \"text-align: left;\">Associate Manufacturing Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">110</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Iqjas</td><td style = \"text-align: left;\">DiFACTO Robotics and Automation</td><td style = \"text-align: left;\">Robotics Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">Python, Java, R</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">111</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Karthik</td><td style = \"text-align: left;\">Stealth Mode Startup - Data and Analytics</td><td style = \"text-align: left;\">Founder</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">112</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Venkatesh</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Senior Software Engineer - L3</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">PSG College of Arts and Science</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Bangalore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">113</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Suseendrababu</td><td style = \"text-align: left;\">Wells Fargo</td><td style = \"text-align: left;\">Vice President  - Systems Operations Manager</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Html, JavaScript, AngularJS</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">114</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Harishma</td><td style = \"text-align: left;\">ST JOHNS RIVER-TO-SEA LOOP ALLIANCE</td><td style = \"text-align: left;\">Data Analyst Intern</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">SRM University</td><td style = \"text-align: left;\">MSOffice, SQL, Python</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">115</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Arjun</td><td style = \"text-align: left;\">Tata Consultancy Services</td><td style = \"text-align: left;\">System Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">National Institute of Technology</td><td style = \"text-align: left;\">C++, Julia, PowerBI</td><td style = \"text-align: left;\">Chennai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">116</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Rithika</td><td style = \"text-align: left;\">ZF Group</td><td style = \"text-align: left;\">Supply Chain Management</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bharathiyar University</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Mumbai</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">117</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Sruthi</td><td style = \"text-align: left;\">Curl</td><td style = \"text-align: left;\">Quality Analyst</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Bits Pilani</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Delhi</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">118</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Kaarthicsudhan</td><td style = \"text-align: left;\">SchuF Speciality Valves India Pvt Ltd </td><td style = \"text-align: left;\">Process Project Engineer</td><td style = \"text-align: right;\">2023</td><td style = \"text-align: left;\">Indian Institute of Technology</td><td style = \"text-align: left;\">Python, Tableau, PowerBI</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">119</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Ajay</td><td style = \"text-align: left;\">SHV Energy</td><td style = \"text-align: left;\">Executive Trainee - Operations </td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Thiyagarajar College of Engineering</td><td style = \"text-align: left;\">R, SQL, Tableau</td><td style = \"text-align: left;\">Coimbatore</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">120</td><td style = \"text-align: left;\">Snega</td><td style = \"text-align: left;\">Thirumalai</td><td style = \"text-align: left;\">Wipro Limited</td><td style = \"text-align: left;\">Project Engineer</td><td style = \"text-align: right;\">2022</td><td style = \"text-align: left;\">Hindustan College of Technology</td><td style = \"text-align: left;\">Python, Java</td><td style = \"text-align: left;\">Bangalore</td></tr></tbody></table></div>"
      ],
      "text/latex": [
       "\\begin{tabular}{r|ccccc}\n",
       "\t& source & Target & Company & Position & \\\\\n",
       "\t\\hline\n",
       "\t& String15 & String31 & String & String & \\\\\n",
       "\t\\hline\n",
       "\t1 & Gowtham & Snega & Cognizant & Student Manager & $\\dots$ \\\\\n",
       "\t2 & Gowtham & Barath & Trimble Inc. & Working Student (Automotive GNSS / INS ) & $\\dots$ \\\\\n",
       "\t3 & Gowtham & Maria & Amazon FC Graben GmbH & Automation Engineer & $\\dots$ \\\\\n",
       "\t4 & Gowtham & Vignesh & Amazon & Digital Associate & $\\dots$ \\\\\n",
       "\t5 & Gowtham & Iqjas & DiFACTO Robotics and Automation & Robotics Engineer & $\\dots$ \\\\\n",
       "\t6 & Gowtham & Karthik & Stealth Mode Startup - Data and Analytics & Founder & $\\dots$ \\\\\n",
       "\t7 & Gowtham & Venkatesh & Curl & Senior Software Engineer - L3 & $\\dots$ \\\\\n",
       "\t8 & Gowtham & Suseendrababu & Wells Fargo & Vice President  - Systems Operations Manager & $\\dots$ \\\\\n",
       "\t9 & Gowtham & Harishma & ST JOHNS RIVER-TO-SEA LOOP ALLIANCE & Data Analyst Intern & $\\dots$ \\\\\n",
       "\t10 & Gowtham & Tamilmani & Cognizant & Associate - Projects & $\\dots$ \\\\\n",
       "\t11 & Gowtham & Meril & Higher Education Forum & Content Team & $\\dots$ \\\\\n",
       "\t12 & Gowtham & Lakshman & Hitachi Energy & Intern & $\\dots$ \\\\\n",
       "\t13 & Gowtham & Santhosh & Ford Motor Company & Data Strategy Analyst & $\\dots$ \\\\\n",
       "\t14 & Gowtham & Suhaina & Netcracker Technology & Associate Business Analyst & $\\dots$ \\\\\n",
       "\t15 & Gowtham & Kiran & DSCPU & Campus hero  & $\\dots$ \\\\\n",
       "\t16 & Gowtham & Debasish & Biorad Medisys Pvt Ltd & G.M. R\\&D & $\\dots$ \\\\\n",
       "\t17 & Gowtham & Pradeep & Self-employed & Oracle EBS Techno Functional Consultant & $\\dots$ \\\\\n",
       "\t18 & Gowtham & Subhendra Kr. & Naresh i Technologies & Oracle Database Administrator & $\\dots$ \\\\\n",
       "\t19 & Gowtham & vasanth & MoEVing & Operations Manager & $\\dots$ \\\\\n",
       "\t20 & Gowtham & Barath & Amazon & Digital Associate & $\\dots$ \\\\\n",
       "\t21 & Gowtham & Senthilmani & SAM ROBOTICS \\& AUTOMATION & Managing Director & $\\dots$ \\\\\n",
       "\t22 & Gowtham & Sakthivel  & TRAPO & Project Intern & $\\dots$ \\\\\n",
       "\t23 & Gowtham & Steve & Kaiko & Research Analyst  & $\\dots$ \\\\\n",
       "\t24 & Gowtham & Tarun & Plant Lipids Private Limited & Purchase Officer & $\\dots$ \\\\\n",
       "\t25 & Gowtham & Surya & University of Michigan-Dearborn & Graduate Student Research Assistant & $\\dots$ \\\\\n",
       "\t26 & Gowtham & Annamalai & Hitachi Energy & Intern & $\\dots$ \\\\\n",
       "\t27 & Gowtham & Bani Immanuel & i-exceed  & Scrum Master - Trainee & $\\dots$ \\\\\n",
       "\t28 & Gowtham & Indrajith & MulticoreWare Inc & Senior Software Engineer & $\\dots$ \\\\\n",
       "\t29 & Gowtham & Prakash & PSG College of Technology & Robotics Developer & $\\dots$ \\\\\n",
       "\t30 & Gowtham & Vijaya rajan & AROBOTNX Solutions Pvt Ltd & Sr. Engineer - Projects & $\\dots$ \\\\\n",
       "\t$\\dots$ & $\\dots$ & $\\dots$ & $\\dots$ & $\\dots$ &  \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/plain": [
       "\u001b[1m120×8 DataFrame\u001b[0m\n",
       "\u001b[1m Row \u001b[0m│\u001b[1m source   \u001b[0m\u001b[1m Target         \u001b[0m\u001b[1m Company                           \u001b[0m\u001b[1m Position  \u001b[0m ⋯\n",
       "     │\u001b[90m String15 \u001b[0m\u001b[90m String31       \u001b[0m\u001b[90m String                            \u001b[0m\u001b[90m String    \u001b[0m ⋯\n",
       "─────┼──────────────────────────────────────────────────────────────────────────\n",
       "   1 │ Gowtham   Snega           Cognizant                          Student Ma ⋯\n",
       "   2 │ Gowtham   Barath          Trimble Inc.                       Working St\n",
       "   3 │ Gowtham   Maria           Amazon FC Graben GmbH              Automation\n",
       "   4 │ Gowtham   Vignesh         Amazon                             Digital As\n",
       "   5 │ Gowtham   Iqjas           DiFACTO Robotics and Automation    Robotics E ⋯\n",
       "   6 │ Gowtham   Karthik         Stealth Mode Startup - Data and …  Founder\n",
       "   7 │ Gowtham   Venkatesh       Curl                               Senior Sof\n",
       "   8 │ Gowtham   Suseendrababu   Wells Fargo                        Vice Presi\n",
       "   9 │ Gowtham   Harishma        ST JOHNS RIVER-TO-SEA LOOP ALLIA…  Data Analy ⋯\n",
       "  10 │ Gowtham   Tamilmani       Cognizant                          Associate\n",
       "  11 │ Gowtham   Meril           Higher Education Forum             Content Te\n",
       "  ⋮  │    ⋮            ⋮                         ⋮                             ⋱\n",
       " 111 │ Snega     Karthik         Stealth Mode Startup - Data and …  Founder\n",
       " 112 │ Snega     Venkatesh       Curl                               Senior Sof ⋯\n",
       " 113 │ Snega     Suseendrababu   Wells Fargo                        Vice Presi\n",
       " 114 │ Snega     Harishma        ST JOHNS RIVER-TO-SEA LOOP ALLIA…  Data Analy\n",
       " 115 │ Snega     Arjun           Tata Consultancy Services          System Eng\n",
       " 116 │ Snega     Rithika         ZF Group                           Supply Cha ⋯\n",
       " 117 │ Snega     Sruthi          Curl                               Quality An\n",
       " 118 │ Snega     Kaarthicsudhan  SchuF Speciality Valves India Pv…  Process Pr\n",
       " 119 │ Snega     Ajay            SHV Energy                         Executive\n",
       " 120 │ Snega     Thirumalai      Wipro Limited                      Project En ⋯\n",
       "\u001b[36m                                                   5 columns and 99 rows omitted\u001b[0m"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "d022054a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "similar (generic function with 1 method)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sw=Dict()\n",
    "str=[]\n",
    "\n",
    "function similar(name,df)\n",
    "    name1=name\n",
    "    company=\"s\"\n",
    "    university=\"s\"\n",
    "    year=0\n",
    "    city=\"s\"\n",
    "    for i in eachrow(df)\n",
    "        if name1==i[:2]\n",
    "            company=i[:3]\n",
    "            university=i[:6]\n",
    "            city=i[:8]\n",
    "            year=i[:5]\n",
    "        end\n",
    "    end\n",
    "    \n",
    "    for i in eachrow(df)\n",
    "        \n",
    "        if i[:2]!=name1\n",
    "            count=0\n",
    "\n",
    "            if i[:3]==company\n",
    "                count+=1\n",
    "            end\n",
    "\n",
    "            if i[:6]==university\n",
    "                count+=1\n",
    "            end\n",
    "\n",
    "            if i[:5]==year\n",
    "                count+=1\n",
    "            end\n",
    "\n",
    "            if i[:8]==city\n",
    "                count+=1\n",
    "            end\n",
    "\n",
    "            sw[( ed[name1] , ed[i[:2]]    )]=count\n",
    "            sw[( ed[i[:2]] , ed[name1]    )]=count\n",
    "\n",
    "            if count>=2\n",
    "                println(i[:2])\n",
    "            end\n",
    "        end\n",
    "\n",
    "        \n",
    "    end\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "be3bf853",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Snega\n",
      "Tamilmani\n",
      "Meril\n",
      "Kiran\n",
      "Pradeep\n",
      "Subhendra Kr.\n",
      "Rohith \n",
      "Krishna Sai Gupta\n",
      "Tamilmani\n",
      "Meril\n",
      "Kiran\n",
      "Pradeep\n",
      "Subhendra Kr.\n",
      "Sahaanah\n"
     ]
    }
   ],
   "source": [
    "similar(\"Gowtham\",f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ffe1f4df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Snega\n",
      "Tamilmani\n",
      "Meril\n",
      "Kiran\n",
      "Pradeep\n",
      "Subhendra Kr.\n",
      "Gowtham\n",
      "Rohith \n",
      "Krishna Sai Gupta\n",
      "Tamilmani\n",
      "Meril\n",
      "Kiran\n",
      "Pradeep\n",
      "Subhendra Kr.\n"
     ]
    }
   ],
   "source": [
    "similar(\"Sahaanah\",f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "bf27c183",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Barath\n",
      "Maria\n",
      "Kiran\n",
      "Gowtham\n",
      "Arjun\n",
      "Kiran\n",
      "Sahaanah\n",
      "Barath\n",
      "Maria\n",
      "Arjun\n"
     ]
    }
   ],
   "source": [
    "similar(\"Snega\",f)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c8e8eff",
   "metadata": {},
   "source": [
    "## Inferences:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18387a38",
   "metadata": {},
   "source": [
    "The above code has been implemented based on the idea of recommendation systems. Given a person's name, it displays a list of people who are more likely to have the same characteristics of that person. As a result, an individual can build his career and expand his/her network and connections.\n",
    "\n",
    "The people similar to Gowtham, Snega and Sahaanah have been computed in the above code."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48eb0d34",
   "metadata": {},
   "source": [
    "# Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43fb8fa5",
   "metadata": {},
   "source": [
    "In this project, we have performed a detailed analysis of the Linkedin dataset based on various graph theory concepts like homophily, strong and weak ties, community detection and triadic closure.\n",
    "The real-time Linkedin data has been observed to be lightly knit with three communities having a number of common connections.\n",
    "Furthermore, it can be seen that the computer generated output matches with the actual network connections to about 75%.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dbefaf71",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Julia 1.9.2",
   "language": "julia",
   "name": "julia-1.9"
  },
  "language_info": {
   "file_extension": ".jl",
   "mimetype": "application/julia",
   "name": "julia",
   "version": "1.9.2"
  },
  "toc-showtags": false
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
